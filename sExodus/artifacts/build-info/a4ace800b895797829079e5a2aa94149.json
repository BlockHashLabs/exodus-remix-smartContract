{
	"id": "a4ace800b895797829079e5a2aa94149",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"sExodus/sOlympusERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.7.5;\n\nimport \"./Address.sol\";\nimport \"./SafeMath.sol\";\n\nimport \"./ERC20Permit.sol\";\n\nimport \"./IgOHM.sol\";\nimport \"./IsOHM.sol\";\nimport \"./IStaking.sol\";\n\ncontract sExodus is IsEXO, ERC20Permit {\n    /* ========== DEPENDENCIES ========== */\n\n    using SafeMath for uint256;\n\n    /* ========== EVENTS ========== */\n\n    event LogSupply(uint256 indexed epoch, uint256 totalSupply);\n    event LogRebase(uint256 indexed epoch, uint256 rebase, uint256 index);\n    event LogStakingContractUpdated(address stakingContract);\n\n    /* ========== MODIFIERS ========== */\n\n    modifier onlyStakingContract() {\n        require(msg.sender == stakingContract, \"StakingContract:  call is not staking contract\");\n        _;\n    }\n\n    /* ========== DATA STRUCTURES ========== */\n\n    struct Rebase {\n        uint256 epoch;\n        uint256 rebase; // 18 decimals\n        uint256 totalStakedBefore;\n        uint256 totalStakedAfter;\n        uint256 amountRebased;\n        uint256 index;\n        uint256 blockNumberOccured;\n    }\n\n    /* ========== STATE VARIABLES ========== */\n\n    address internal initializer;\n\n    uint256 internal INDEX; // Index Gons - tracks rebase growth\n\n    address public stakingContract; // balance used to calc rebase\n    IgEXO public gEXO; // additional staked supply (governance token)\n\n    Rebase[] public rebases; // past rebase data\n\n    uint256 private constant MAX_UINT256 = type(uint256).max;\n    uint256 private constant INITIAL_FRAGMENTS_SUPPLY = 5_000_000 * 10**9;\n\n    // TOTAL_GONS is a multiple of INITIAL_FRAGMENTS_SUPPLY so that _gonsPerFragment is an integer.\n    // Use the highest value that fits in a uint256 for max granularity.\n    uint256 private constant TOTAL_GONS = MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY);\n\n    // MAX_SUPPLY = maximum integer < (sqrt(4*TOTAL_GONS + 1) - 1) / 2\n    uint256 private constant MAX_SUPPLY = ~uint128(0); // (2^128) - 1\n\n    uint256 private _gonsPerFragment;\n    mapping(address => uint256) private _gonBalances;\n\n    mapping(address => mapping(address => uint256)) private _allowedValue;\n\n    address public treasury;\n    mapping(address => uint256) public override debtBalances;\n\n    /* ========== CONSTRUCTOR ========== */\n\n    constructor() ERC20(\"Staked EXO\", \"sEXO\", 9) ERC20Permit(\"Staked EXO\") {\n        initializer = msg.sender;\n        _totalSupply = INITIAL_FRAGMENTS_SUPPLY;\n        _gonsPerFragment = TOTAL_GONS.div(_totalSupply);\n    }\n\n    /* ========== INITIALIZATION ========== */\n\n    function setIndex(uint256 _index) external {\n        require(msg.sender == initializer, \"Initializer:  caller is not initializer\");\n        require(INDEX == 0, \"Cannot set INDEX again\");\n        INDEX = gonsForBalance(_index);\n    }\n\n    function setgOHM(address _gEXO) external {\n        require(msg.sender == initializer, \"Initializer:  caller is not initializer\");\n        require(address(gEXO) == address(0), \"gEXO:  gEXO already set\");\n        require(_gEXO != address(0), \"gEXO:  gEXO is not a valid contract\");\n        gEXO = IgEXO(_gEXO);\n    }\n\n    // do this last\n    function initialize(address _stakingContract, address _treasury) external {\n        require(msg.sender == initializer, \"Initializer:  caller is not initializer\");\n\n        require(_stakingContract != address(0), \"Staking\");\n        stakingContract = _stakingContract;\n        _gonBalances[stakingContract] = TOTAL_GONS;\n\n        require(_treasury != address(0), \"Zero address: Treasury\");\n        treasury = _treasury;\n\n        emit Transfer(address(0x0), stakingContract, _totalSupply);\n        emit LogStakingContractUpdated(stakingContract);\n\n        initializer = address(0);\n    }\n\n    /* ========== REBASE ========== */\n\n    /**\n        @notice increases rOHM supply to increase staking balances relative to profit_\n        @param profit_ uint256\n        @return uint256\n     */\n    function rebase(uint256 profit_, uint256 epoch_) public override onlyStakingContract returns (uint256) {\n        uint256 rebaseAmount;\n        uint256 circulatingSupply_ = circulatingSupply();\n        if (profit_ == 0) {\n            emit LogSupply(epoch_, _totalSupply);\n            emit LogRebase(epoch_, 0, index());\n            return _totalSupply;\n        } else if (circulatingSupply_ > 0) {\n            rebaseAmount = profit_.mul(_totalSupply).div(circulatingSupply_);\n        } else {\n            rebaseAmount = profit_;\n        }\n\n        _totalSupply = _totalSupply.add(rebaseAmount);\n\n        if (_totalSupply > MAX_SUPPLY) {\n            _totalSupply = MAX_SUPPLY;\n        }\n\n        _gonsPerFragment = TOTAL_GONS.div(_totalSupply);\n\n        _storeRebase(circulatingSupply_, profit_, epoch_);\n\n        return _totalSupply;\n    }\n\n    /**\n        @notice emits event with data about rebase\n        @param previousCirculating_ uint\n        @param profit_ uint\n        @param epoch_ uint\n     */\n    function _storeRebase(\n        uint256 previousCirculating_,\n        uint256 profit_,\n        uint256 epoch_\n    ) internal {\n        uint256 rebasePercent = profit_.mul(1e18).div(previousCirculating_);\n        rebases.push(\n            Rebase({\n                epoch: epoch_,\n                rebase: rebasePercent, // 18 decimals\n                totalStakedBefore: previousCirculating_,\n                totalStakedAfter: circulatingSupply(),\n                amountRebased: profit_,\n                index: index(),\n                blockNumberOccured: block.number\n            })\n        );\n\n        emit LogSupply(epoch_, _totalSupply);\n        emit LogRebase(epoch_, rebasePercent, index());\n    }\n\n    /* ========== MUTATIVE FUNCTIONS =========== */\n\n    function transfer(address to, uint256 value) public override(IERC20, ERC20) returns (bool) {\n        uint256 gonValue = value.mul(_gonsPerFragment);\n\n        _gonBalances[msg.sender] = _gonBalances[msg.sender].sub(gonValue);\n        _gonBalances[to] = _gonBalances[to].add(gonValue);\n\n        require(balanceOf(msg.sender) >= debtBalances[msg.sender], \"Debt: cannot transfer amount\");\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) public override(IERC20, ERC20) returns (bool) {\n        _allowedValue[from][msg.sender] = _allowedValue[from][msg.sender].sub(value);\n        emit Approval(from, msg.sender, _allowedValue[from][msg.sender]);\n\n        uint256 gonValue = gonsForBalance(value);\n        _gonBalances[from] = _gonBalances[from].sub(gonValue);\n        _gonBalances[to] = _gonBalances[to].add(gonValue);\n\n        require(balanceOf(from) >= debtBalances[from], \"Debt: cannot transfer amount\");\n        emit Transfer(from, to, value);\n        return true;\n    }\n\n    function approve(address spender, uint256 value) public override(IERC20, ERC20) returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function increaseAllowance(address spender, uint256 addedValue) public override returns (bool) {\n        _approve(msg.sender, spender, _allowedValue[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    function decreaseAllowance(address spender, uint256 subtractedValue) public override returns (bool) {\n        uint256 oldValue = _allowedValue[msg.sender][spender];\n        if (subtractedValue >= oldValue) {\n            _approve(msg.sender, spender, 0);\n        } else {\n            _approve(msg.sender, spender, oldValue.sub(subtractedValue));\n        }\n        return true;\n    }\n\n    // this function is called by the treasury, and informs sOHM of changes to debt.\n    // note that addresses with debt balances cannot transfer collateralized sOHM\n    // until the debt has been repaid.\n    function changeDebt(\n        uint256 amount,\n        address debtor,\n        bool add\n    ) external override {\n        require(msg.sender == treasury, \"Only treasury\");\n        if (add) {\n            debtBalances[debtor] = debtBalances[debtor].add(amount);\n        } else {\n            debtBalances[debtor] = debtBalances[debtor].sub(amount);\n        }\n        require(debtBalances[debtor] <= balanceOf(debtor), \"sEXO: insufficient balance\");\n    }\n\n    /* ========== INTERNAL FUNCTIONS ========== */\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 value\n    ) internal virtual override {\n        _allowedValue[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    /* ========== VIEW FUNCTIONS ========== */\n\n    function balanceOf(address who) public view override(IERC20, ERC20) returns (uint256) {\n        return _gonBalances[who].div(_gonsPerFragment);\n    }\n\n    function gonsForBalance(uint256 amount) public view override returns (uint256) {\n        return amount.mul(_gonsPerFragment);\n    }\n\n    function balanceForGons(uint256 gons) public view override returns (uint256) {\n        return gons.div(_gonsPerFragment);\n    }\n\n    // toG converts an sOHM balance to gOHM terms. gOHM is an 18 decimal token. balance given is in 18 decimal format.\n    function toG(uint256 amount) external view override returns (uint256) {\n        return gEXO.balanceTo(amount);\n    }\n\n    // fromG converts a gOHM balance to sOHM terms. sOHM is a 9 decimal token. balance given is in 9 decimal format.\n    function fromG(uint256 amount) external view override returns (uint256) {\n        return gEXO.balanceFrom(amount);\n    }\n\n    // Staking contract holds excess sOHM\n    function circulatingSupply() public view override returns (uint256) {\n        return\n            _totalSupply.sub(balanceOf(stakingContract)).add(gEXO.balanceFrom(IERC20(address(gEXO)).totalSupply())).add(\n                IStaking(stakingContract).supplyInWarmup()\n            );\n    }\n\n    function index() public view override returns (uint256) {\n        return balanceForGons(INDEX);\n    }\n\n    function allowance(address owner_, address spender) public view override(IERC20, ERC20) returns (uint256) {\n        return _allowedValue[owner_][spender];\n    }\n}\n"
			},
			"sExodus/IStaking.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\ninterface IStaking {\n    function stake(\n        address _to,\n        uint256 _amount,\n        bool _rebasing,\n        bool _claim\n    ) external returns (uint256);\n\n    function claim(address _recipient, bool _rebasing) external returns (uint256);\n\n    function forfeit() external returns (uint256);\n\n    function toggleLock() external;\n\n    function unstake(\n        address _to,\n        uint256 _amount,\n        bool _trigger,\n        bool _rebasing\n    ) external returns (uint256);\n\n    function wrap(address _to, uint256 _amount) external returns (uint256 gBalance_);\n\n    function unwrap(address _to, uint256 _amount) external returns (uint256 sBalance_);\n\n    function rebase() external;\n\n    function index() external view returns (uint256);\n\n    function contractBalance() external view returns (uint256);\n\n    function totalStaked() external view returns (uint256);\n\n    function supplyInWarmup() external view returns (uint256);\n}\n"
			},
			"sExodus/IsOHM.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\nimport \"./IERC20.sol\";\n\ninterface IsEXO is IERC20 {\n    function rebase(uint256 ohmProfit_, uint256 epoch_) external returns (uint256);\n\n    function circulatingSupply() external view returns (uint256);\n\n    function gonsForBalance(uint256 amount) external view returns (uint256);\n\n    function balanceForGons(uint256 gons) external view returns (uint256);\n\n    function index() external view returns (uint256);\n\n    function toG(uint256 amount) external view returns (uint256);\n\n    function fromG(uint256 amount) external view returns (uint256);\n\n    function changeDebt(\n        uint256 amount,\n        address debtor,\n        bool add\n    ) external;\n\n    function debtBalances(address _address) external view returns (uint256);\n}\n"
			},
			"sExodus/IgOHM.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\nimport \"./IERC20.sol\";\n\ninterface IgEXO is IERC20 {\n    function mint(address _to, uint256 _amount) external;\n\n    function burn(address _from, uint256 _amount) external;\n\n    function index() external view returns (uint256);\n\n    function balanceFrom(uint256 _amount) external view returns (uint256);\n\n    function balanceTo(uint256 _amount) external view returns (uint256);\n\n    function migrate(address _staking, address _sOHM) external;\n}\n"
			},
			"sExodus/ERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.5;\n\nimport \"./IERC20Permit.sol\";\nimport \"./ERC20.sol\";\nimport \"./EIP712.sol\";\nimport \"./ECDSA.sol\";\nimport \"./Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private immutable _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"
			},
			"sExodus/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.7.5;\n\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        assert(a == b * c + (a % b)); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    // Only used in the  BondingCalculator.sol\n    function sqrrt(uint256 a) internal pure returns (uint256 c) {\n        if (a > 3) {\n            c = a;\n            uint256 b = add(div(a, 2), 1);\n            while (b < c) {\n                c = b;\n                b = div(add(div(a, b), b), 2);\n            }\n        } else if (a != 0) {\n            c = 1;\n        }\n    }\n}\n"
			},
			"sExodus/Address.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\n// TODO(zx): replace with OZ implementation.\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    // function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n    //     require(address(this).balance >= value, \"Address: insufficient balance for call\");\n    //     return _functionCallWithValue(target, data, value, errorMessage);\n    // }\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 weiValue,\n        string memory errorMessage\n    ) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"sExodus/IERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"sExodus/Counters.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.7.5;\n\nimport \"./SafeMath.sol\";\n\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n"
			},
			"sExodus/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.5;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        } else if (error == RecoverError.InvalidSignatureV) {\n            revert(\"ECDSA: invalid signature 'v' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        // Check the signature length\n        // - case 65: r,s,v signature (standard)\n        // - case 64: r,vs signature (cf https://eips.ethereum.org/EIPS/eip-2098) _Available since v4.1._\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else if (signature.length == 64) {\n            bytes32 r;\n            bytes32 vs;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly {\n                r := mload(add(signature, 0x20))\n                vs := mload(add(signature, 0x40))\n            }\n            return tryRecover(hash, r, vs);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s;\n        uint8 v;\n        assembly {\n            s := and(vs, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n            v := add(shr(255, vs), 27)\n        }\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n        if (v != 27 && v != 28) {\n            return (address(0), RecoverError.InvalidSignatureV);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"
			},
			"sExodus/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.5;\n\nimport \"./ECDSA.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n */\nabstract contract EIP712 {\n    /* solhint-disable var-name-mixedcase */\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\n    uint256 private immutable _CACHED_CHAIN_ID;\n\n    bytes32 private immutable _HASHED_NAME;\n    bytes32 private immutable _HASHED_VERSION;\n    bytes32 private immutable _TYPE_HASH;\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        uint256 chainID;\n        assembly {\n            chainID := chainid()\n        }\n\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        bytes32 typeHash = keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n        _CACHED_CHAIN_ID = chainID;\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\n        _TYPE_HASH = typeHash;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        uint256 chainID;\n        assembly {\n            chainID := chainid()\n        }\n\n        if (chainID == _CACHED_CHAIN_ID) {\n            return _CACHED_DOMAIN_SEPARATOR;\n        } else {\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\n        }\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        uint256 chainID;\n        assembly {\n            chainID := chainid()\n        }\n\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, chainID, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n}\n"
			},
			"sExodus/ERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity >=0.7.5;\n\nimport \"./SafeMath.sol\";\n\nimport \"./IERC20.sol\";\n\nabstract contract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    // TODO comment actual hash value.\n    bytes32 private constant ERC20TOKEN_ERC1820_INTERFACE_ID = keccak256(\"ERC20Token\");\n\n    mapping(address => uint256) internal _balances;\n\n    mapping(address => mapping(address => uint256)) internal _allowances;\n\n    uint256 internal _totalSupply;\n\n    string internal _name;\n\n    string internal _symbol;\n\n    uint8 internal immutable _decimals;\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint8 decimals_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = decimals_;\n    }\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            msg.sender,\n            _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\")\n        );\n        return true;\n    }\n\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(\n            msg.sender,\n            spender,\n            _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")\n        );\n        return true;\n    }\n\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n        _beforeTokenTransfer(address(0), account, amount);\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    function _beforeTokenTransfer(\n        address from_,\n        address to_,\n        uint256 amount_\n    ) internal virtual {}\n}\n"
			},
			"sExodus/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.5;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as th xe allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"sExodus/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sExodus/Address.sol\":108:9330  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sExodus/Address.sol\":108:9330  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f99afa898896a8c92e4b9c1ad589972bc9e580f5ffd253eaa3e2bbfd8d32443664736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f99afa898896a8c92e4b9c1ad589972bc9e580f5ffd253eaa3e2bbfd8d32443664736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 SWAP11 STATICCALL DUP10 DUP9 SWAP7 0xA8 0xC9 0x2E 0x4B SWAP13 BYTE 0xD5 DUP10 SWAP8 0x2B 0xC9 0xE5 DUP1 CREATE2 SELFDESTRUCT 0xD2 MSTORE8 0xEA LOG3 0xE2 0xBB REVERT DUP14 ORIGIN DIFFICULTY CALLDATASIZE PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "108:9222:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f99afa898896a8c92e4b9c1ad589972bc9e580f5ffd253eaa3e2bbfd8d32443664736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 SWAP11 STATICCALL DUP10 DUP9 SWAP7 0xA8 0xC9 0x2E 0x4B SWAP13 BYTE 0xD5 DUP10 SWAP8 0x2B 0xC9 0xE5 DUP1 CREATE2 SELFDESTRUCT 0xD2 MSTORE8 0xEA LOG3 0xE2 0xBB REVERT DUP14 ORIGIN DIFFICULTY CALLDATASIZE PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "108:9222:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f99afa898896a8c92e4b9c1ad589972bc9e580f5ffd253eaa3e2bbfd8d32443664736f6c63430007050033",
									".code": [
										{
											"begin": 108,
											"end": 9330,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sExodus/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"sExodus/Address.sol\":{\"keccak256\":\"0xc2d8595504a985f53a5db9e6220ae614a7f8b4c5c1d35f55b07e08a21e40b2b9\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1b8104a932321f4f8a89ca5265b7bca5fe9f5e51ccec01470931e5014be87fc9\",\"dweb:/ipfs/Qmb2ta7fADrRuXqjot4reKg63brweMH6jWocx534huYtCc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sExodus/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sExodus/Counters.sol\":88:936  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sExodus/Counters.sol\":88:936  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122087fb4342a5c5b157f4a6bd65a5c5a9ba98b15bda8b5a29e651c46d1d57e2778364736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087fb4342a5c5b157f4a6bd65a5c5a9ba98b15bda8b5a29e651c46d1d57e2778364736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xFB NUMBER TIMESTAMP 0xA5 0xC5 0xB1 JUMPI DELEGATECALL 0xA6 0xBD PUSH6 0xA5C5A9BA98B1 JUMPDEST 0xDA DUP12 GAS 0x29 0xE6 MLOAD 0xC4 PUSH14 0x1D57E2778364736F6C6343000705 STOP CALLER ",
							"sourceMap": "88:848:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087fb4342a5c5b157f4a6bd65a5c5a9ba98b15bda8b5a29e651c46d1d57e2778364736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xFB NUMBER TIMESTAMP 0xA5 0xC5 0xB1 JUMPI DELEGATECALL 0xA6 0xBD PUSH6 0xA5C5A9BA98B1 JUMPDEST 0xDA DUP12 GAS 0x29 0xE6 MLOAD 0xC4 PUSH14 0x1D57E2778364736F6C6343000705 STOP CALLER ",
							"sourceMap": "88:848:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 88,
									"end": 936,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 88,
									"end": 936,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122087fb4342a5c5b157f4a6bd65a5c5a9ba98b15bda8b5a29e651c46d1d57e2778364736f6c63430007050033",
									".code": [
										{
											"begin": 88,
											"end": 936,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 88,
											"end": 936,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 88,
											"end": 936,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 88,
											"end": 936,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 88,
											"end": 936,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 936,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 88,
											"end": 936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 936,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sExodus/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"sExodus/Counters.sol\":{\"keccak256\":\"0x2723e1522fb9088bb9ee8d3f20e9f3b04bc38daf127ef1dc624e61a88cbf48de\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b52e187f74d2be83d893b2b47f866878504b14ba04834cb5e3d06219c5ab5673\",\"dweb:/ipfs/QmcYVMhAunHXNU55TGZGkSKATbDCNTgs42u4q5At8NN4Ce\"]},\"sExodus/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sExodus/ECDSA.sol": {
				"ECDSA": {
					"abi": [],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sExodus/ECDSA.sol\":264:8750  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sExodus/ECDSA.sol\":264:8750  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204b8febafcc222433aba9ad281ffdc97089b8046f642de301914e4832672c896f64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204b8febafcc222433aba9ad281ffdc97089b8046f642de301914e4832672c896f64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B DUP16 0xEB 0xAF 0xCC 0x22 0x24 CALLER 0xAB 0xA9 0xAD 0x28 0x1F REVERT 0xC9 PUSH17 0x89B8046F642DE301914E4832672C896F64 PUSH20 0x6F6C634300070500330000000000000000000000 ",
							"sourceMap": "264:8486:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204b8febafcc222433aba9ad281ffdc97089b8046f642de301914e4832672c896f64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B DUP16 0xEB 0xAF 0xCC 0x22 0x24 CALLER 0xAB 0xA9 0xAD 0x28 0x1F REVERT 0xC9 PUSH17 0x89B8046F642DE301914E4832672C896F64 PUSH20 0x6F6C634300070500330000000000000000000000 ",
							"sourceMap": "264:8486:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 264,
									"end": 8750,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204b8febafcc222433aba9ad281ffdc97089b8046f642de301914e4832672c896f64736f6c63430007050033",
									".code": [
										{
											"begin": 264,
											"end": 8750,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 264,
											"end": 8750,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sExodus/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"sExodus/ECDSA.sol\":{\"keccak256\":\"0x2fb4959d42d1a72b47f3c3c8db1e466d21dbfb33aa445fd6a8c1f1e84ba37cdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10b87bfd64543429c28797a71b78149d9cb93261fc60bdfee25c56c6af886866\",\"dweb:/ipfs/QmVRvnZSbAgSSR8PfZnKSkLFPqqUkxJeS919FvszosQzsV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sExodus/EIP712.sol": {
				"EIP712": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sExodus/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"sExodus/ECDSA.sol\":{\"keccak256\":\"0x2fb4959d42d1a72b47f3c3c8db1e466d21dbfb33aa445fd6a8c1f1e84ba37cdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10b87bfd64543429c28797a71b78149d9cb93261fc60bdfee25c56c6af886866\",\"dweb:/ipfs/QmVRvnZSbAgSSR8PfZnKSkLFPqqUkxJeS919FvszosQzsV\"]},\"sExodus/EIP712.sol\":{\"keccak256\":\"0x76bfc700bb36030b1e9c73abc9b024eea9632c4538f0eedca7f15ae062b4581c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f5a92ca1f712919f5da7f70fabfa55626f772f6e455510a49b2b55ec0632315\",\"dweb:/ipfs/Qme3YZHzQgeAZ7m8tB9zWdRLopRqNsBppKVj9cpKuAaLBE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sExodus/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sExodus/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"sExodus/ERC20.sol\":{\"keccak256\":\"0x69e61a22f9d3311cf65421c12af4fd9f22797c0919c71a8c4e3210d4ef1e0978\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://3429dd0834aad2edcce7b0d3e0cf4d10b038034da2b62264f26f508fbde7887c\",\"dweb:/ipfs/QmeACvafiAej3T3CBTaBH8hTSru6pbHdKZU8anMfhGNRqu\"]},\"sExodus/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"sExodus/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 918,
								"contract": "sExodus/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 924,
								"contract": "sExodus/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 926,
								"contract": "sExodus/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 928,
								"contract": "sExodus/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 930,
								"contract": "sExodus/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sExodus/ERC20Permit.sol": {
				"ERC20Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"nonces(address)": {
								"details": "See {IERC20Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC20Permit-permit}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sExodus/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"sExodus/Counters.sol\":{\"keccak256\":\"0x2723e1522fb9088bb9ee8d3f20e9f3b04bc38daf127ef1dc624e61a88cbf48de\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b52e187f74d2be83d893b2b47f866878504b14ba04834cb5e3d06219c5ab5673\",\"dweb:/ipfs/QmcYVMhAunHXNU55TGZGkSKATbDCNTgs42u4q5At8NN4Ce\"]},\"sExodus/ECDSA.sol\":{\"keccak256\":\"0x2fb4959d42d1a72b47f3c3c8db1e466d21dbfb33aa445fd6a8c1f1e84ba37cdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10b87bfd64543429c28797a71b78149d9cb93261fc60bdfee25c56c6af886866\",\"dweb:/ipfs/QmVRvnZSbAgSSR8PfZnKSkLFPqqUkxJeS919FvszosQzsV\"]},\"sExodus/EIP712.sol\":{\"keccak256\":\"0x76bfc700bb36030b1e9c73abc9b024eea9632c4538f0eedca7f15ae062b4581c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f5a92ca1f712919f5da7f70fabfa55626f772f6e455510a49b2b55ec0632315\",\"dweb:/ipfs/Qme3YZHzQgeAZ7m8tB9zWdRLopRqNsBppKVj9cpKuAaLBE\"]},\"sExodus/ERC20.sol\":{\"keccak256\":\"0x69e61a22f9d3311cf65421c12af4fd9f22797c0919c71a8c4e3210d4ef1e0978\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://3429dd0834aad2edcce7b0d3e0cf4d10b038034da2b62264f26f508fbde7887c\",\"dweb:/ipfs/QmeACvafiAej3T3CBTaBH8hTSru6pbHdKZU8anMfhGNRqu\"]},\"sExodus/ERC20Permit.sol\":{\"keccak256\":\"0x652e9ebde967277c422d494f1696e735864ea171b04f210f1a9356553b800d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c501477f99535423eeb0617e706d78fa9fd5b50d4cdec4f069a922f1bc4e26\",\"dweb:/ipfs/QmTKQShGC5NYbYfENQ1pKqedGmMdiBXm86SVdykrKwTXF1\"]},\"sExodus/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"sExodus/IERC20Permit.sol\":{\"keccak256\":\"0x681e969fed243296a88805a5c99bc934b6149f0310ce7761a9cbd988f2cc139a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c274384e15d6fe8eeb1eb4a8468162ca96d7135e0714f9ac050883e9dfebb58d\",\"dweb:/ipfs/QmXmafvMmYq6xvWwvKwXSHdmpjYDwYd1CqBjLhRi1qSPxj\"]},\"sExodus/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 918,
								"contract": "sExodus/ERC20Permit.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 924,
								"contract": "sExodus/ERC20Permit.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 926,
								"contract": "sExodus/ERC20Permit.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 928,
								"contract": "sExodus/ERC20Permit.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 930,
								"contract": "sExodus/ERC20Permit.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1399,
								"contract": "sExodus/ERC20Permit.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Counter)353_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)353_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)353_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)353_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 352,
										"contract": "sExodus/ERC20Permit.sol:ERC20Permit",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sExodus/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sExodus/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"sExodus/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sExodus/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as th xe allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as th xe allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sExodus/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"sExodus/IERC20Permit.sol\":{\"keccak256\":\"0x681e969fed243296a88805a5c99bc934b6149f0310ce7761a9cbd988f2cc139a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c274384e15d6fe8eeb1eb4a8468162ca96d7135e0714f9ac050883e9dfebb58d\",\"dweb:/ipfs/QmXmafvMmYq6xvWwvKwXSHdmpjYDwYd1CqBjLhRi1qSPxj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sExodus/IStaking.sol": {
				"IStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_rebasing",
									"type": "bool"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "forfeit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebase",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_rebasing",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_claim",
									"type": "bool"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "supplyInWarmup",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toggleLock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_trigger",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_rebasing",
									"type": "bool"
								}
							],
							"name": "unstake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "unwrap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "sBalance_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "wrap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "gBalance_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claim(address,bool)": "92fd2daf",
							"contractBalance()": "8b7afe2e",
							"forfeit()": "f3d86e4a",
							"index()": "2986c0e5",
							"rebase()": "af14052c",
							"stake(address,uint256,bool,bool)": "d866c9d8",
							"supplyInWarmup()": "20138641",
							"toggleLock()": "ff9413d8",
							"totalStaked()": "817b1cd2",
							"unstake(address,uint256,bool,bool)": "990966d5",
							"unwrap(address,uint256)": "39f47693",
							"wrap(address,uint256)": "bf376c7a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_rebasing\",\"type\":\"bool\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forfeit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_rebasing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_claim\",\"type\":\"bool\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyInWarmup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_trigger\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_rebasing\",\"type\":\"bool\"}],\"name\":\"unstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sBalance_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gBalance_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sExodus/IStaking.sol\":\"IStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"sExodus/IStaking.sol\":{\"keccak256\":\"0xc5481248b924479a867d252882a1be9573e4aefe3c7816045e1c0c25daacca70\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5a0bf214509dcb8f0f9566918c2038e50e5bd9286a19a914f1ed6fbf2de22b1d\",\"dweb:/ipfs/QmTacgzN9NcR1oHwyWdFV8Kazfzoj8dCaNLVVftt35KnNU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sExodus/IgOHM.sol": {
				"IgEXO": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "balanceFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "balanceTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staking",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_sOHM",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceFrom(uint256)": "a8248768",
							"balanceOf(address)": "70a08231",
							"balanceTo(uint256)": "66a5236c",
							"burn(address,uint256)": "9dc29fac",
							"index()": "2986c0e5",
							"migrate(address,address)": "1068361f",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"balanceFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"balanceTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sOHM\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sExodus/IgOHM.sol\":\"IgEXO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"sExodus/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"sExodus/IgOHM.sol\":{\"keccak256\":\"0x6cac4e5000a7bf84a9fb175f38a3a85fdedf2401cca7c0f0d95e9f88c8929e0d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e313687e3a347191cbb05812b8bf6832ee47019912f066d3e5c68a7b9fc8ea3f\",\"dweb:/ipfs/QmX2si86fKKkP96jmWCc3D2qbLUiT5mN9mw5nL68CUcHwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sExodus/IsOHM.sol": {
				"IsEXO": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gons",
									"type": "uint256"
								}
							],
							"name": "balanceForGons",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "debtor",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "add",
									"type": "bool"
								}
							],
							"name": "changeDebt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "circulatingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "debtBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "fromG",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "gonsForBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ohmProfit_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "epoch_",
									"type": "uint256"
								}
							],
							"name": "rebase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "toG",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceForGons(uint256)": "7965d56d",
							"balanceOf(address)": "70a08231",
							"changeDebt(uint256,address,bool)": "ae5c6cd3",
							"circulatingSupply()": "9358928b",
							"debtBalances(address)": "c4ef1c4c",
							"fromG(uint256)": "b8fbd533",
							"gonsForBalance(uint256)": "1bd39674",
							"index()": "2986c0e5",
							"rebase(uint256,uint256)": "058ecdb4",
							"toG(uint256)": "095be818",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gons\",\"type\":\"uint256\"}],\"name\":\"balanceForGons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"}],\"name\":\"changeDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"debtBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fromG\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"gonsForBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ohmProfit_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"epoch_\",\"type\":\"uint256\"}],\"name\":\"rebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"toG\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sExodus/IsOHM.sol\":\"IsEXO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"sExodus/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"sExodus/IsOHM.sol\":{\"keccak256\":\"0xe6853333a2d813d8ff0afce244cb92d4e1742a26ae2955d1d2cca221bfd4e675\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a3dd7d8b7d6421a74b3794e80174f7ee486c1391013c7a557859f75e30229d2\",\"dweb:/ipfs/QmeyMJhtEkL85vGk1e9BRd2AXmfq6Kivm4nTi1NeDTkoDr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sExodus/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sExodus/SafeMath.sol\":132:1759  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sExodus/SafeMath.sol\":132:1759  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122062b903891c0e8987c9c7c1c74a9137ecadcd0e168c5365dab2833bb7a157559f64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122062b903891c0e8987c9c7c1c74a9137ecadcd0e168c5365dab2833bb7a157559f64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xB90389 SHR 0xE DUP10 DUP8 0xC9 0xC7 0xC1 0xC7 0x4A SWAP2 CALLDATACOPY 0xEC 0xAD 0xCD 0xE AND DUP13 MSTORE8 PUSH6 0xDAB2833BB7A1 JUMPI SSTORE SWAP16 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "132:1627:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122062b903891c0e8987c9c7c1c74a9137ecadcd0e168c5365dab2833bb7a157559f64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xB90389 SHR 0xE DUP10 DUP8 0xC9 0xC7 0xC1 0xC7 0x4A SWAP2 CALLDATACOPY 0xEC 0xAD 0xCD 0xE AND DUP13 MSTORE8 PUSH6 0xDAB2833BB7A1 JUMPI SSTORE SWAP16 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "132:1627:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sqrrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122062b903891c0e8987c9c7c1c74a9137ecadcd0e168c5365dab2833bb7a157559f64736f6c63430007050033",
									".code": [
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sExodus/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"sExodus/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sExodus/sOlympusERC20.sol": {
				"sExodus": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rebase",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "LogRebase",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "stakingContract",
									"type": "address"
								}
							],
							"name": "LogStakingContractUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"name": "LogSupply",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gons",
									"type": "uint256"
								}
							],
							"name": "balanceForGons",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "debtor",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "add",
									"type": "bool"
								}
							],
							"name": "changeDebt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "circulatingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "debtBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "fromG",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gEXO",
							"outputs": [
								{
									"internalType": "contract IgEXO",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "gonsForBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "profit_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "epoch_",
									"type": "uint256"
								}
							],
							"name": "rebase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rebases",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rebase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedBefore",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedAfter",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountRebased",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockNumberOccured",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "setIndex",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gEXO",
									"type": "address"
								}
							],
							"name": "setgOHM",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "toG",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
							},
							"nonces(address)": {
								"details": "See {IERC20Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC20Permit-permit}."
							},
							"rebase(uint256,uint256)": {
								"params": {
									"profit_": "uint256"
								},
								"returns": {
									"_0": "uint256"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sExodus/sOlympusERC20.sol\":211:10049  contract sExodus is IsEXO, ERC20Permit {... */\n  mstore(0x40, 0x0160)\n    /* \"sExodus/ERC20Permit.sol\":971:1066  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n    /* \"sExodus/ERC20Permit.sol\":918:1066  bytes32 private immutable _PERMIT_TYPEHASH =... */\n  0x0140\n  mstore\n    /* \"sExodus/sOlympusERC20.sol\":2267:2485  constructor() ERC20(\"Staked EXO\", \"sEXO\", 9) ERC20Permit(\"Staked EXO\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"sExodus/ERC20Permit.sol\":1298:1350  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb0, 0x5374616b65642045584f)\n  dup2\n  mstore\n  pop\n    /* \"sExodus/ERC20Permit.sol\":1337:1341  name */\n  dup1\n    /* \"sExodus/EIP712.sol\":2340:2986  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf8, 0x31)\n  dup2\n  mstore\n  pop\n    /* \"sExodus/ERC20.sol\":586:777  constructor(... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb0, 0x5374616b65642045584f)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x7345584f)\n  dup2\n  mstore\n  pop\n    /* \"sExodus/sOlympusERC20.sol\":2309:2310  9 */\n  0x09\n    /* \"sExodus/ERC20.sol\":707:712  name_ */\n  dup3\n    /* \"sExodus/ERC20.sol\":699:704  _name */\n  0x03\n    /* \"sExodus/ERC20.sol\":699:712  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"sExodus/ERC20.sol\":722:739  _symbol = symbol_ */\n  dup2\n  mload\n  tag_9\n  swap1\n    /* \"sExodus/ERC20.sol\":722:729  _symbol */\n  0x04\n  swap1\n    /* \"sExodus/ERC20.sol\":722:739  _symbol = symbol_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"sExodus/ERC20.sol\":749:770  _decimals = decimals_ */\n  0xf8\n  shl\n  0xff00000000000000000000000000000000000000000000000000000000000000\n  and\n  0x80\n  mstore\n  pop\n  pop\n    /* \"sExodus/EIP712.sol\":2514:2536  keccak256(bytes(name)) */\n  dup2\n  mload\n  0x20\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"sExodus/EIP712.sol\":2570:2595  keccak256(bytes(version)) */\n  dup3\n  mload\n  swap2\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"sExodus/EIP712.sol\":2751:2776  _HASHED_NAME = hashedName */\n  0xe0\n  dup3\n  swap1\n  mstore\n    /* \"sExodus/EIP712.sol\":2786:2817  _HASHED_VERSION = hashedVersion */\n  0x0100\n  dup2\n  swap1\n  mstore\n    /* \"sExodus/EIP712.sol\":2464:2473  chainid() */\n  chainid\n    /* \"sExodus/EIP712.sol\":2827:2853  _CACHED_CHAIN_ID = chainID */\n  0xc0\n  dup2\n  swap1\n  mstore\n    /* \"sExodus/EIP712.sol\":2464:2473  chainid() */\n  swap2\n    /* \"sExodus/EIP712.sol\":2514:2536  keccak256(bytes(name)) */\n  swap1\n    /* \"sExodus/EIP712.sol\":2624:2741  keccak256(... */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"sExodus/EIP712.sol\":2890:2948  _buildDomainSeparator(typeHash, hashedName, hashedVersion) */\n  tag_11\n    /* \"sExodus/EIP712.sol\":2624:2741  keccak256(... */\n  dup2\n    /* \"sExodus/EIP712.sol\":2514:2536  keccak256(bytes(name)) */\n  dup5\n    /* \"sExodus/EIP712.sol\":2570:2595  keccak256(bytes(version)) */\n  dup5\n    /* \"sExodus/EIP712.sol\":2890:2911  _buildDomainSeparator */\n  tag_12\n    /* \"sExodus/EIP712.sol\":2890:2948  _buildDomainSeparator(typeHash, hashedName, hashedVersion) */\n  jump\t// in\ntag_11:\n    /* \"sExodus/EIP712.sol\":2863:2948  _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion) */\n  0xa0\n  mstore\n    /* \"sExodus/EIP712.sol\":2958:2979  _TYPE_HASH = typeHash */\n  0x0120\n  mstore\n  pop\n  pop\n    /* \"sExodus/sOlympusERC20.sol\":2348:2359  initializer */\n  0x06\n    /* \"sExodus/sOlympusERC20.sol\":2348:2372  initializer = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"sExodus/sOlympusERC20.sol\":2362:2372  msg.sender */\n  caller\n    /* \"sExodus/sOlympusERC20.sol\":2348:2372  initializer = msg.sender */\n  or\n  swap1\n  sstore\n  pop\n  pop\n    /* \"sExodus/sOlympusERC20.sol\":1523:1540  5_000_000 * 10**9 */\n  0x11c37937e08000\n    /* \"sExodus/sOlympusERC20.sol\":2382:2394  _totalSupply */\n  0x02\n    /* \"sExodus/sOlympusERC20.sol\":2382:2421  _totalSupply = INITIAL_FRAGMENTS_SUPPLY */\n  dup2\n  swap1\n  sstore\n    /* \"sExodus/sOlympusERC20.sol\":2450:2478  TOTAL_GONS.div(_totalSupply) */\n  tag_15\n  swap3\n  pop\n    /* \"sExodus/sOlympusERC20.sol\":1523:1540  5_000_000 * 10**9 */\n  swap1\n  pop\n  dup1\n  not(0x00)\n    /* \"sExodus/sOlympusERC20.sol\":1773:1811  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n  mod\n  not(0x00)\n    /* \"sExodus/sOlympusERC20.sol\":1758:1812  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n  sub\n    /* \"sExodus/sOlympusERC20.sol\":2450:2464  TOTAL_GONS.div */\n  or(tag_0_128, shl(0x20, tag_17))\n  swap1\n    /* \"sExodus/sOlympusERC20.sol\":2450:2478  TOTAL_GONS.div(_totalSupply) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"sExodus/sOlympusERC20.sol\":2431:2447  _gonsPerFragment */\n  0x0b\n    /* \"sExodus/sOlympusERC20.sol\":2431:2478  _gonsPerFragment = TOTAL_GONS.div(_totalSupply) */\n  sstore\n    /* \"sExodus/sOlympusERC20.sol\":211:10049  contract sExodus is IsEXO, ERC20Permit {... */\n  jump(tag_18)\n    /* \"sExodus/EIP712.sol\":3435:3774  function _buildDomainSeparator(... */\ntag_12:\n    /* \"sExodus/EIP712.sol\":3699:3766  abi.encode(typeHash, nameHash, versionHash, chainID, address(this)) */\n  0x40\n  dup1\n  mload\n  0x20\n  dup1\n  dup3\n  add\n  swap6\n  swap1\n  swap6\n  mstore\n  dup1\n  dup3\n  add\n  swap4\n  swap1\n  swap4\n  mstore\n  0x60\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"sExodus/EIP712.sol\":3653:3662  chainid() */\n  chainid\n    /* \"sExodus/EIP712.sol\":3699:3766  abi.encode(typeHash, nameHash, versionHash, chainID, address(this)) */\n  0x80\n  dup4\n  add\n  mstore\n    /* \"sExodus/EIP712.sol\":3760:3764  this */\n  address\n    /* \"sExodus/EIP712.sol\":3699:3766  abi.encode(typeHash, nameHash, versionHash, chainID, address(this)) */\n  0xa0\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup2\n  mload\n  dup1\n  dup5\n  sub\n  swap1\n  swap2\n  add\n  dup2\n  mstore\n  0xc0\n  swap1\n  swap3\n  add\n  swap1\n  mstore\n    /* \"sExodus/EIP712.sol\":3689:3767  keccak256(abi.encode(typeHash, nameHash, versionHash, chainID, address(this))) */\n  dup1\n  mload\n  swap2\n  add\n  keccak256\n  swap1\n    /* \"sExodus/EIP712.sol\":3435:3774  function _buildDomainSeparator(... */\n  jump\t// out\n    /* \"sExodus/SafeMath.sol\":947:1077  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_17:\n    /* \"sExodus/SafeMath.sol\":1005:1012  uint256 */\n  0x00\n    /* \"sExodus/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n  tag_21\n    /* \"sExodus/SafeMath.sol\":1035:1036  a */\n  dup4\n    /* \"sExodus/SafeMath.sol\":1038:1039  b */\n  dup4\n    /* \"sExodus/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1a\n  dup2\n  mstore\n  0x20\n  add\n  0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n  dup2\n  mstore\n  pop\n    /* \"sExodus/SafeMath.sol\":1031:1034  div */\n  shl(0x20, tag_22)\n    /* \"sExodus/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"sExodus/SafeMath.sol\":1024:1070  return div(a, b, \"SafeMath: division by zero\") */\n  swap4\n    /* \"sExodus/SafeMath.sol\":947:1077  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"sExodus/SafeMath.sol\":1083:1384  function div(... */\ntag_22:\n    /* \"sExodus/SafeMath.sol\":1199:1206  uint256 */\n  0x00\n    /* \"sExodus/SafeMath.sol\":1233:1245  errorMessage */\n  dup2\n    /* \"sExodus/SafeMath.sol\":1226:1231  b > 0 */\n  dup4\n    /* \"sExodus/SafeMath.sol\":1218:1246  require(b > 0, errorMessage) */\n  tag_24\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_25:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_27\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_25)\ntag_27:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_28\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_28:\n  pop\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_24:\n  pop\n    /* \"sExodus/SafeMath.sol\":1256:1265  uint256 c */\n  0x00\n    /* \"sExodus/SafeMath.sol\":1272:1273  b */\n  dup4\n    /* \"sExodus/SafeMath.sol\":1268:1269  a */\n  dup6\n    /* \"sExodus/SafeMath.sol\":1268:1273  a / b */\n  dup2\n  tag_29\n  jumpi\n  invalid\ntag_29:\n  div\n    /* \"sExodus/SafeMath.sol\":1256:1273  uint256 c = a / b */\n  swap1\n  pop\n    /* \"sExodus/SafeMath.sol\":1308:1309  b */\n  dup4\n    /* \"sExodus/SafeMath.sol\":1304:1305  a */\n  dup6\n    /* \"sExodus/SafeMath.sol\":1304:1309  a % b */\n  dup2\n  tag_30\n  jumpi\n  invalid\ntag_30:\n  mod\n    /* \"sExodus/SafeMath.sol\":1299:1300  c */\n  dup2\n    /* \"sExodus/SafeMath.sol\":1295:1296  b */\n  dup6\n    /* \"sExodus/SafeMath.sol\":1295:1300  b * c */\n  mul\n    /* \"sExodus/SafeMath.sol\":1295:1310  b * c + (a % b) */\n  add\n    /* \"sExodus/SafeMath.sol\":1290:1291  a */\n  dup6\n    /* \"sExodus/SafeMath.sol\":1290:1310  a == b * c + (a % b) */\n  eq\n    /* \"sExodus/SafeMath.sol\":1283:1311  assert(a == b * c + (a % b)) */\n  tag_31\n  jumpi\n  invalid\ntag_31:\n    /* \"sExodus/SafeMath.sol\":1376:1377  c */\n  swap5\n    /* \"sExodus/SafeMath.sol\":1083:1384  function div(... */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"sExodus/sOlympusERC20.sol\":211:10049  contract sExodus is IsEXO, ERC20Permit {... */\ntag_8:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_33\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_36)\ntag_33:\n  dup3\n  0x1f\n  lt\n  tag_34\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_36)\ntag_34:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_36\n  jumpi\n  swap2\n  dup3\n  add\ntag_35:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_36\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_35)\ntag_36:\n  pop\n  tag_37\n  swap3\n  swap2\n  pop\n  tag_38\n  jump\t// in\ntag_37:\n  pop\n  swap1\n  jump\t// out\ntag_38:\ntag_39:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_37\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_39)\ntag_18:\n  shr(0xf8, mload(0x80))\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0xcd3b8a75131b09c18fac61f93bac9440f7b768b1c243a93eca5a67eb03b07828\")\n  assignImmutable(\"0xa357612e78285f7fafdf6b519d8202761470244eff76772361e02b59693fc4a3\")\n  assignImmutable(\"0x5d2bb87bc4e3465b938b7f3bfa80dd200de3ce49dc7e9edab315c9ce3405a0b7\")\n  assignImmutable(\"0x9b0d5a2681b52b4560ba0a55dc00d44d52ed130b12e9b1ecacbe9f4e75788d40\")\n  assignImmutable(\"0xb0c7bc42bdbc6fc210fecd6a5f5b923061cceb0f8ca5c7d964d5c22fc0e4b0b6\")\n  assignImmutable(\"0xee6ed107ec78844a4d229eb2881175204622382692a68d0a6bc9dab5b9b1a469\")\n  assignImmutable(\"0x69de3b38836c938ac93bb31643655e6e0a011af0f354a009a432084d0f963864\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"sExodus/sOlympusERC20.sol\":211:10049  contract sExodus is IsEXO, ERC20Permit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x61d027b3\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xc4ef1c4c\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xc4ef1c4c\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xee99205c\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0xa457c2d7\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xae5c6cd3\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xb8fbd533\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x7965d56d\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x7965d56d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x9358928b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x61d027b3\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x73c69eb7\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x245c0e99\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x3644e515\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x40a5737f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x245c0e99\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2986c0e5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2af36b43\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x095ea7b3\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1bd39674\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x058ecdb4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095be818\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"sExodus/sOlympusERC20.sol\":3906:4744  function rebase(uint256 profit_, uint256 epoch_) public override onlyStakingContract returns (uint256) {... */\n    tag_3:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_42\n      jump\t// in\n    tag_40:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"sExodus/ERC20.sol\":783:864  function name() public view returns (string memory) {... */\n    tag_4:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_45:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_45)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_48\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_48:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sExodus/sOlympusERC20.sol\":9082:9198  function toG(uint256 amount) external view override returns (uint256) {... */\n    tag_5:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      calldataload\n      tag_51\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":6768:6937  function approve(address spender, uint256 value) public override(IERC20, ERC20) returns (bool) {... */\n    tag_6:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_54\n      jump\t// in\n    tag_52:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"sExodus/ERC20.sol\":1056:1154  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_40\n      tag_56\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":8693:8824  function gonsForBalance(uint256 amount) public view override returns (uint256) {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      calldataload\n      tag_59\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":6133:6762  function transferFrom(... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_62\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":2777:3091  function setgOHM(address _gEXO) external {... */\n    tag_10:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"sExodus/sOlympusERC20.sol\":9780:9881  function index() public view override returns (uint256) {... */\n    tag_11:\n      tag_40\n      tag_67\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":1288:1305  IgEXO public gEXO */\n    tag_12:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"sExodus/ERC20.sol\":961:1050  function decimals() public view virtual returns (uint8) {... */\n    tag_13:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"sExodus/ERC20Permit.sol\":2348:2461  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */\n    tag_14:\n      tag_40\n      tag_73\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":6943:7157  function increaseAllowance(address spender, uint256 addedValue) public override returns (bool) {... */\n    tag_15:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_76\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":2539:2771  function setIndex(uint256 _index) external {... */\n    tag_16:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      calldataload\n      tag_79\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":3117:3702  function initialize(address _stakingContract, address _treasury) external {... */\n    tag_17:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_82\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":2130:2153  address public treasury */\n    tag_18:\n      tag_68\n      tag_84\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":8538:8687  function balanceOf(address who) public view override(IERC20, ERC20) returns (uint256) {... */\n    tag_19:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_87\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":1359:1382  Rebase[] public rebases */\n    tag_20:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      calldataload\n      tag_90\n      jump\t// in\n    tag_88:\n      0x40\n      dup1\n      mload\n      swap8\n      dup9\n      mstore\n      0x20\n      dup9\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup7\n      dup7\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x60\n      dup7\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x80\n      dup6\n      add\n      mstore\n      0xa0\n      dup5\n      add\n      mstore\n      0xc0\n      dup4\n      add\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0xe0\n      add\n      swap1\n      return\n        /* \"sExodus/sOlympusERC20.sol\":8830:8957  function balanceForGons(uint256 gons) public view override returns (uint256) {... */\n    tag_21:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      calldataload\n      tag_93\n      jump\t// in\n        /* \"sExodus/ERC20Permit.sol\":2098:2224  function nonces(address owner) public view virtual override returns (uint256) {... */\n    tag_22:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_96\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":9489:9774  function circulatingSupply() public view override returns (uint256) {... */\n    tag_23:\n      tag_40\n      tag_98\n      jump\t// in\n        /* \"sExodus/ERC20.sol\":870:955  function symbol() public view returns (string memory) {... */\n    tag_24:\n      tag_43\n      tag_100\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":7163:7544  function decreaseAllowance(address spender, uint256 subtractedValue) public override returns (bool) {... */\n    tag_25:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_107\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":5670:6127  function transfer(address to, uint256 value) public override(IERC20, ERC20) returns (bool) {... */\n    tag_26:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_110\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":7756:8205  function changeDebt(... */\n    tag_27:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      dup1\n      calldataload\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      0x20\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      iszero\n      iszero\n      tag_113\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":9321:9441  function fromG(uint256 amount) external view override returns (uint256) {... */\n    tag_28:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      calldataload\n      tag_116\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":2159:2215  mapping(address => uint256) public override debtBalances */\n    tag_29:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_119\n      jump\t// in\n        /* \"sExodus/ERC20Permit.sol\":1411:2037  function permit(... */\n    tag_30:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xe0\n      dup2\n      lt\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_122\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":9887:10047  function allowance(address owner_, address spender) public view override(IERC20, ERC20) returns (uint256) {... */\n    tag_31:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_125\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":1221:1251  address public stakingContract */\n    tag_32:\n      tag_68\n      tag_127\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":3906:4744  function rebase(uint256 profit_, uint256 epoch_) public override onlyStakingContract returns (uint256) {... */\n    tag_42:\n        /* \"sExodus/sOlympusERC20.sol\":684:699  stakingContract */\n      sload(0x08)\n        /* \"sExodus/sOlympusERC20.sol\":4000:4007  uint256 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":684:699  stakingContract */\n      and\n        /* \"sExodus/sOlympusERC20.sol\":670:680  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":670:699  msg.sender == stakingContract */\n      eq\n        /* \"sExodus/sOlympusERC20.sol\":662:750  require(msg.sender == stakingContract, \"StakingContract:  call is not staking contract\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a5659c1cc908cdac5d93994075e79b6facf5d4cb17e30f3636004f4933a19d9c\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"sExodus/sOlympusERC20.sol\":4019:4039  uint256 rebaseAmount */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":4049:4075  uint256 circulatingSupply_ */\n      dup1\n        /* \"sExodus/sOlympusERC20.sol\":4078:4097  circulatingSupply() */\n      tag_132\n        /* \"sExodus/sOlympusERC20.sol\":4078:4095  circulatingSupply */\n      tag_98\n        /* \"sExodus/sOlympusERC20.sol\":4078:4097  circulatingSupply() */\n      jump\t// in\n    tag_132:\n        /* \"sExodus/sOlympusERC20.sol\":4049:4097  uint256 circulatingSupply_ = circulatingSupply() */\n      swap1\n      pop\n        /* \"sExodus/sOlympusERC20.sol\":4111:4123  profit_ == 0 */\n      dup5\n        /* \"sExodus/sOlympusERC20.sol\":4107:4443  if (profit_ == 0) {... */\n      tag_133\n      jumpi\n        /* \"sExodus/sOlympusERC20.sol\":4162:4174  _totalSupply */\n      sload(0x02)\n        /* \"sExodus/sOlympusERC20.sol\":4144:4175  LogSupply(epoch_, _totalSupply) */\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n        /* \"sExodus/sOlympusERC20.sol\":4154:4160  epoch_ */\n      dup6\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":4144:4175  LogSupply(epoch_, _totalSupply) */\n      0x0417b340e646d4be71f9b2da63b5c3c69bc9cfa069f0e0db4756271886130bf4\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"sExodus/sOlympusERC20.sol\":4204:4210  epoch_ */\n      dup4\n        /* \"sExodus/sOlympusERC20.sol\":4194:4223  LogRebase(epoch_, 0, index()) */\n      0x6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb2\n        /* \"sExodus/sOlympusERC20.sol\":4212:4213  0 */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":4215:4222  index() */\n      tag_134\n        /* \"sExodus/sOlympusERC20.sol\":4215:4220  index */\n      tag_67\n        /* \"sExodus/sOlympusERC20.sol\":4215:4222  index() */\n      jump\t// in\n    tag_134:\n        /* \"sExodus/sOlympusERC20.sol\":4194:4223  LogRebase(epoch_, 0, index()) */\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"sExodus/sOlympusERC20.sol\":4244:4256  _totalSupply */\n      sload(0x02)\n        /* \"sExodus/sOlympusERC20.sol\":4237:4256  return _totalSupply */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_131)\n        /* \"sExodus/sOlympusERC20.sol\":4107:4443  if (profit_ == 0) {... */\n    tag_133:\n        /* \"sExodus/sOlympusERC20.sol\":4277:4299  circulatingSupply_ > 0 */\n      dup1\n      iszero\n        /* \"sExodus/sOlympusERC20.sol\":4273:4443  if (circulatingSupply_ > 0) {... */\n      tag_136\n      jumpi\n        /* \"sExodus/sOlympusERC20.sol\":4330:4379  profit_.mul(_totalSupply).div(circulatingSupply_) */\n      tag_137\n        /* \"sExodus/sOlympusERC20.sol\":4360:4378  circulatingSupply_ */\n      dup2\n        /* \"sExodus/sOlympusERC20.sol\":4330:4355  profit_.mul(_totalSupply) */\n      tag_138\n        /* \"sExodus/sOlympusERC20.sol\":4342:4354  _totalSupply */\n      sload(0x02)\n        /* \"sExodus/sOlympusERC20.sol\":4330:4337  profit_ */\n      dup9\n        /* \"sExodus/sOlympusERC20.sol\":4330:4341  profit_.mul */\n      tag_139\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":4330:4355  profit_.mul(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"sExodus/sOlympusERC20.sol\":4330:4359  profit_.mul(_totalSupply).div */\n      swap1\n      tag_128\n        /* \"sExodus/sOlympusERC20.sol\":4330:4379  profit_.mul(_totalSupply).div(circulatingSupply_) */\n      jump\t// in\n    tag_137:\n        /* \"sExodus/sOlympusERC20.sol\":4315:4379  rebaseAmount = profit_.mul(_totalSupply).div(circulatingSupply_) */\n      swap2\n      pop\n        /* \"sExodus/sOlympusERC20.sol\":4273:4443  if (circulatingSupply_ > 0) {... */\n      jump(tag_140)\n    tag_136:\n        /* \"sExodus/sOlympusERC20.sol\":4425:4432  profit_ */\n      dup5\n        /* \"sExodus/sOlympusERC20.sol\":4410:4432  rebaseAmount = profit_ */\n      swap2\n      pop\n        /* \"sExodus/sOlympusERC20.sol\":4273:4443  if (circulatingSupply_ > 0) {... */\n    tag_140:\n        /* \"sExodus/sOlympusERC20.sol\":4468:4480  _totalSupply */\n      sload(0x02)\n        /* \"sExodus/sOlympusERC20.sol\":4468:4498  _totalSupply.add(rebaseAmount) */\n      tag_141\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":4485:4497  rebaseAmount */\n      dup4\n        /* \"sExodus/sOlympusERC20.sol\":4468:4484  _totalSupply.add */\n      tag_142\n        /* \"sExodus/sOlympusERC20.sol\":4468:4498  _totalSupply.add(rebaseAmount) */\n      jump\t// in\n    tag_141:\n        /* \"sExodus/sOlympusERC20.sol\":4453:4465  _totalSupply */\n      0x02\n        /* \"sExodus/sOlympusERC20.sol\":4453:4498  _totalSupply = _totalSupply.add(rebaseAmount) */\n      dup2\n      swap1\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":4528:4538  MAX_SUPPLY */\n      0xffffffffffffffffffffffffffffffff\n      lt\n        /* \"sExodus/sOlympusERC20.sol\":4509:4590  if (_totalSupply > MAX_SUPPLY) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"sExodus/sOlympusERC20.sol\":4569:4579  MAX_SUPPLY */\n      0xffffffffffffffffffffffffffffffff\n        /* \"sExodus/sOlympusERC20.sol\":4554:4566  _totalSupply */\n      0x02\n        /* \"sExodus/sOlympusERC20.sol\":4554:4579  _totalSupply = MAX_SUPPLY */\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":4509:4590  if (_totalSupply > MAX_SUPPLY) {... */\n    tag_143:\n        /* \"sExodus/sOlympusERC20.sol\":4619:4647  TOTAL_GONS.div(_totalSupply) */\n      tag_144\n        /* \"sExodus/sOlympusERC20.sol\":4634:4646  _totalSupply */\n      sload(0x02)\n        /* \"sExodus/sOlympusERC20.sol\":1523:1540  5_000_000 * 10**9 */\n      0x11c37937e08000\n      not(0x00)\n        /* \"sExodus/sOlympusERC20.sol\":1773:1811  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n      dup2\n      tag_145\n      jumpi\n      invalid\n    tag_145:\n      mod\n        /* \"sExodus/sOlympusERC20.sol\":1758:1812  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n      not\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":4619:4633  TOTAL_GONS.div */\n      tag_128\n        /* \"sExodus/sOlympusERC20.sol\":4619:4647  TOTAL_GONS.div(_totalSupply) */\n      jump\t// in\n    tag_144:\n        /* \"sExodus/sOlympusERC20.sol\":4600:4616  _gonsPerFragment */\n      0x0b\n        /* \"sExodus/sOlympusERC20.sol\":4600:4647  _gonsPerFragment = TOTAL_GONS.div(_totalSupply) */\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":4658:4707  _storeRebase(circulatingSupply_, profit_, epoch_) */\n      tag_146\n        /* \"sExodus/sOlympusERC20.sol\":4671:4689  circulatingSupply_ */\n      dup2\n        /* \"sExodus/sOlympusERC20.sol\":4691:4698  profit_ */\n      dup7\n        /* \"sExodus/sOlympusERC20.sol\":4700:4706  epoch_ */\n      dup7\n        /* \"sExodus/sOlympusERC20.sol\":4658:4670  _storeRebase */\n      tag_147\n        /* \"sExodus/sOlympusERC20.sol\":4658:4707  _storeRebase(circulatingSupply_, profit_, epoch_) */\n      jump\t// in\n    tag_146:\n        /* \"sExodus/sOlympusERC20.sol\":4725:4737  _totalSupply */\n      sload(0x02)\n        /* \"sExodus/sOlympusERC20.sol\":4718:4737  return _totalSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"sExodus/sOlympusERC20.sol\":760:761  _ */\n    tag_131:\n        /* \"sExodus/sOlympusERC20.sol\":3906:4744  function rebase(uint256 profit_, uint256 epoch_) public override onlyStakingContract returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"sExodus/ERC20.sol\":783:864  function name() public view returns (string memory) {... */\n    tag_44:\n        /* \"sExodus/ERC20.sol\":852:857  _name */\n      0x03\n        /* \"sExodus/ERC20.sol\":845:857  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"sExodus/ERC20.sol\":820:833  string memory */\n      0x60\n      swap4\n        /* \"sExodus/ERC20.sol\":845:857  return _name */\n      swap1\n      swap3\n        /* \"sExodus/ERC20.sol\":852:857  _name */\n      swap1\n      swap2\n        /* \"sExodus/ERC20.sol\":845:857  return _name */\n      dup4\n      add\n        /* \"sExodus/ERC20.sol\":852:857  _name */\n      dup3\n        /* \"sExodus/ERC20.sol\":845:857  return _name */\n      dup3\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n    tag_150:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_151:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_151\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"sExodus/ERC20.sol\":783:864  function name() public view returns (string memory) {... */\n    tag_148:\n      swap1\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":9082:9198  function toG(uint256 amount) external view override returns (uint256) {... */\n    tag_51:\n        /* \"sExodus/sOlympusERC20.sol\":9169:9173  gEXO */\n      sload(0x09)\n        /* \"sExodus/sOlympusERC20.sol\":9169:9191  gEXO.balanceTo(amount) */\n      0x40\n      dup1\n      mload\n      0x66a5236c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"sExodus/sOlympusERC20.sol\":9143:9150  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":9169:9173  gEXO */\n      and\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":9169:9183  gEXO.balanceTo */\n      0x66a5236c\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":9169:9191  gEXO.balanceTo(amount) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"sExodus/sOlympusERC20.sol\":9169:9173  gEXO */\n      dup7\n        /* \"sExodus/sOlympusERC20.sol\":9169:9191  gEXO.balanceTo(amount) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      mload\n      swap3\n        /* \"sExodus/sOlympusERC20.sol\":9082:9198  function toG(uint256 amount) external view override returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":6768:6937  function approve(address spender, uint256 value) public override(IERC20, ERC20) returns (bool) {... */\n    tag_54:\n        /* \"sExodus/sOlympusERC20.sol\":6857:6861  bool */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":6873:6909  _approve(msg.sender, spender, value) */\n      tag_158\n        /* \"sExodus/sOlympusERC20.sol\":6882:6892  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":6894:6901  spender */\n      dup5\n        /* \"sExodus/sOlympusERC20.sol\":6903:6908  value */\n      dup5\n        /* \"sExodus/sOlympusERC20.sol\":6873:6881  _approve */\n      tag_159\n        /* \"sExodus/sOlympusERC20.sol\":6873:6909  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_158:\n      pop\n        /* \"sExodus/sOlympusERC20.sol\":6926:6930  true */\n      0x01\n        /* \"sExodus/sOlympusERC20.sol\":6768:6937  function approve(address spender, uint256 value) public override(IERC20, ERC20) returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"sExodus/ERC20.sol\":1056:1154  function totalSupply() public view override returns (uint256) {... */\n    tag_56:\n        /* \"sExodus/ERC20.sol\":1135:1147  _totalSupply */\n      sload(0x02)\n        /* \"sExodus/ERC20.sol\":1056:1154  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":8693:8824  function gonsForBalance(uint256 amount) public view override returns (uint256) {... */\n    tag_59:\n        /* \"sExodus/sOlympusERC20.sol\":8763:8770  uint256 */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":8789:8817  amount.mul(_gonsPerFragment) */\n      tag_131\n        /* \"sExodus/sOlympusERC20.sol\":8800:8816  _gonsPerFragment */\n      sload(0x0b)\n        /* \"sExodus/sOlympusERC20.sol\":8789:8795  amount */\n      dup4\n        /* \"sExodus/sOlympusERC20.sol\":8789:8799  amount.mul */\n      tag_139\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":8789:8817  amount.mul(_gonsPerFragment) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":6133:6762  function transferFrom(... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":6316:6335  _allowedValue[from] */\n      dup4\n      and\n        /* \"sExodus/sOlympusERC20.sol\":6266:6270  bool */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":6316:6335  _allowedValue[from] */\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":6316:6329  _allowedValue */\n      0x0d\n        /* \"sExodus/sOlympusERC20.sol\":6316:6335  _allowedValue[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"sExodus/sOlympusERC20.sol\":6336:6346  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":6316:6347  _allowedValue[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"sExodus/sOlympusERC20.sol\":6316:6358  _allowedValue[from][msg.sender].sub(value) */\n      tag_164\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":6352:6357  value */\n      dup4\n        /* \"sExodus/sOlympusERC20.sol\":6316:6351  _allowedValue[from][msg.sender].sub */\n      tag_165\n        /* \"sExodus/sOlympusERC20.sol\":6316:6358  _allowedValue[from][msg.sender].sub(value) */\n      jump\t// in\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":6282:6301  _allowedValue[from] */\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":6282:6295  _allowedValue */\n      0x0d\n        /* \"sExodus/sOlympusERC20.sol\":6282:6301  _allowedValue[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"sExodus/sOlympusERC20.sol\":6302:6312  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":6282:6313  _allowedValue[from][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"sExodus/sOlympusERC20.sol\":6282:6358  _allowedValue[from][msg.sender] = _allowedValue[from][msg.sender].sub(value) */\n      dup6\n      swap1\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":6373:6432  Approval(from, msg.sender, _allowedValue[from][msg.sender]) */\n      dup1\n      mload\n      swap5\n      dup6\n      mstore\n      mload\n        /* \"sExodus/sOlympusERC20.sol\":6302:6312  msg.sender */\n      swap2\n      swap4\n        /* \"sExodus/sOlympusERC20.sol\":6373:6432  Approval(from, msg.sender, _allowedValue[from][msg.sender]) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"sExodus/sOlympusERC20.sol\":6443:6459  uint256 gonValue */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":6462:6483  gonsForBalance(value) */\n      tag_166\n        /* \"sExodus/sOlympusERC20.sol\":6477:6482  value */\n      dup4\n        /* \"sExodus/sOlympusERC20.sol\":6462:6476  gonsForBalance */\n      tag_59\n        /* \"sExodus/sOlympusERC20.sol\":6462:6483  gonsForBalance(value) */\n      jump\t// in\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":6514:6532  _gonBalances[from] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":6514:6526  _gonBalances */\n      0x0c\n        /* \"sExodus/sOlympusERC20.sol\":6514:6532  _gonBalances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"sExodus/sOlympusERC20.sol\":6443:6483  uint256 gonValue = gonsForBalance(value) */\n      swap1\n      swap2\n      pop\n        /* \"sExodus/sOlympusERC20.sol\":6514:6546  _gonBalances[from].sub(gonValue) */\n      tag_167\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":6443:6483  uint256 gonValue = gonsForBalance(value) */\n      dup3\n        /* \"sExodus/sOlympusERC20.sol\":6514:6536  _gonBalances[from].sub */\n      tag_165\n        /* \"sExodus/sOlympusERC20.sol\":6514:6546  _gonBalances[from].sub(gonValue) */\n      jump\t// in\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":6493:6511  _gonBalances[from] */\n      dup1\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":6493:6505  _gonBalances */\n      0x0c\n        /* \"sExodus/sOlympusERC20.sol\":6493:6511  _gonBalances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"sExodus/sOlympusERC20.sol\":6493:6546  _gonBalances[from] = _gonBalances[from].sub(gonValue) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":6575:6591  _gonBalances[to] */\n      swap1\n      dup7\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"sExodus/sOlympusERC20.sol\":6575:6605  _gonBalances[to].add(gonValue) */\n      tag_168\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":6596:6604  gonValue */\n      dup3\n        /* \"sExodus/sOlympusERC20.sol\":6575:6595  _gonBalances[to].add */\n      tag_142\n        /* \"sExodus/sOlympusERC20.sol\":6575:6605  _gonBalances[to].add(gonValue) */\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":6556:6572  _gonBalances[to] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":6556:6568  _gonBalances */\n      0x0c\n        /* \"sExodus/sOlympusERC20.sol\":6556:6572  _gonBalances[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"sExodus/sOlympusERC20.sol\":6556:6605  _gonBalances[to] = _gonBalances[to].add(gonValue) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":6643:6661  debtBalances[from] */\n      swap2\n      dup9\n      and\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":6643:6655  debtBalances */\n      0x0f\n        /* \"sExodus/sOlympusERC20.sol\":6643:6661  debtBalances[from] */\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n        /* \"sExodus/sOlympusERC20.sol\":6624:6639  balanceOf(from) */\n      tag_169\n        /* \"sExodus/sOlympusERC20.sol\":6656:6660  from */\n      dup7\n        /* \"sExodus/sOlympusERC20.sol\":6624:6633  balanceOf */\n      tag_87\n        /* \"sExodus/sOlympusERC20.sol\":6624:6639  balanceOf(from) */\n      jump\t// in\n    tag_169:\n        /* \"sExodus/sOlympusERC20.sol\":6624:6661  balanceOf(from) >= debtBalances[from] */\n      lt\n      iszero\n        /* \"sExodus/sOlympusERC20.sol\":6616:6694  require(balanceOf(from) >= debtBalances[from], \"Debt: cannot transfer amount\") */\n      tag_170\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x446562743a2063616e6e6f74207472616e7366657220616d6f756e7400000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_170:\n        /* \"sExodus/sOlympusERC20.sol\":6724:6726  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":6709:6734  Transfer(from, to, value) */\n      and\n        /* \"sExodus/sOlympusERC20.sol\":6718:6722  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":6709:6734  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"sExodus/sOlympusERC20.sol\":6728:6733  value */\n      dup6\n        /* \"sExodus/sOlympusERC20.sol\":6709:6734  Transfer(from, to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"sExodus/sOlympusERC20.sol\":6751:6755  true */\n      0x01\n      swap5\n        /* \"sExodus/sOlympusERC20.sol\":6133:6762  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":2777:3091  function setgOHM(address _gEXO) external {... */\n    tag_65:\n        /* \"sExodus/sOlympusERC20.sol\":2850:2861  initializer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"sExodus/sOlympusERC20.sol\":2836:2846  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":2836:2861  msg.sender == initializer */\n      eq\n        /* \"sExodus/sOlympusERC20.sol\":2828:2905  require(msg.sender == initializer, \"Initializer:  caller is not initializer\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_943a7f2fe776b1da8f1c593116d1db5f305d3c06d55576c45bce8bd0cf858a2e\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"sExodus/sOlympusERC20.sol\":2931:2935  gEXO */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n        /* \"sExodus/sOlympusERC20.sol\":2923:2950  address(gEXO) == address(0) */\n      iszero\n        /* \"sExodus/sOlympusERC20.sol\":2915:2978  require(address(gEXO) == address(0), \"gEXO:  gEXO already set\") */\n      tag_173\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x6745584f3a20206745584f20616c726561647920736574000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":2996:3015  _gEXO != address(0) */\n      dup2\n      and\n        /* \"sExodus/sOlympusERC20.sol\":2988:3055  require(_gEXO != address(0), \"gEXO:  gEXO is not a valid contract\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_035b6bc83dafb7a2caf38cee64b612ce6a24918ce92e23821600bd75c1740717\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"sExodus/sOlympusERC20.sol\":3065:3069  gEXO */\n      0x09\n        /* \"sExodus/sOlympusERC20.sol\":3065:3084  gEXO = IgEXO(_gEXO) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":2777:3091  function setgOHM(address _gEXO) external {... */\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":9780:9881  function index() public view override returns (uint256) {... */\n    tag_67:\n        /* \"sExodus/sOlympusERC20.sol\":9827:9834  uint256 */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":9853:9874  balanceForGons(INDEX) */\n      tag_176\n        /* \"sExodus/sOlympusERC20.sol\":9868:9873  INDEX */\n      sload(0x07)\n        /* \"sExodus/sOlympusERC20.sol\":9853:9867  balanceForGons */\n      tag_93\n        /* \"sExodus/sOlympusERC20.sol\":9853:9874  balanceForGons(INDEX) */\n      jump\t// in\n    tag_176:\n        /* \"sExodus/sOlympusERC20.sol\":9846:9874  return balanceForGons(INDEX) */\n      swap1\n      pop\n        /* \"sExodus/sOlympusERC20.sol\":9780:9881  function index() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":1288:1305  IgEXO public gEXO */\n    tag_69:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n      dup2\n      jump\t// out\n        /* \"sExodus/ERC20.sol\":961:1050  function decimals() public view virtual returns (uint8) {... */\n    tag_71:\n        /* \"sExodus/ERC20.sol\":1034:1043  _decimals */\n      immutable(\"0x69de3b38836c938ac93bb31643655e6e0a011af0f354a009a432084d0f963864\")\n        /* \"sExodus/ERC20.sol\":961:1050  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"sExodus/ERC20Permit.sol\":2348:2461  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */\n    tag_73:\n        /* \"sExodus/ERC20Permit.sol\":2408:2415  bytes32 */\n      0x00\n        /* \"sExodus/ERC20Permit.sol\":2434:2454  _domainSeparatorV4() */\n      tag_176\n        /* \"sExodus/ERC20Permit.sol\":2434:2452  _domainSeparatorV4 */\n      tag_180\n        /* \"sExodus/ERC20Permit.sol\":2434:2454  _domainSeparatorV4() */\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":6943:7157  function increaseAllowance(address spender, uint256 addedValue) public override returns (bool) {... */\n    tag_76:\n        /* \"sExodus/sOlympusERC20.sol\":7057:7067  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":7032:7036  bool */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":7078:7103  _allowedValue[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":7078:7091  _allowedValue */\n      0x0d\n        /* \"sExodus/sOlympusERC20.sol\":7078:7103  _allowedValue[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":7078:7112  _allowedValue[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"sExodus/sOlympusERC20.sol\":7032:7036  bool */\n      swap1\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":7048:7129  _approve(msg.sender, spender, _allowedValue[msg.sender][spender].add(addedValue)) */\n      tag_158\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":7069:7076  spender */\n      dup6\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":7078:7128  _allowedValue[msg.sender][spender].add(addedValue) */\n      tag_183\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":7117:7127  addedValue */\n      dup7\n        /* \"sExodus/sOlympusERC20.sol\":7078:7116  _allowedValue[msg.sender][spender].add */\n      tag_142\n        /* \"sExodus/sOlympusERC20.sol\":7078:7128  _allowedValue[msg.sender][spender].add(addedValue) */\n      jump\t// in\n    tag_183:\n        /* \"sExodus/sOlympusERC20.sol\":7048:7056  _approve */\n      tag_159\n        /* \"sExodus/sOlympusERC20.sol\":7048:7129  _approve(msg.sender, spender, _allowedValue[msg.sender][spender].add(addedValue)) */\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":2539:2771  function setIndex(uint256 _index) external {... */\n    tag_79:\n        /* \"sExodus/sOlympusERC20.sol\":2614:2625  initializer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"sExodus/sOlympusERC20.sol\":2600:2610  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":2600:2625  msg.sender == initializer */\n      eq\n        /* \"sExodus/sOlympusERC20.sol\":2592:2669  require(msg.sender == initializer, \"Initializer:  caller is not initializer\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_943a7f2fe776b1da8f1c593116d1db5f305d3c06d55576c45bce8bd0cf858a2e\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"sExodus/sOlympusERC20.sol\":2687:2692  INDEX */\n      sload(0x07)\n        /* \"sExodus/sOlympusERC20.sol\":2687:2697  INDEX == 0 */\n      iszero\n        /* \"sExodus/sOlympusERC20.sol\":2679:2724  require(INDEX == 0, \"Cannot set INDEX again\") */\n      tag_186\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      0x43616e6e6f742073657420494e44455820616761696e00000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_186:\n        /* \"sExodus/sOlympusERC20.sol\":2742:2764  gonsForBalance(_index) */\n      tag_187\n        /* \"sExodus/sOlympusERC20.sol\":2757:2763  _index */\n      dup2\n        /* \"sExodus/sOlympusERC20.sol\":2742:2756  gonsForBalance */\n      tag_59\n        /* \"sExodus/sOlympusERC20.sol\":2742:2764  gonsForBalance(_index) */\n      jump\t// in\n    tag_187:\n        /* \"sExodus/sOlympusERC20.sol\":2734:2739  INDEX */\n      0x07\n        /* \"sExodus/sOlympusERC20.sol\":2734:2764  INDEX = gonsForBalance(_index) */\n      sstore\n      pop\n        /* \"sExodus/sOlympusERC20.sol\":2539:2771  function setIndex(uint256 _index) external {... */\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":3117:3702  function initialize(address _stakingContract, address _treasury) external {... */\n    tag_82:\n        /* \"sExodus/sOlympusERC20.sol\":3223:3234  initializer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"sExodus/sOlympusERC20.sol\":3209:3219  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":3209:3234  msg.sender == initializer */\n      eq\n        /* \"sExodus/sOlympusERC20.sol\":3201:3278  require(msg.sender == initializer, \"Initializer:  caller is not initializer\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_943a7f2fe776b1da8f1c593116d1db5f305d3c06d55576c45bce8bd0cf858a2e\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":3297:3327  _stakingContract != address(0) */\n      dup3\n      and\n        /* \"sExodus/sOlympusERC20.sol\":3289:3339  require(_stakingContract != address(0), \"Staking\") */\n      tag_190\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x07\n      0x24\n      dup3\n      add\n      mstore\n      0x5374616b696e6700000000000000000000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_190:\n        /* \"sExodus/sOlympusERC20.sol\":3349:3364  stakingContract */\n      0x08\n        /* \"sExodus/sOlympusERC20.sol\":3349:3383  stakingContract = _stakingContract */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":3406:3421  stakingContract */\n      swap1\n      dup2\n      and\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":3393:3422  _gonBalances[stakingContract] */\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":3393:3405  _gonBalances */\n      0x0c\n        /* \"sExodus/sOlympusERC20.sol\":3393:3422  _gonBalances[stakingContract] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      not(0x0e3d2cfe61ffff)\n        /* \"sExodus/sOlympusERC20.sol\":3393:3435  _gonBalances[stakingContract] = TOTAL_GONS */\n      swap1\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":3454:3477  _treasury != address(0) */\n      dup2\n      and\n        /* \"sExodus/sOlympusERC20.sol\":3446:3504  require(_treasury != address(0), \"Zero address: Treasury\") */\n      tag_192\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      0x5a65726f20616464726573733a20547265617375727900000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_192:\n        /* \"sExodus/sOlympusERC20.sol\":3514:3522  treasury */\n      0x0e\n        /* \"sExodus/sOlympusERC20.sol\":3514:3534  treasury = _treasury */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":3573:3588  stakingContract */\n      sload(0x08)\n        /* \"sExodus/sOlympusERC20.sol\":3590:3602  _totalSupply */\n      sload(0x02)\n        /* \"sExodus/sOlympusERC20.sol\":3550:3603  Transfer(address(0x0), stakingContract, _totalSupply) */\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n        /* \"sExodus/sOlympusERC20.sol\":3573:3588  stakingContract */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n      0x00\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":3550:3603  Transfer(address(0x0), stakingContract, _totalSupply) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      0x20\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"sExodus/sOlympusERC20.sol\":3644:3659  stakingContract */\n      sload(0x08)\n        /* \"sExodus/sOlympusERC20.sol\":3618:3660  LogStakingContractUpdated(stakingContract) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":3644:3659  stakingContract */\n      swap1\n      swap3\n      and\n        /* \"sExodus/sOlympusERC20.sol\":3618:3660  LogStakingContractUpdated(stakingContract) */\n      dup3\n      mstore\n      mload\n      0x817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a1\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n      pop\n      pop\n        /* \"sExodus/sOlympusERC20.sol\":3671:3682  initializer */\n      0x06\n        /* \"sExodus/sOlympusERC20.sol\":3671:3695  initializer = address(0) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":3117:3702  function initialize(address _stakingContract, address _treasury) external {... */\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":2130:2153  address public treasury */\n    tag_84:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0e))\n      dup2\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":8538:8687  function balanceOf(address who) public view override(IERC20, ERC20) returns (uint256) {... */\n    tag_87:\n        /* \"sExodus/sOlympusERC20.sol\":8663:8679  _gonsPerFragment */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":8641:8658  _gonBalances[who] */\n      dup3\n      and\n        /* \"sExodus/sOlympusERC20.sol\":8615:8622  uint256 */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":8641:8658  _gonBalances[who] */\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":8641:8653  _gonBalances */\n      0x0c\n        /* \"sExodus/sOlympusERC20.sol\":8641:8658  _gonBalances[who] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"sExodus/sOlympusERC20.sol\":8615:8622  uint256 */\n      swap1\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":8641:8680  _gonBalances[who].div(_gonsPerFragment) */\n      tag_131\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":8641:8658  _gonBalances[who] */\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":8641:8662  _gonBalances[who].div */\n      tag_128\n        /* \"sExodus/sOlympusERC20.sol\":8641:8680  _gonBalances[who].div(_gonsPerFragment) */\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":1359:1382  Rebase[] public rebases */\n    tag_90:\n      0x0a\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":8830:8957  function balanceForGons(uint256 gons) public view override returns (uint256) {... */\n    tag_93:\n        /* \"sExodus/sOlympusERC20.sol\":8898:8905  uint256 */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":8924:8950  gons.div(_gonsPerFragment) */\n      tag_131\n        /* \"sExodus/sOlympusERC20.sol\":8933:8949  _gonsPerFragment */\n      sload(0x0b)\n        /* \"sExodus/sOlympusERC20.sol\":8924:8928  gons */\n      dup4\n        /* \"sExodus/sOlympusERC20.sol\":8924:8932  gons.div */\n      tag_128\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":8924:8950  gons.div(_gonsPerFragment) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"sExodus/ERC20Permit.sol\":2098:2224  function nonces(address owner) public view virtual override returns (uint256) {... */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/ERC20Permit.sol\":2193:2207  _nonces[owner] */\n      dup2\n      and\n        /* \"sExodus/ERC20Permit.sol\":2167:2174  uint256 */\n      0x00\n        /* \"sExodus/ERC20Permit.sol\":2193:2207  _nonces[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/ERC20Permit.sol\":2193:2200  _nonces */\n      0x05\n        /* \"sExodus/ERC20Permit.sol\":2193:2207  _nonces[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"sExodus/ERC20Permit.sol\":2193:2217  _nonces[owner].current() */\n      tag_131\n      swap1\n        /* \"sExodus/ERC20Permit.sol\":2193:2215  _nonces[owner].current */\n      tag_201\n        /* \"sExodus/ERC20Permit.sol\":2193:2217  _nonces[owner].current() */\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":9489:9774  function circulatingSupply() public view override returns (uint256) {... */\n    tag_98:\n        /* \"sExodus/sOlympusERC20.sol\":9548:9555  uint256 */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":9586:9767  _totalSupply.sub(balanceOf(stakingContract)).add(gEXO.balanceFrom(IERC20(address(gEXO)).totalSupply())).add(... */\n      tag_176\n        /* \"sExodus/sOlympusERC20.sol\":9720:9735  stakingContract */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":9711:9751  IStaking(stakingContract).supplyInWarmup */\n      and\n      0x20138641\n        /* \"sExodus/sOlympusERC20.sol\":9711:9753  IStaking(stakingContract).supplyInWarmup() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_207\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_207:\n      pop\n      mload\n        /* \"sExodus/sOlympusERC20.sol\":9635:9639  gEXO */\n      sload(0x09)\n        /* \"sExodus/sOlympusERC20.sol\":9652:9687  IERC20(address(gEXO)).totalSupply() */\n      0x40\n      dup1\n      mload\n      0x18160ddd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"sExodus/sOlympusERC20.sol\":9586:9689  _totalSupply.sub(balanceOf(stakingContract)).add(gEXO.balanceFrom(IERC20(address(gEXO)).totalSupply())) */\n      tag_217\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":9635:9639  gEXO */\n      and\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":9635:9651  gEXO.balanceFrom */\n      0xa8248768\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":9635:9639  gEXO */\n      dup4\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":9652:9685  IERC20(address(gEXO)).totalSupply */\n      0x18160ddd\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":9652:9687  IERC20(address(gEXO)).totalSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"sExodus/sOlympusERC20.sol\":9711:9753  IStaking(stakingContract).supplyInWarmup() */\n      0x20\n      swap3\n        /* \"sExodus/sOlympusERC20.sol\":9652:9687  IERC20(address(gEXO)).totalSupply() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"sExodus/sOlympusERC20.sol\":9635:9639  gEXO */\n      dup7\n        /* \"sExodus/sOlympusERC20.sol\":9652:9687  IERC20(address(gEXO)).totalSupply() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_212\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_212:\n      pop\n      mload\n        /* \"sExodus/sOlympusERC20.sol\":9635:9688  gEXO.balanceFrom(IERC20(address(gEXO)).totalSupply()) */\n      0x40\n      dup1\n      mload\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      mload\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n        /* \"sExodus/sOlympusERC20.sol\":9652:9687  IERC20(address(gEXO)).totalSupply() */\n      0x20\n      swap3\n        /* \"sExodus/sOlympusERC20.sol\":9635:9688  gEXO.balanceFrom(IERC20(address(gEXO)).totalSupply()) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_213:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      mload\n        /* \"sExodus/sOlympusERC20.sol\":9613:9628  stakingContract */\n      sload(0x08)\n        /* \"sExodus/sOlympusERC20.sol\":9586:9630  _totalSupply.sub(balanceOf(stakingContract)) */\n      tag_217\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":9603:9629  balanceOf(stakingContract) */\n      tag_218\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":9613:9628  stakingContract */\n      and\n        /* \"sExodus/sOlympusERC20.sol\":9603:9612  balanceOf */\n      tag_87\n        /* \"sExodus/sOlympusERC20.sol\":9603:9629  balanceOf(stakingContract) */\n      jump\t// in\n    tag_218:\n        /* \"sExodus/sOlympusERC20.sol\":9586:9598  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":9586:9602  _totalSupply.sub */\n      tag_165\n        /* \"sExodus/sOlympusERC20.sol\":9586:9630  _totalSupply.sub(balanceOf(stakingContract)) */\n      jump\t// in\n    tag_217:\n        /* \"sExodus/sOlympusERC20.sol\":9586:9634  _totalSupply.sub(balanceOf(stakingContract)).add */\n      swap1\n      tag_142\n        /* \"sExodus/sOlympusERC20.sol\":9586:9689  _totalSupply.sub(balanceOf(stakingContract)).add(gEXO.balanceFrom(IERC20(address(gEXO)).totalSupply())) */\n      jump\t// in\n        /* \"sExodus/ERC20.sol\":870:955  function symbol() public view returns (string memory) {... */\n    tag_100:\n        /* \"sExodus/ERC20.sol\":941:948  _symbol */\n      0x04\n        /* \"sExodus/ERC20.sol\":934:948  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"sExodus/ERC20.sol\":909:922  string memory */\n      0x60\n      swap4\n        /* \"sExodus/ERC20.sol\":934:948  return _symbol */\n      swap1\n      swap3\n        /* \"sExodus/ERC20.sol\":941:948  _symbol */\n      swap1\n      swap2\n        /* \"sExodus/ERC20.sol\":934:948  return _symbol */\n      dup4\n      add\n        /* \"sExodus/ERC20.sol\":941:948  _symbol */\n      dup3\n        /* \"sExodus/ERC20.sol\":934:948  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n        /* \"sExodus/sOlympusERC20.sol\":7163:7544  function decreaseAllowance(address spender, uint256 subtractedValue) public override returns (bool) {... */\n    tag_107:\n        /* \"sExodus/sOlympusERC20.sol\":7306:7316  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":7257:7261  bool */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":7292:7317  _allowedValue[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":7292:7305  _allowedValue */\n      0x0d\n        /* \"sExodus/sOlympusERC20.sol\":7292:7317  _allowedValue[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":7292:7326  _allowedValue[msg.sender][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"sExodus/sOlympusERC20.sol\":7340:7367  subtractedValue >= oldValue */\n      dup1\n      dup4\n      lt\n        /* \"sExodus/sOlympusERC20.sol\":7336:7517  if (subtractedValue >= oldValue) {... */\n      tag_224\n      jumpi\n        /* \"sExodus/sOlympusERC20.sol\":7383:7415  _approve(msg.sender, spender, 0) */\n      tag_225\n        /* \"sExodus/sOlympusERC20.sol\":7392:7402  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":7404:7411  spender */\n      dup6\n        /* \"sExodus/sOlympusERC20.sol\":7413:7414  0 */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":7383:7391  _approve */\n      tag_159\n        /* \"sExodus/sOlympusERC20.sol\":7383:7415  _approve(msg.sender, spender, 0) */\n      jump\t// in\n    tag_225:\n        /* \"sExodus/sOlympusERC20.sol\":7336:7517  if (subtractedValue >= oldValue) {... */\n      jump(tag_227)\n    tag_224:\n        /* \"sExodus/sOlympusERC20.sol\":7446:7506  _approve(msg.sender, spender, oldValue.sub(subtractedValue)) */\n      tag_227\n        /* \"sExodus/sOlympusERC20.sol\":7455:7465  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":7467:7474  spender */\n      dup6\n        /* \"sExodus/sOlympusERC20.sol\":7476:7505  oldValue.sub(subtractedValue) */\n      tag_183\n        /* \"sExodus/sOlympusERC20.sol\":7476:7484  oldValue */\n      dup5\n        /* \"sExodus/sOlympusERC20.sol\":7489:7504  subtractedValue */\n      dup8\n        /* \"sExodus/sOlympusERC20.sol\":7476:7488  oldValue.sub */\n      tag_165\n        /* \"sExodus/sOlympusERC20.sol\":7476:7505  oldValue.sub(subtractedValue) */\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":7446:7506  _approve(msg.sender, spender, oldValue.sub(subtractedValue)) */\n    tag_227:\n      pop\n        /* \"sExodus/sOlympusERC20.sol\":7533:7537  true */\n      0x01\n      swap4\n        /* \"sExodus/sOlympusERC20.sol\":7163:7544  function decreaseAllowance(address spender, uint256 subtractedValue) public override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":5670:6127  function transfer(address to, uint256 value) public override(IERC20, ERC20) returns (bool) {... */\n    tag_110:\n        /* \"sExodus/sOlympusERC20.sol\":5755:5759  bool */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":5771:5787  uint256 gonValue */\n      dup1\n        /* \"sExodus/sOlympusERC20.sol\":5790:5817  value.mul(_gonsPerFragment) */\n      tag_230\n        /* \"sExodus/sOlympusERC20.sol\":5800:5816  _gonsPerFragment */\n      sload(0x0b)\n        /* \"sExodus/sOlympusERC20.sol\":5790:5795  value */\n      dup5\n        /* \"sExodus/sOlympusERC20.sol\":5790:5799  value.mul */\n      tag_139\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":5790:5817  value.mul(_gonsPerFragment) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"sExodus/sOlympusERC20.sol\":5868:5878  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":5855:5879  _gonBalances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":5855:5867  _gonBalances */\n      0x0c\n        /* \"sExodus/sOlympusERC20.sol\":5855:5879  _gonBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"sExodus/sOlympusERC20.sol\":5771:5817  uint256 gonValue = value.mul(_gonsPerFragment) */\n      swap1\n      swap2\n      pop\n        /* \"sExodus/sOlympusERC20.sol\":5855:5893  _gonBalances[msg.sender].sub(gonValue) */\n      tag_231\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":5771:5817  uint256 gonValue = value.mul(_gonsPerFragment) */\n      dup3\n        /* \"sExodus/sOlympusERC20.sol\":5855:5883  _gonBalances[msg.sender].sub */\n      tag_165\n        /* \"sExodus/sOlympusERC20.sol\":5855:5893  _gonBalances[msg.sender].sub(gonValue) */\n      jump\t// in\n    tag_231:\n        /* \"sExodus/sOlympusERC20.sol\":5841:5851  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":5828:5852  _gonBalances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":5828:5840  _gonBalances */\n      0x0c\n        /* \"sExodus/sOlympusERC20.sol\":5828:5852  _gonBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"sExodus/sOlympusERC20.sol\":5828:5893  _gonBalances[msg.sender] = _gonBalances[msg.sender].sub(gonValue) */\n      swap3\n      swap1\n      swap3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":5922:5938  _gonBalances[to] */\n      dup7\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"sExodus/sOlympusERC20.sol\":5922:5952  _gonBalances[to].add(gonValue) */\n      tag_232\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":5943:5951  gonValue */\n      dup3\n        /* \"sExodus/sOlympusERC20.sol\":5922:5942  _gonBalances[to].add */\n      tag_142\n        /* \"sExodus/sOlympusERC20.sol\":5922:5952  _gonBalances[to].add(gonValue) */\n      jump\t// in\n    tag_232:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":5903:5919  _gonBalances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":5903:5915  _gonBalances */\n      0x0c\n        /* \"sExodus/sOlympusERC20.sol\":5903:5919  _gonBalances[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"sExodus/sOlympusERC20.sol\":5903:5952  _gonBalances[to] = _gonBalances[to].add(gonValue) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":6009:6019  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":5996:6020  debtBalances[msg.sender] */\n      dup1\n      dup4\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":5996:6008  debtBalances */\n      0x0f\n        /* \"sExodus/sOlympusERC20.sol\":5996:6020  debtBalances[msg.sender] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":5971:5992  balanceOf(msg.sender) */\n      tag_233\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":5971:5980  balanceOf */\n      tag_87\n        /* \"sExodus/sOlympusERC20.sol\":5971:5992  balanceOf(msg.sender) */\n      jump\t// in\n    tag_233:\n        /* \"sExodus/sOlympusERC20.sol\":5971:6020  balanceOf(msg.sender) >= debtBalances[msg.sender] */\n      lt\n      iszero\n        /* \"sExodus/sOlympusERC20.sol\":5963:6053  require(balanceOf(msg.sender) >= debtBalances[msg.sender], \"Debt: cannot transfer amount\") */\n      tag_234\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x446562743a2063616e6e6f74207472616e7366657220616d6f756e7400000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_234:\n        /* \"sExodus/sOlympusERC20.sol\":6068:6099  Transfer(msg.sender, to, value) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":6077:6087  msg.sender */\n      caller\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":6068:6099  Transfer(msg.sender, to, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n      pop\n        /* \"sExodus/sOlympusERC20.sol\":6116:6120  true */\n      0x01\n      swap4\n        /* \"sExodus/sOlympusERC20.sol\":5670:6127  function transfer(address to, uint256 value) public override(IERC20, ERC20) returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":7756:8205  function changeDebt(... */\n    tag_113:\n        /* \"sExodus/sOlympusERC20.sol\":7898:7906  treasury */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0e))\n        /* \"sExodus/sOlympusERC20.sol\":7884:7894  msg.sender */\n      caller\n        /* \"sExodus/sOlympusERC20.sol\":7884:7906  msg.sender == treasury */\n      eq\n        /* \"sExodus/sOlympusERC20.sol\":7876:7924  require(msg.sender == treasury, \"Only treasury\") */\n      tag_236\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      0x4f6e6c7920747265617375727900000000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_236:\n        /* \"sExodus/sOlympusERC20.sol\":7938:7941  add */\n      dup1\n        /* \"sExodus/sOlympusERC20.sol\":7934:8109  if (add) {... */\n      iszero\n      tag_237\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":7980:8000  debtBalances[debtor] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":7980:7992  debtBalances */\n      0x0f\n        /* \"sExodus/sOlympusERC20.sol\":7980:8000  debtBalances[debtor] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"sExodus/sOlympusERC20.sol\":7980:8012  debtBalances[debtor].add(amount) */\n      tag_238\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":8005:8011  amount */\n      dup5\n        /* \"sExodus/sOlympusERC20.sol\":7980:8004  debtBalances[debtor].add */\n      tag_142\n        /* \"sExodus/sOlympusERC20.sol\":7980:8012  debtBalances[debtor].add(amount) */\n      jump\t// in\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":7957:7977  debtBalances[debtor] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":7957:7969  debtBalances */\n      0x0f\n        /* \"sExodus/sOlympusERC20.sol\":7957:7977  debtBalances[debtor] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"sExodus/sOlympusERC20.sol\":7957:8012  debtBalances[debtor] = debtBalances[debtor].add(amount) */\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":7934:8109  if (add) {... */\n      jump(tag_239)\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":8066:8086  debtBalances[debtor] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":8066:8078  debtBalances */\n      0x0f\n        /* \"sExodus/sOlympusERC20.sol\":8066:8086  debtBalances[debtor] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"sExodus/sOlympusERC20.sol\":8066:8098  debtBalances[debtor].sub(amount) */\n      tag_240\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":8091:8097  amount */\n      dup5\n        /* \"sExodus/sOlympusERC20.sol\":8066:8090  debtBalances[debtor].sub */\n      tag_165\n        /* \"sExodus/sOlympusERC20.sol\":8066:8098  debtBalances[debtor].sub(amount) */\n      jump\t// in\n    tag_240:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":8043:8063  debtBalances[debtor] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":8043:8055  debtBalances */\n      0x0f\n        /* \"sExodus/sOlympusERC20.sol\":8043:8063  debtBalances[debtor] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"sExodus/sOlympusERC20.sol\":8043:8098  debtBalances[debtor] = debtBalances[debtor].sub(amount) */\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":7934:8109  if (add) {... */\n    tag_239:\n        /* \"sExodus/sOlympusERC20.sol\":8150:8167  balanceOf(debtor) */\n      tag_241\n        /* \"sExodus/sOlympusERC20.sol\":8160:8166  debtor */\n      dup3\n        /* \"sExodus/sOlympusERC20.sol\":8150:8159  balanceOf */\n      tag_87\n        /* \"sExodus/sOlympusERC20.sol\":8150:8167  balanceOf(debtor) */\n      jump\t// in\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":8126:8146  debtBalances[debtor] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":8126:8138  debtBalances */\n      0x0f\n        /* \"sExodus/sOlympusERC20.sol\":8126:8146  debtBalances[debtor] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"sExodus/sOlympusERC20.sol\":8126:8167  debtBalances[debtor] <= balanceOf(debtor) */\n      gt\n      iszero\n        /* \"sExodus/sOlympusERC20.sol\":8118:8198  require(debtBalances[debtor] <= balanceOf(debtor), \"sEXO: insufficient balance\") */\n      tag_242\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x7345584f3a20696e73756666696369656e742062616c616e6365000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_242:\n        /* \"sExodus/sOlympusERC20.sol\":7756:8205  function changeDebt(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":9321:9441  function fromG(uint256 amount) external view override returns (uint256) {... */\n    tag_116:\n        /* \"sExodus/sOlympusERC20.sol\":9410:9414  gEXO */\n      sload(0x09)\n        /* \"sExodus/sOlympusERC20.sol\":9410:9434  gEXO.balanceFrom(amount) */\n      0x40\n      dup1\n      mload\n      0xa824876800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"sExodus/sOlympusERC20.sol\":9384:9391  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":9410:9414  gEXO */\n      and\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":9410:9426  gEXO.balanceFrom */\n      0xa8248768\n      swap2\n        /* \"sExodus/sOlympusERC20.sol\":9410:9434  gEXO.balanceFrom(amount) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"sExodus/sOlympusERC20.sol\":9410:9414  gEXO */\n      dup7\n        /* \"sExodus/sOlympusERC20.sol\":9410:9434  gEXO.balanceFrom(amount) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"sExodus/sOlympusERC20.sol\":2159:2215  mapping(address => uint256) public override debtBalances */\n    tag_119:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"sExodus/ERC20Permit.sol\":1411:2037  function permit(... */\n    tag_122:\n        /* \"sExodus/ERC20Permit.sol\":1646:1654  deadline */\n      dup4\n        /* \"sExodus/ERC20Permit.sol\":1627:1642  block.timestamp */\n      timestamp\n        /* \"sExodus/ERC20Permit.sol\":1627:1654  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"sExodus/ERC20Permit.sol\":1619:1688  require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\") */\n      tag_249\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332305065726d69743a206578706972656420646561646c696e65000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_249:\n        /* \"sExodus/ERC20Permit.sol\":1699:1717  bytes32 structHash */\n      0x00\n        /* \"sExodus/ERC20Permit.sol\":1741:1757  _PERMIT_TYPEHASH */\n      immutable(\"0xcd3b8a75131b09c18fac61f93bac9440f7b768b1c243a93eca5a67eb03b07828\")\n        /* \"sExodus/ERC20Permit.sol\":1759:1764  owner */\n      dup9\n        /* \"sExodus/ERC20Permit.sol\":1766:1773  spender */\n      dup9\n        /* \"sExodus/ERC20Permit.sol\":1775:1780  value */\n      dup9\n        /* \"sExodus/ERC20Permit.sol\":1782:1798  _useNonce(owner) */\n      tag_250\n        /* \"sExodus/ERC20Permit.sol\":1792:1797  owner */\n      dup13\n        /* \"sExodus/ERC20Permit.sol\":1782:1791  _useNonce */\n      tag_251\n        /* \"sExodus/ERC20Permit.sol\":1782:1798  _useNonce(owner) */\n      jump\t// in\n    tag_250:\n        /* \"sExodus/ERC20Permit.sol\":1800:1808  deadline */\n      dup10\n        /* \"sExodus/ERC20Permit.sol\":1730:1809  abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"sExodus/ERC20Permit.sol\":1720:1810  keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"sExodus/ERC20Permit.sol\":1699:1810  bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"sExodus/ERC20Permit.sol\":1821:1833  bytes32 hash */\n      0x00\n        /* \"sExodus/ERC20Permit.sol\":1836:1864  _hashTypedDataV4(structHash) */\n      tag_252\n        /* \"sExodus/ERC20Permit.sol\":1853:1863  structHash */\n      dup3\n        /* \"sExodus/ERC20Permit.sol\":1836:1852  _hashTypedDataV4 */\n      tag_253\n        /* \"sExodus/ERC20Permit.sol\":1836:1864  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_252:\n        /* \"sExodus/ERC20Permit.sol\":1821:1864  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"sExodus/ERC20Permit.sol\":1875:1889  address signer */\n      0x00\n        /* \"sExodus/ERC20Permit.sol\":1892:1920  ECDSA.recover(hash, v, r, s) */\n      tag_254\n        /* \"sExodus/ERC20Permit.sol\":1906:1910  hash */\n      dup3\n        /* \"sExodus/ERC20Permit.sol\":1912:1913  v */\n      dup8\n        /* \"sExodus/ERC20Permit.sol\":1915:1916  r */\n      dup8\n        /* \"sExodus/ERC20Permit.sol\":1918:1919  s */\n      dup8\n        /* \"sExodus/ERC20Permit.sol\":1892:1905  ECDSA.recover */\n      tag_255\n        /* \"sExodus/ERC20Permit.sol\":1892:1920  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_254:\n        /* \"sExodus/ERC20Permit.sol\":1875:1920  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"sExodus/ERC20Permit.sol\":1948:1953  owner */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/ERC20Permit.sol\":1938:1953  signer == owner */\n      and\n        /* \"sExodus/ERC20Permit.sol\":1938:1944  signer */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/ERC20Permit.sol\":1938:1953  signer == owner */\n      and\n      eq\n        /* \"sExodus/ERC20Permit.sol\":1930:1988  require(signer == owner, \"ERC20Permit: invalid signature\") */\n      tag_256\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332305065726d69743a20696e76616c6964207369676e61747572650000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_256:\n        /* \"sExodus/ERC20Permit.sol\":1999:2030  _approve(owner, spender, value) */\n      tag_257\n        /* \"sExodus/ERC20Permit.sol\":2008:2013  owner */\n      dup11\n        /* \"sExodus/ERC20Permit.sol\":2015:2022  spender */\n      dup11\n        /* \"sExodus/ERC20Permit.sol\":2024:2029  value */\n      dup11\n        /* \"sExodus/ERC20Permit.sol\":1999:2007  _approve */\n      tag_159\n        /* \"sExodus/ERC20Permit.sol\":1999:2030  _approve(owner, spender, value) */\n      jump\t// in\n    tag_257:\n        /* \"sExodus/ERC20Permit.sol\":1411:2037  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":9887:10047  function allowance(address owner_, address spender) public view override(IERC20, ERC20) returns (uint256) {... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":10010:10031  _allowedValue[owner_] */\n      swap2\n      dup3\n      and\n        /* \"sExodus/sOlympusERC20.sol\":9984:9991  uint256 */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":10010:10031  _allowedValue[owner_] */\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":10010:10023  _allowedValue */\n      0x0d\n        /* \"sExodus/sOlympusERC20.sol\":10010:10031  _allowedValue[owner_] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"sExodus/sOlympusERC20.sol\":10010:10040  _allowedValue[owner_][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"sExodus/sOlympusERC20.sol\":9887:10047  function allowance(address owner_, address spender) public view override(IERC20, ERC20) returns (uint256) {... */\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":1221:1251  address public stakingContract */\n    tag_127:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n      dup2\n      jump\t// out\n        /* \"sExodus/SafeMath.sol\":947:1077  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_128:\n        /* \"sExodus/SafeMath.sol\":1005:1012  uint256 */\n      0x00\n        /* \"sExodus/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n      tag_260\n        /* \"sExodus/SafeMath.sol\":1035:1036  a */\n      dup4\n        /* \"sExodus/SafeMath.sol\":1038:1039  b */\n      dup4\n        /* \"sExodus/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"sExodus/SafeMath.sol\":1031:1034  div */\n      tag_261\n        /* \"sExodus/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_260:\n        /* \"sExodus/SafeMath.sol\":1024:1070  return div(a, b, \"SafeMath: division by zero\") */\n      swap4\n        /* \"sExodus/SafeMath.sol\":947:1077  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sExodus/SafeMath.sol\":700:941  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_139:\n        /* \"sExodus/SafeMath.sol\":758:765  uint256 */\n      0x00\n        /* \"sExodus/SafeMath.sol\":781:787  a == 0 */\n      dup3\n        /* \"sExodus/SafeMath.sol\":777:822  if (a == 0) {... */\n      tag_263\n      jumpi\n      pop\n        /* \"sExodus/SafeMath.sol\":810:811  0 */\n      0x00\n        /* \"sExodus/SafeMath.sol\":803:811  return 0 */\n      jump(tag_131)\n        /* \"sExodus/SafeMath.sol\":777:822  if (a == 0) {... */\n    tag_263:\n        /* \"sExodus/SafeMath.sol\":844:849  a * b */\n      dup3\n      dup3\n      mul\n        /* \"sExodus/SafeMath.sol\":848:849  b */\n      dup3\n        /* \"sExodus/SafeMath.sol\":844:845  a */\n      dup5\n        /* \"sExodus/SafeMath.sol\":844:849  a * b */\n      dup3\n        /* \"sExodus/SafeMath.sol\":844:845  a */\n      dup2\n        /* \"sExodus/SafeMath.sol\":867:872  c / a */\n      tag_264\n      jumpi\n      invalid\n    tag_264:\n      div\n        /* \"sExodus/SafeMath.sol\":867:877  c / a == b */\n      eq\n        /* \"sExodus/SafeMath.sol\":859:915  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sExodus/SafeMath.sol\":155:331  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_142:\n        /* \"sExodus/SafeMath.sol\":213:220  uint256 */\n      0x00\n        /* \"sExodus/SafeMath.sol\":244:249  a + b */\n      dup3\n      dup3\n      add\n        /* \"sExodus/SafeMath.sol\":267:273  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"sExodus/SafeMath.sol\":259:305  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_260\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"sExodus/sOlympusERC20.sol\":4913:5611  function _storeRebase(... */\n    tag_147:\n        /* \"sExodus/sOlympusERC20.sol\":5047:5068  uint256 rebasePercent */\n      0x00\n        /* \"sExodus/sOlympusERC20.sol\":5071:5114  profit_.mul(1e18).div(previousCirculating_) */\n      tag_269\n        /* \"sExodus/sOlympusERC20.sol\":5093:5113  previousCirculating_ */\n      dup5\n        /* \"sExodus/sOlympusERC20.sol\":5071:5088  profit_.mul(1e18) */\n      tag_138\n        /* \"sExodus/sOlympusERC20.sol\":5071:5078  profit_ */\n      dup6\n        /* \"sExodus/sOlympusERC20.sol\":5083:5087  1e18 */\n      0x0de0b6b3a7640000\n        /* \"sExodus/sOlympusERC20.sol\":5071:5082  profit_.mul */\n      tag_139\n        /* \"sExodus/sOlympusERC20.sol\":5071:5088  profit_.mul(1e18) */\n      jump\t// in\n        /* \"sExodus/sOlympusERC20.sol\":5071:5114  profit_.mul(1e18).div(previousCirculating_) */\n    tag_269:\n        /* \"sExodus/sOlympusERC20.sol\":5047:5114  uint256 rebasePercent = profit_.mul(1e18).div(previousCirculating_) */\n      swap1\n      pop\n        /* \"sExodus/sOlympusERC20.sol\":5124:5131  rebases */\n      0x0a\n        /* \"sExodus/sOlympusERC20.sol\":5150:5491  Rebase({... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"sExodus/sOlympusERC20.sol\":5182:5188  epoch_ */\n      dup5\n        /* \"sExodus/sOlympusERC20.sol\":5150:5491  Rebase({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"sExodus/sOlympusERC20.sol\":5214:5227  rebasePercent */\n      dup4\n        /* \"sExodus/sOlympusERC20.sol\":5150:5491  Rebase({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"sExodus/sOlympusERC20.sol\":5279:5299  previousCirculating_ */\n      dup7\n        /* \"sExodus/sOlympusERC20.sol\":5150:5491  Rebase({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"sExodus/sOlympusERC20.sol\":5335:5354  circulatingSupply() */\n      tag_271\n        /* \"sExodus/sOlympusERC20.sol\":5335:5352  circulatingSupply */\n      tag_98\n        /* \"sExodus/sOlympusERC20.sol\":5335:5354  circulatingSupply() */\n      jump\t// in\n    tag_271:\n        /* \"sExodus/sOlympusERC20.sol\":5150:5491  Rebase({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"sExodus/sOlympusERC20.sol\":5387:5394  profit_ */\n      dup6\n        /* \"sExodus/sOlympusERC20.sol\":5150:5491  Rebase({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"sExodus/sOlympusERC20.sol\":5419:5426  index() */\n      tag_272\n        /* \"sExodus/sOlympusERC20.sol\":5419:5424  index */\n      tag_67\n        /* \"sExodus/sOlympusERC20.sol\":5419:5426  index() */\n      jump\t// in\n    tag_272:\n        /* \"sExodus/sOlympusERC20.sol\":5150:5491  Rebase({... */\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":5464:5476  block.number */\n      number\n        /* \"sExodus/sOlympusERC20.sol\":5150:5491  Rebase({... */\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":5124:5501  rebases.push(... */\n      dup3\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup6\n      sstore\n      0x00\n      swap5\n      dup6\n      mstore\n      swap4\n      dup3\n      swap1\n      keccak256\n      dup4\n      mload\n      0x07\n      swap1\n      swap3\n      mul\n      add\n      swap1\n      dup2\n      sstore\n      dup3\n      dup3\n      add\n      mload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      sstore\n      0x40\n      dup1\n      dup4\n      add\n      mload\n      0x02\n      dup1\n      dup7\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      0x60\n      dup5\n      add\n      mload\n      0x03\n      dup7\n      add\n      sstore\n      0x80\n      dup5\n      add\n      mload\n      0x04\n      dup7\n      add\n      sstore\n      0xa0\n      dup5\n      add\n      mload\n      0x05\n      dup7\n      add\n      sstore\n      0xc0\n      swap1\n      swap4\n      add\n      mload\n      0x06\n      swap1\n      swap5\n      add\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":5535:5547  _totalSupply */\n      swap1\n      sload\n        /* \"sExodus/sOlympusERC20.sol\":5517:5548  LogSupply(epoch_, _totalSupply) */\n      dup3\n      mload\n      swap1\n      dup2\n      mstore\n      swap2\n      mload\n        /* \"sExodus/sOlympusERC20.sol\":5527:5533  epoch_ */\n      dup5\n      swap3\n        /* \"sExodus/sOlympusERC20.sol\":5517:5548  LogSupply(epoch_, _totalSupply) */\n      0x0417b340e646d4be71f9b2da63b5c3c69bc9cfa069f0e0db4756271886130bf4\n      swap3\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"sExodus/sOlympusERC20.sol\":5573:5579  epoch_ */\n      dup2\n        /* \"sExodus/sOlympusERC20.sol\":5563:5604  LogRebase(epoch_, rebasePercent, index()) */\n      0x6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb2\n        /* \"sExodus/sOlympusERC20.sol\":5581:5594  rebasePercent */\n      dup3\n        /* \"sExodus/sOlympusERC20.sol\":5596:5603  index() */\n      tag_274\n        /* \"sExodus/sOlympusERC20.sol\":5596:5601  index */\n      tag_67\n        /* \"sExodus/sOlympusERC20.sol\":5596:5603  index() */\n      jump\t// in\n    tag_274:\n        /* \"sExodus/sOlympusERC20.sol\":5563:5604  LogRebase(epoch_, rebasePercent, index()) */\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"sExodus/sOlympusERC20.sol\":4913:5611  function _storeRebase(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sExodus/sOlympusERC20.sol\":8263:8484  function _approve(... */\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/sOlympusERC20.sol\":8394:8414  _allowedValue[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"sExodus/sOlympusERC20.sol\":8394:8407  _allowedValue */\n      0x0d\n        /* \"sExodus/sOlympusERC20.sol\":8394:8414  _allowedValue[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"sExodus/sOlympusERC20.sol\":8394:8423  _allowedValue[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"sExodus/sOlympusERC20.sol\":8394:8431  _allowedValue[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"sExodus/sOlympusERC20.sol\":8446:8477  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"sExodus/sOlympusERC20.sol\":8263:8484  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sExodus/SafeMath.sol\":337:471  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_165:\n        /* \"sExodus/SafeMath.sol\":395:402  uint256 */\n      0x00\n        /* \"sExodus/SafeMath.sol\":421:464  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_260\n        /* \"sExodus/SafeMath.sol\":425:426  a */\n      dup4\n        /* \"sExodus/SafeMath.sol\":428:429  b */\n      dup4\n        /* \"sExodus/SafeMath.sol\":421:464  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"sExodus/SafeMath.sol\":421:424  sub */\n      tag_278\n        /* \"sExodus/SafeMath.sol\":421:464  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"sExodus/EIP712.sol\":3072:3429  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_180:\n        /* \"sExodus/EIP712.sol\":3125:3132  bytes32 */\n      0x00\n        /* \"sExodus/EIP712.sol\":3203:3212  chainid() */\n      chainid\n        /* \"sExodus/EIP712.sol\":3247:3263  _CACHED_CHAIN_ID */\n      immutable(\"0xb0c7bc42bdbc6fc210fecd6a5f5b923061cceb0f8ca5c7d964d5c22fc0e4b0b6\")\n        /* \"sExodus/EIP712.sol\":3236:3263  chainID == _CACHED_CHAIN_ID */\n      dup2\n      eq\n        /* \"sExodus/EIP712.sol\":3232:3423  if (chainID == _CACHED_CHAIN_ID) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"sExodus/EIP712.sol\":3286:3310  _CACHED_DOMAIN_SEPARATOR */\n      immutable(\"0xee6ed107ec78844a4d229eb2881175204622382692a68d0a6bc9dab5b9b1a469\")\n        /* \"sExodus/EIP712.sol\":3279:3310  return _CACHED_DOMAIN_SEPARATOR */\n      swap2\n      pop\n      pop\n      jump(tag_148)\n        /* \"sExodus/EIP712.sol\":3232:3423  if (chainID == _CACHED_CHAIN_ID) {... */\n    tag_280:\n        /* \"sExodus/EIP712.sol\":3348:3412  _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION) */\n      tag_282\n        /* \"sExodus/EIP712.sol\":3370:3380  _TYPE_HASH */\n      immutable(\"0xa357612e78285f7fafdf6b519d8202761470244eff76772361e02b59693fc4a3\")\n        /* \"sExodus/EIP712.sol\":3382:3394  _HASHED_NAME */\n      immutable(\"0x9b0d5a2681b52b4560ba0a55dc00d44d52ed130b12e9b1ecacbe9f4e75788d40\")\n        /* \"sExodus/EIP712.sol\":3396:3411  _HASHED_VERSION */\n      immutable(\"0x5d2bb87bc4e3465b938b7f3bfa80dd200de3ce49dc7e9edab315c9ce3405a0b7\")\n        /* \"sExodus/EIP712.sol\":3348:3369  _buildDomainSeparator */\n      tag_283\n        /* \"sExodus/EIP712.sol\":3348:3412  _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION) */\n      jump\t// in\n    tag_282:\n        /* \"sExodus/EIP712.sol\":3341:3412  return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION) */\n      swap2\n      pop\n      pop\n      jump(tag_148)\n        /* \"sExodus/Counters.sol\":524:636  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_201:\n        /* \"sExodus/Counters.sol\":615:629  counter._value */\n      sload\n      swap1\n        /* \"sExodus/Counters.sol\":524:636  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\t// out\n        /* \"sExodus/ERC20Permit.sol\":2592:2795  function _useNonce(address owner) internal virtual returns (uint256 current) {... */\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/ERC20Permit.sol\":2712:2726  _nonces[owner] */\n      dup2\n      and\n        /* \"sExodus/ERC20Permit.sol\":2652:2667  uint256 current */\n      0x00\n        /* \"sExodus/ERC20Permit.sol\":2712:2726  _nonces[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"sExodus/ERC20Permit.sol\":2712:2719  _nonces */\n      0x05\n        /* \"sExodus/ERC20Permit.sol\":2712:2726  _nonces[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"sExodus/ERC20Permit.sol\":2746:2761  nonce.current() */\n      tag_286\n        /* \"sExodus/ERC20Permit.sol\":2712:2726  _nonces[owner] */\n      dup2\n        /* \"sExodus/ERC20Permit.sol\":2746:2759  nonce.current */\n      tag_201\n        /* \"sExodus/ERC20Permit.sol\":2746:2761  nonce.current() */\n      jump\t// in\n    tag_286:\n        /* \"sExodus/ERC20Permit.sol\":2736:2761  current = nonce.current() */\n      swap2\n      pop\n        /* \"sExodus/ERC20Permit.sol\":2771:2788  nonce.increment() */\n      tag_287\n        /* \"sExodus/ERC20Permit.sol\":2771:2776  nonce */\n      dup2\n        /* \"sExodus/ERC20Permit.sol\":2771:2786  nonce.increment */\n      tag_288\n        /* \"sExodus/ERC20Permit.sol\":2771:2788  nonce.increment() */\n      jump\t// in\n    tag_287:\n        /* \"sExodus/ERC20Permit.sol\":2592:2795  function _useNonce(address owner) internal virtual returns (uint256 current) {... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"sExodus/EIP712.sol\":4399:4564  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_253:\n        /* \"sExodus/EIP712.sol\":4476:4483  bytes32 */\n      0x00\n        /* \"sExodus/EIP712.sol\":4502:4557  ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_131\n        /* \"sExodus/EIP712.sol\":4524:4544  _domainSeparatorV4() */\n      tag_291\n        /* \"sExodus/EIP712.sol\":4524:4542  _domainSeparatorV4 */\n      tag_180\n        /* \"sExodus/EIP712.sol\":4524:4544  _domainSeparatorV4() */\n      jump\t// in\n    tag_291:\n        /* \"sExodus/EIP712.sol\":4546:4556  structHash */\n      dup4\n        /* \"sExodus/EIP712.sol\":4502:4523  ECDSA.toTypedDataHash */\n      tag_292\n        /* \"sExodus/EIP712.sol\":4502:4557  ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n        /* \"sExodus/ECDSA.sol\":7390:7660  function recover(... */\n    tag_255:\n        /* \"sExodus/ECDSA.sol\":7513:7520  address */\n      0x00\n        /* \"sExodus/ECDSA.sol\":7533:7550  address recovered */\n      dup1\n        /* \"sExodus/ECDSA.sol\":7552:7570  RecoverError error */\n      0x00\n        /* \"sExodus/ECDSA.sol\":7574:7599  tryRecover(hash, v, r, s) */\n      tag_294\n        /* \"sExodus/ECDSA.sol\":7585:7589  hash */\n      dup8\n        /* \"sExodus/ECDSA.sol\":7591:7592  v */\n      dup8\n        /* \"sExodus/ECDSA.sol\":7594:7595  r */\n      dup8\n        /* \"sExodus/ECDSA.sol\":7597:7598  s */\n      dup8\n        /* \"sExodus/ECDSA.sol\":7574:7584  tryRecover */\n      tag_295\n        /* \"sExodus/ECDSA.sol\":7574:7599  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_294:\n        /* \"sExodus/ECDSA.sol\":7532:7599  (address recovered, RecoverError error) = tryRecover(hash, v, r, s) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"sExodus/ECDSA.sol\":7609:7627  _throwError(error) */\n      tag_296\n        /* \"sExodus/ECDSA.sol\":7621:7626  error */\n      dup2\n        /* \"sExodus/ECDSA.sol\":7609:7620  _throwError */\n      tag_297\n        /* \"sExodus/ECDSA.sol\":7609:7627  _throwError(error) */\n      jump\t// in\n    tag_296:\n      pop\n        /* \"sExodus/ECDSA.sol\":7644:7653  recovered */\n      swap6\n        /* \"sExodus/ECDSA.sol\":7390:7660  function recover(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sExodus/SafeMath.sol\":1083:1384  function div(... */\n    tag_261:\n        /* \"sExodus/SafeMath.sol\":1199:1206  uint256 */\n      0x00\n        /* \"sExodus/SafeMath.sol\":1233:1245  errorMessage */\n      dup2\n        /* \"sExodus/SafeMath.sol\":1226:1231  b > 0 */\n      dup4\n        /* \"sExodus/SafeMath.sol\":1218:1246  require(b > 0, errorMessage) */\n      tag_299\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_300:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_302\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_300)\n    tag_302:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_303\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_303:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_299:\n      pop\n        /* \"sExodus/SafeMath.sol\":1256:1265  uint256 c */\n      0x00\n        /* \"sExodus/SafeMath.sol\":1272:1273  b */\n      dup4\n        /* \"sExodus/SafeMath.sol\":1268:1269  a */\n      dup6\n        /* \"sExodus/SafeMath.sol\":1268:1273  a / b */\n      dup2\n      tag_304\n      jumpi\n      invalid\n    tag_304:\n      div\n        /* \"sExodus/SafeMath.sol\":1256:1273  uint256 c = a / b */\n      swap1\n      pop\n        /* \"sExodus/SafeMath.sol\":1308:1309  b */\n      dup4\n        /* \"sExodus/SafeMath.sol\":1304:1305  a */\n      dup6\n        /* \"sExodus/SafeMath.sol\":1304:1309  a % b */\n      dup2\n      tag_305\n      jumpi\n      invalid\n    tag_305:\n      mod\n        /* \"sExodus/SafeMath.sol\":1299:1300  c */\n      dup2\n        /* \"sExodus/SafeMath.sol\":1295:1296  b */\n      dup6\n        /* \"sExodus/SafeMath.sol\":1295:1300  b * c */\n      mul\n        /* \"sExodus/SafeMath.sol\":1295:1310  b * c + (a % b) */\n      add\n        /* \"sExodus/SafeMath.sol\":1290:1291  a */\n      dup6\n        /* \"sExodus/SafeMath.sol\":1290:1310  a == b * c + (a % b) */\n      eq\n        /* \"sExodus/SafeMath.sol\":1283:1311  assert(a == b * c + (a % b)) */\n      tag_306\n      jumpi\n      invalid\n    tag_306:\n        /* \"sExodus/SafeMath.sol\":1376:1377  c */\n      swap5\n        /* \"sExodus/SafeMath.sol\":1083:1384  function div(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sExodus/SafeMath.sol\":477:694  function sub(... */\n    tag_278:\n        /* \"sExodus/SafeMath.sol\":593:600  uint256 */\n      0x00\n        /* \"sExodus/SafeMath.sol\":628:640  errorMessage */\n      dup2\n        /* \"sExodus/SafeMath.sol\":620:626  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"sExodus/SafeMath.sol\":612:641  require(b <= a, errorMessage) */\n      tag_308\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_302\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_300)\n    tag_308:\n      pop\n      pop\n      pop\n        /* \"sExodus/SafeMath.sol\":663:668  a - b */\n      swap1\n      sub\n      swap1\n        /* \"sExodus/SafeMath.sol\":477:694  function sub(... */\n      jump\t// out\n        /* \"sExodus/EIP712.sol\":3435:3774  function _buildDomainSeparator(... */\n    tag_283:\n        /* \"sExodus/EIP712.sol\":3699:3766  abi.encode(typeHash, nameHash, versionHash, chainID, address(this)) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      dup1\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x60\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"sExodus/EIP712.sol\":3653:3662  chainid() */\n      chainid\n        /* \"sExodus/EIP712.sol\":3699:3766  abi.encode(typeHash, nameHash, versionHash, chainID, address(this)) */\n      0x80\n      dup4\n      add\n      mstore\n        /* \"sExodus/EIP712.sol\":3760:3764  this */\n      address\n        /* \"sExodus/EIP712.sol\":3699:3766  abi.encode(typeHash, nameHash, versionHash, chainID, address(this)) */\n      0xa0\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup2\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0xc0\n      swap1\n      swap3\n      add\n      swap1\n      mstore\n        /* \"sExodus/EIP712.sol\":3689:3767  keccak256(abi.encode(typeHash, nameHash, versionHash, chainID, address(this))) */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n      swap1\n        /* \"sExodus/EIP712.sol\":3435:3774  function _buildDomainSeparator(... */\n      jump\t// out\n        /* \"sExodus/Counters.sol\":642:820  function increment(Counter storage counter) internal {... */\n    tag_288:\n        /* \"sExodus/Counters.sol\":794:813  counter._value += 1 */\n      dup1\n      sload\n        /* \"sExodus/Counters.sol\":812:813  1 */\n      0x01\n        /* \"sExodus/Counters.sol\":794:813  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"sExodus/Counters.sol\":642:820  function increment(Counter storage counter) internal {... */\n      jump\t// out\n        /* \"sExodus/ECDSA.sol\":8554:8748  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {... */\n    tag_292:\n        /* \"sExodus/ECDSA.sol\":8683:8740  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x40\n      dup1\n      mload\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x22\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x42\n      dup1\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      dup2\n      mload\n      dup1\n      dup3\n      sub\n      swap1\n      swap4\n      add\n      dup4\n      mstore\n      0x62\n      add\n      swap1\n      mstore\n        /* \"sExodus/ECDSA.sol\":8673:8741  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n      swap1\n        /* \"sExodus/ECDSA.sol\":8554:8748  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {... */\n      jump\t// out\n        /* \"sExodus/ECDSA.sol\":5654:7257  function tryRecover(... */\n    tag_295:\n        /* \"sExodus/ECDSA.sol\":5780:5787  address */\n      0x00\n      dup1\n        /* \"sExodus/ECDSA.sol\":6704:6770  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"sExodus/ECDSA.sol\":6691:6770  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup4\n      gt\n        /* \"sExodus/ECDSA.sol\":6687:6848  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_317\n      jumpi\n      pop\n        /* \"sExodus/ECDSA.sol\":6802:6803  0 */\n      0x00\n      swap1\n      pop\n        /* \"sExodus/ECDSA.sol\":6806:6836  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"sExodus/ECDSA.sol\":6786:6837  return (address(0), RecoverError.InvalidSignatureS) */\n      jump(tag_316)\n        /* \"sExodus/ECDSA.sol\":6687:6848  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_317:\n        /* \"sExodus/ECDSA.sol\":6861:6862  v */\n      dup5\n        /* \"sExodus/ECDSA.sol\":6861:6868  v != 27 */\n      0xff\n      and\n        /* \"sExodus/ECDSA.sol\":6866:6868  27 */\n      0x1b\n        /* \"sExodus/ECDSA.sol\":6861:6868  v != 27 */\n      eq\n      iszero\n        /* \"sExodus/ECDSA.sol\":6861:6879  v != 27 && v != 28 */\n      dup1\n      iszero\n      tag_318\n      jumpi\n      pop\n        /* \"sExodus/ECDSA.sol\":6872:6873  v */\n      dup5\n        /* \"sExodus/ECDSA.sol\":6872:6879  v != 28 */\n      0xff\n      and\n        /* \"sExodus/ECDSA.sol\":6877:6879  28 */\n      0x1c\n        /* \"sExodus/ECDSA.sol\":6872:6879  v != 28 */\n      eq\n      iszero\n        /* \"sExodus/ECDSA.sol\":6861:6879  v != 27 && v != 28 */\n    tag_318:\n        /* \"sExodus/ECDSA.sol\":6857:6957  if (v != 27 && v != 28) {... */\n      iszero\n      tag_319\n      jumpi\n      pop\n        /* \"sExodus/ECDSA.sol\":6911:6912  0 */\n      0x00\n      swap1\n      pop\n        /* \"sExodus/ECDSA.sol\":6915:6945  RecoverError.InvalidSignatureV */\n      0x04\n        /* \"sExodus/ECDSA.sol\":6895:6946  return (address(0), RecoverError.InvalidSignatureV) */\n      jump(tag_316)\n        /* \"sExodus/ECDSA.sol\":6857:6957  if (v != 27 && v != 28) {... */\n    tag_319:\n        /* \"sExodus/ECDSA.sol\":7051:7065  address signer */\n      0x00\n        /* \"sExodus/ECDSA.sol\":7068:7092  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"sExodus/ECDSA.sol\":7078:7082  hash */\n      dup8\n        /* \"sExodus/ECDSA.sol\":7084:7085  v */\n      dup8\n        /* \"sExodus/ECDSA.sol\":7087:7088  r */\n      dup8\n        /* \"sExodus/ECDSA.sol\":7090:7091  s */\n      dup8\n        /* \"sExodus/ECDSA.sol\":7068:7092  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_321\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_321:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sExodus/ECDSA.sol\":7106:7126  signer == address(0) */\n      dup2\n      and\n        /* \"sExodus/ECDSA.sol\":7102:7203  if (signer == address(0)) {... */\n      tag_322\n      jumpi\n        /* \"sExodus/ECDSA.sol\":7158:7159  0 */\n      0x00\n        /* \"sExodus/ECDSA.sol\":7162:7191  RecoverError.InvalidSignature */\n      0x01\n        /* \"sExodus/ECDSA.sol\":7142:7192  return (address(0), RecoverError.InvalidSignature) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_316)\n        /* \"sExodus/ECDSA.sol\":7102:7203  if (signer == address(0)) {... */\n    tag_322:\n        /* \"sExodus/ECDSA.sol\":7221:7227  signer */\n      swap2\n      pop\n        /* \"sExodus/ECDSA.sol\":7229:7249  RecoverError.NoError */\n      0x00\n      swap1\n      pop\n        /* \"sExodus/ECDSA.sol\":5654:7257  function tryRecover(... */\n    tag_316:\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sExodus/ECDSA.sol\":443:1074  function _throwError(RecoverError error) private pure {... */\n    tag_297:\n        /* \"sExodus/ECDSA.sol\":520:540  RecoverError.NoError */\n      0x00\n        /* \"sExodus/ECDSA.sol\":511:516  error */\n      dup2\n        /* \"sExodus/ECDSA.sol\":511:540  error == RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_325\n      jumpi\n      invalid\n    tag_325:\n      eq\n        /* \"sExodus/ECDSA.sol\":507:1068  if (error == RecoverError.NoError) {... */\n      iszero\n      tag_326\n      jumpi\n        /* \"sExodus/ECDSA.sol\":556:563  return; */\n      jump(tag_342)\n        /* \"sExodus/ECDSA.sol\":507:1068  if (error == RecoverError.NoError) {... */\n    tag_326:\n        /* \"sExodus/ECDSA.sol\":616:645  RecoverError.InvalidSignature */\n      0x01\n        /* \"sExodus/ECDSA.sol\":607:612  error */\n      dup2\n        /* \"sExodus/ECDSA.sol\":607:645  error == RecoverError.InvalidSignature */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_329\n      jumpi\n      invalid\n    tag_329:\n      eq\n        /* \"sExodus/ECDSA.sol\":603:1068  if (error == RecoverError.InvalidSignature) {... */\n      iszero\n      tag_330\n      jumpi\n        /* \"sExodus/ECDSA.sol\":661:695  revert(\"ECDSA: invalid signature\") */\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x45434453413a20696e76616c6964207369676e61747572650000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"sExodus/ECDSA.sol\":603:1068  if (error == RecoverError.InvalidSignature) {... */\n    tag_330:\n        /* \"sExodus/ECDSA.sol\":725:760  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"sExodus/ECDSA.sol\":716:721  error */\n      dup2\n        /* \"sExodus/ECDSA.sol\":716:760  error == RecoverError.InvalidSignatureLength */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_333\n      jumpi\n      invalid\n    tag_333:\n      eq\n        /* \"sExodus/ECDSA.sol\":712:1068  if (error == RecoverError.InvalidSignatureLength) {... */\n      iszero\n      tag_334\n      jumpi\n        /* \"sExodus/ECDSA.sol\":776:817  revert(\"ECDSA: invalid signature length\") */\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x45434453413a20696e76616c6964207369676e6174757265206c656e67746800\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"sExodus/ECDSA.sol\":712:1068  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_334:\n        /* \"sExodus/ECDSA.sol\":847:877  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"sExodus/ECDSA.sol\":838:843  error */\n      dup2\n        /* \"sExodus/ECDSA.sol\":838:877  error == RecoverError.InvalidSignatureS */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_337\n      jumpi\n      invalid\n    tag_337:\n      eq\n        /* \"sExodus/ECDSA.sol\":834:1068  if (error == RecoverError.InvalidSignatureS) {... */\n      iszero\n      tag_338\n      jumpi\n        /* \"sExodus/ECDSA.sol\":893:937  revert(\"ECDSA: invalid signature 's' value\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sExodus/ECDSA.sol\":834:1068  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_338:\n        /* \"sExodus/ECDSA.sol\":967:997  RecoverError.InvalidSignatureV */\n      0x04\n        /* \"sExodus/ECDSA.sol\":958:963  error */\n      dup2\n        /* \"sExodus/ECDSA.sol\":958:997  error == RecoverError.InvalidSignatureV */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_341\n      jumpi\n      invalid\n    tag_341:\n      eq\n        /* \"sExodus/ECDSA.sol\":954:1068  if (error == RecoverError.InvalidSignatureV) {... */\n      iszero\n      tag_342\n      jumpi\n        /* \"sExodus/ECDSA.sol\":1013:1057  revert(\"ECDSA: invalid signature 'v' value\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sExodus/ECDSA.sol\":954:1068  if (error == RecoverError.InvalidSignatureV) {... */\n    tag_342:\n        /* \"sExodus/ECDSA.sol\":443:1074  function _throwError(RecoverError error) private pure {... */\n      pop\n      jump\t// out\n    stop\n    data_035b6bc83dafb7a2caf38cee64b612ce6a24918ce92e23821600bd75c1740717 6745584f3a20206745584f206973206e6f7420612076616c696420636f6e7472616374\n    data_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd 45434453413a20696e76616c6964207369676e6174757265202773272076616c7565\n    data_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4 45434453413a20696e76616c6964207369676e6174757265202776272076616c7565\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_943a7f2fe776b1da8f1c593116d1db5f305d3c06d55576c45bce8bd0cf858a2e 496e697469616c697a65723a202063616c6c6572206973206e6f7420696e697469616c697a6572\n    data_a5659c1cc908cdac5d93994075e79b6facf5d4cb17e30f3636004f4933a19d9c 5374616b696e67436f6e74726163743a202063616c6c206973206e6f74207374616b696e6720636f6e7472616374\n\n    auxdata: 0xa2646970667358221220772d2e62702f79b66dac145754a7b5a45b4a5fb7d67e87f0598fa1f1f89c0a7064736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6101606040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610140523480156200003757600080fd5b506040518060400160405280600a8152602001695374616b65642045584f60b01b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600a8152602001695374616b65642045584f60b01b815250604051806040016040528060048152602001637345584f60e01b81525060098260039080519060200190620000d092919062000314565b508151620000e690600490602085019062000314565b5060f81b7fff00000000000000000000000000000000000000000000000000000000000000166080525050815160208084019190912082519183019190912060e08290526101008190524660c081905291907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f62000166818484620001be565b60a052610120525050600680546001600160a01b0319163317905550506611c37937e080006002819055620001b5925090508060001906600019036200020360201b620017701790919060201c565b600b55620003c0565b604080516020808201959095528082019390935260608301919091524660808301523060a0808401919091528151808403909101815260c09092019052805191012090565b60006200024d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506200025460201b60201c565b9392505050565b60008183620002e45760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620002a85781810151838201526020016200028e565b50505050905090810190601f168015620002d65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581620002f157fe5b049050838581620002fe57fe5b068185020185146200030c57fe5b949350505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200034c576000855562000397565b82601f106200036757805160ff191683800117855562000397565b8280016001018555821562000397579182015b82811115620003975782518255916020019190600101906200037a565b50620003a5929150620003a9565b5090565b5b80821115620003a55760008155600101620003aa565b60805160f81c60a05160c05160e0516101005161012051610140516120b96200041760003980611613525080611aa7525080611ae9525080611ac8525080611a53525080611a7b525080610c5d52506120b96000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806361d027b311610104578063a457c2d7116100a2578063c4ef1c4c11610071578063c4ef1c4c146105b9578063d505accf146105df578063dd62ed3e14610630578063ee99205c1461065e576101da565b8063a457c2d714610510578063a9059cbb1461053c578063ae5c6cd314610568578063b8fbd5331461059c576101da565b80637965d56d116100de5780637965d56d146104bd5780637ecebe00146104da5780639358928b1461050057806395d89b4114610508576101da565b806361d027b31461043a57806370a082311461044257806373c69eb714610468576101da565b8063245c0e991161017c5780633644e5151161014b5780633644e515146103bb57806339509351146103c357806340a5737f146103ef578063485cc9551461040c576101da565b8063245c0e99146103495780632986c0e5146103715780632af36b4314610379578063313ce5671461039d576101da565b8063095ea7b3116101b8578063095ea7b3146102ae57806318160ddd146102ee5780631bd39674146102f657806323b872dd14610313576101da565b8063058ecdb4146101df57806306fdde0314610214578063095be81814610291575b600080fd5b610202600480360360408110156101f557600080fd5b5080359060200135610666565b60408051918252519081900360200190f35b61021c6107f6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561025657818101518382015260200161023e565b50505050905090810190601f1680156102835780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610202600480360360208110156102a757600080fd5b503561088d565b6102da600480360360408110156102c457600080fd5b506001600160a01b038135169060200135610924565b604080519115158252519081900360200190f35b61020261093a565b6102026004803603602081101561030c57600080fd5b5035610940565b6102da6004803603606081101561032957600080fd5b506001600160a01b03813581169160208101359091169060400135610957565b61036f6004803603602081101561035f57600080fd5b50356001600160a01b0316610b1f565b005b610202610c3a565b610381610c4c565b604080516001600160a01b039092168252519081900360200190f35b6103a5610c5b565b6040805160ff9092168252519081900360200190f35b610202610c7f565b6102da600480360360408110156103d957600080fd5b506001600160a01b038135169060200135610c89565b61036f6004803603602081101561040557600080fd5b5035610cc4565b61036f6004803603604081101561042257600080fd5b506001600160a01b0381358116916020013516610d71565b610381610f80565b6102026004803603602081101561045857600080fd5b50356001600160a01b0316610f8f565b6104856004803603602081101561047e57600080fd5b5035610fb7565b604080519788526020880196909652868601949094526060860192909252608085015260a084015260c0830152519081900360e00190f35b610202600480360360208110156104d357600080fd5b5035611009565b610202600480360360208110156104f057600080fd5b50356001600160a01b0316611020565b610202611041565b61021c6111fc565b6102da6004803603604081101561052657600080fd5b506001600160a01b03813516906020013561125d565b6102da6004803603604081101561055257600080fd5b506001600160a01b0381351690602001356112b2565b61036f6004803603606081101561057e57600080fd5b508035906001600160a01b03602082013516906040013515156113e6565b610202600480360360208110156105b257600080fd5b5035611543565b610202600480360360208110156105cf57600080fd5b50356001600160a01b03166115a8565b61036f600480360360e08110156105f557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356115ba565b6102026004803603604081101561064657600080fd5b506001600160a01b0381358116916020013516611736565b610381611761565b6008546000906001600160a01b031633146106b25760405162461bcd60e51b815260040180806020018281038252602e815260200180612056602e913960400191505060405180910390fd5b6000806106bd611041565b90508461074c57600254604080519182525185917f0417b340e646d4be71f9b2da63b5c3c69bc9cfa069f0e0db4756271886130bf4919081900360200190a2837f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb26000610728610c3a565b6040805192835260208301919091528051918290030190a2600254925050506107f0565b8015610778576107718161076b600254886117b990919063ffffffff16565b90611770565b915061077c565b8491505b6002546107899083611812565b60028190556fffffffffffffffffffffffffffffffff10156107ba576fffffffffffffffffffffffffffffffff6002555b6107da6002546611c37937e08000600019816107d257fe5b061990611770565b600b556107e881868661186c565b600254925050505b92915050565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108825780601f1061085757610100808354040283529160200191610882565b820191906000526020600020905b81548152906001019060200180831161086557829003601f168201915b505050505090505b90565b600954604080517f66a5236c0000000000000000000000000000000000000000000000000000000081526004810184905290516000926001600160a01b0316916366a5236c916024808301926020929190829003018186803b1580156108f257600080fd5b505afa158015610906573d6000803e3d6000fd5b505050506040513d602081101561091c57600080fd5b505192915050565b60006109313384846119aa565b50600192915050565b60025490565b60006107f0600b54836117b990919063ffffffff16565b6001600160a01b0383166000908152600d602090815260408083203384529091528120546109859083611a0c565b6001600160a01b0385166000818152600d60209081526040808320338085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a360006109ec83610940565b6001600160a01b0386166000908152600c6020526040902054909150610a129082611a0c565b6001600160a01b038087166000908152600c60205260408082209390935590861681522054610a419082611812565b6001600160a01b038086166000908152600c60209081526040808320949094559188168152600f9091522054610a7686610f8f565b1015610ac9576040805162461bcd60e51b815260206004820152601c60248201527f446562743a2063616e6e6f74207472616e7366657220616d6f756e7400000000604482015290519081900360640190fd5b836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3506001949350505050565b6006546001600160a01b03163314610b685760405162461bcd60e51b815260040180806020018281038252602781526020018061202f6027913960400191505060405180910390fd5b6009546001600160a01b031615610bc6576040805162461bcd60e51b815260206004820152601760248201527f6745584f3a20206745584f20616c726561647920736574000000000000000000604482015290519081900360640190fd5b6001600160a01b038116610c0b5760405162461bcd60e51b8152600401808060200182810382526023815260200180611fa76023913960400191505060405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000610c47600754611009565b905090565b6009546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610c47611a4e565b336000818152600d602090815260408083206001600160a01b03871684529091528120549091610931918590610cbf9086611812565b6119aa565b6006546001600160a01b03163314610d0d5760405162461bcd60e51b815260040180806020018281038252602781526020018061202f6027913960400191505060405180910390fd5b60075415610d62576040805162461bcd60e51b815260206004820152601660248201527f43616e6e6f742073657420494e44455820616761696e00000000000000000000604482015290519081900360640190fd5b610d6b81610940565b60075550565b6006546001600160a01b03163314610dba5760405162461bcd60e51b815260040180806020018281038252602781526020018061202f6027913960400191505060405180910390fd5b6001600160a01b038216610e15576040805162461bcd60e51b815260206004820152600760248201527f5374616b696e6700000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384811691909117918290559081166000908152600c60205260409020660e3d2cfe61ffff1990558116610eb2576040805162461bcd60e51b815260206004820152601660248201527f5a65726f20616464726573733a20547265617375727900000000000000000000604482015290519081900360640190fd5b600e805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383811691909117909155600854600254604080519182525191909216916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef916020908290030190a3600854604080516001600160a01b039092168252517f817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a19181900360200190a150506006805473ffffffffffffffffffffffffffffffffffffffff19169055565b600e546001600160a01b031681565b600b546001600160a01b0382166000908152600c602052604081205490916107f09190611770565b600a8181548110610fc757600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b60006107f0600b548361177090919063ffffffff16565b6001600160a01b03811660009081526005602052604081206107f090611b15565b6000610c47600860009054906101000a90046001600160a01b03166001600160a01b031663201386416040518163ffffffff1660e01b815260040160206040518083038186803b15801561109457600080fd5b505afa1580156110a8573d6000803e3d6000fd5b505050506040513d60208110156110be57600080fd5b5051600954604080517f18160ddd00000000000000000000000000000000000000000000000000000000815290516111f6926001600160a01b03169163a82487689183916318160ddd916004808301926020929190829003018186803b15801561112757600080fd5b505afa15801561113b573d6000803e3d6000fd5b505050506040513d602081101561115157600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526004810192909252516024808301926020929190829003018186803b1580156111a857600080fd5b505afa1580156111bc573d6000803e3d6000fd5b505050506040513d60208110156111d257600080fd5b50516008546111f6906111ed906001600160a01b0316610f8f565b60025490611a0c565b90611812565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108825780601f1061085757610100808354040283529160200191610882565b336000908152600d602090815260408083206001600160a01b038616845290915281205480831061129957611294338560006119aa565b6112a8565b6112a83385610cbf8487611a0c565b5060019392505050565b6000806112ca600b54846117b990919063ffffffff16565b336000908152600c60205260409020549091506112e79082611a0c565b336000908152600c6020526040808220929092556001600160a01b038616815220546113139082611812565b6001600160a01b0385166000908152600c602090815260408083209390935533808352600f909152919020549061134990610f8f565b101561139c576040805162461bcd60e51b815260206004820152601c60248201527f446562743a2063616e6e6f74207472616e7366657220616d6f756e7400000000604482015290519081900360640190fd5b6040805184815290516001600160a01b0386169133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35060019392505050565b600e546001600160a01b03163314611445576040805162461bcd60e51b815260206004820152600d60248201527f4f6e6c7920747265617375727900000000000000000000000000000000000000604482015290519081900360640190fd5b801561148c576001600160a01b0382166000908152600f602052604090205461146e9084611812565b6001600160a01b0383166000908152600f60205260409020556114c9565b6001600160a01b0382166000908152600f60205260409020546114af9084611a0c565b6001600160a01b0383166000908152600f60205260409020555b6114d282610f8f565b6001600160a01b0383166000908152600f6020526040902054111561153e576040805162461bcd60e51b815260206004820152601a60248201527f7345584f3a20696e73756666696369656e742062616c616e6365000000000000604482015290519081900360640190fd5b505050565b600954604080517fa82487680000000000000000000000000000000000000000000000000000000081526004810184905290516000926001600160a01b03169163a8248768916024808301926020929190829003018186803b1580156108f257600080fd5b600f6020526000908152604090205481565b8342111561160f576040805162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015290519081900360640190fd5b60007f000000000000000000000000000000000000000000000000000000000000000088888861163e8c611b19565b8960405160200180878152602001866001600160a01b03168152602001856001600160a01b03168152602001848152602001838152602001828152602001965050505050505060405160208183030381529060405280519060200120905060006116a782611b4b565b905060006116b782878787611b5e565b9050896001600160a01b0316816001600160a01b03161461171f576040805162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015290519081900360640190fd5b61172a8a8a8a6119aa565b50505050505050505050565b6001600160a01b039182166000908152600d6020908152604080832093909416825291909152205490565b6008546001600160a01b031681565b60006117b283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611b86565b9392505050565b6000826117c8575060006107f0565b828202828482816117d557fe5b04146117b25760405162461bcd60e51b815260040180806020018281038252602181526020018061200e6021913960400191505060405180910390fd5b6000828201838110156117b2576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60006118848461076b85670de0b6b3a76400006117b9565b9050600a6040518060e001604052808481526020018381526020018681526020016118ad611041565b81526020018581526020016118c0610c3a565b81524360209182015282546001818101855560009485529382902083516007909202019081558282015193810193909355604080830151600280860191909155606084015160038601556080840151600486015560a0840151600586015560c09093015160069094019390935590548251908152915184927f0417b340e646d4be71f9b2da63b5c3c69bc9cfa069f0e0db4756271886130bf492908290030190a2817f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb28261198c610c3a565b6040805192835260208301919091528051918290030190a250505050565b6001600160a01b038084166000818152600d6020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60006117b283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c3f565b6000467f0000000000000000000000000000000000000000000000000000000000000000811415611aa2577f000000000000000000000000000000000000000000000000000000000000000091505061088a565b611b0d7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611c99565b91505061088a565b5490565b6001600160a01b0381166000908152600560205260408120611b3a81611b15565b9150611b4581611cde565b50919050565b60006107f0611b58611a4e565b83611ce7565b6000806000611b6f87878787611d3d565b91509150611b7c81611e32565b5095945050505050565b60008183611c125760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bd7578181015183820152602001611bbf565b50505050905090810190601f168015611c045780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581611c1e57fe5b049050838581611c2a57fe5b06818502018514611c3757fe5b949350505050565b60008184841115611c915760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611bd7578181015183820152602001611bbf565b505050900390565b604080516020808201959095528082019390935260608301919091524660808301523060a0808401919091528151808403909101815260c09092019052805191012090565b80546001019055565b604080517f19010000000000000000000000000000000000000000000000000000000000006020808301919091526022820194909452604280820193909352815180820390930183526062019052805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611d745750600090506003611e29565b8460ff16601b14158015611d8c57508460ff16601c14155b15611d9d5750600090506004611e29565b600060018787878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611df9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611e2257600060019250925050611e29565b9150600090505b94509492505050565b6000816004811115611e4057fe5b1415611e4b57611fa3565b6001816004811115611e5957fe5b1415611eac576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b6002816004811115611eba57fe5b1415611f0d576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b6003816004811115611f1b57fe5b1415611f585760405162461bcd60e51b8152600401808060200182810382526022815260200180611fca6022913960400191505060405180910390fd5b6004816004811115611f6657fe5b1415611fa35760405162461bcd60e51b8152600401808060200182810382526022815260200180611fec6022913960400191505060405180910390fd5b5056fe6745584f3a20206745584f206973206e6f7420612076616c696420636f6e747261637445434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77496e697469616c697a65723a202063616c6c6572206973206e6f7420696e697469616c697a65725374616b696e67436f6e74726163743a202063616c6c206973206e6f74207374616b696e6720636f6e7472616374a2646970667358221220772d2e62702f79b66dac145754a7b5a45b4a5fb7d67e87f0598fa1f1f89c0a7064736f6c63430007050033",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH2 0x140 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x5374616B65642045584F PUSH1 0xB0 SHL DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x5374616B65642045584F PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x7345584F PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH1 0x9 DUP3 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xD0 SWAP3 SWAP2 SWAP1 PUSH3 0x314 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0xE6 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x314 JUMP JUMPDEST POP PUSH1 0xF8 SHL PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND PUSH1 0x80 MSTORE POP POP DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 SWAP1 MSTORE CHAINID PUSH1 0xC0 DUP2 SWAP1 MSTORE SWAP2 SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH3 0x166 DUP2 DUP5 DUP5 PUSH3 0x1BE JUMP JUMPDEST PUSH1 0xA0 MSTORE PUSH2 0x120 MSTORE POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP POP PUSH7 0x11C37937E08000 PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH3 0x1B5 SWAP3 POP SWAP1 POP DUP1 PUSH1 0x0 NOT MOD PUSH1 0x0 NOT SUB PUSH3 0x203 PUSH1 0x20 SHL PUSH3 0x1770 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xB SSTORE PUSH3 0x3C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH3 0x254 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0x2E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x28E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x2D6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH3 0x2F1 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH3 0x2FE JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH3 0x30C JUMPI INVALID JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x34C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x397 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x367 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x397 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x397 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x397 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x37A JUMP JUMPDEST POP PUSH3 0x3A5 SWAP3 SWAP2 POP PUSH3 0x3A9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3A5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3AA JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xF8 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x20B9 PUSH3 0x417 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x1613 MSTORE POP DUP1 PUSH2 0x1AA7 MSTORE POP DUP1 PUSH2 0x1AE9 MSTORE POP DUP1 PUSH2 0x1AC8 MSTORE POP DUP1 PUSH2 0x1A53 MSTORE POP DUP1 PUSH2 0x1A7B MSTORE POP DUP1 PUSH2 0xC5D MSTORE POP PUSH2 0x20B9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61D027B3 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC4EF1C4C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC4EF1C4C EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0x65E JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xAE5C6CD3 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xB8FBD533 EQ PUSH2 0x59C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x7965D56D GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x7965D56D EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x508 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x73C69EB7 EQ PUSH2 0x468 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x245C0E99 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x40A5737F EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x40C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x245C0E99 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x2AF36B43 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x39D JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x1BD39674 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x313 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x58ECDB4 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x95BE818 EQ PUSH2 0x291 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x256 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x88D JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x940 JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x957 JUMP JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB1F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH2 0xC3A JUMP JUMPDEST PUSH2 0x381 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH2 0xC5B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC89 JUMP JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xD71 JUMP JUMPDEST PUSH2 0x381 PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF8F JUMP JUMPDEST PUSH2 0x485 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP7 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xE0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1020 JUMP JUMPDEST PUSH2 0x202 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0x21C PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x125D JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x12B2 JUMP JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1543 JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x381 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2056 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6BD PUSH2 0x1041 JUMP JUMPDEST SWAP1 POP DUP5 PUSH2 0x74C JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD DUP6 SWAP2 PUSH32 0x417B340E646D4BE71F9B2DA63B5C3C69BC9CFA069F0E0DB4756271886130BF4 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 DUP4 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 PUSH1 0x0 PUSH2 0x728 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 0x2 SLOAD SWAP3 POP POP POP PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x778 JUMPI PUSH2 0x771 DUP2 PUSH2 0x76B PUSH1 0x2 SLOAD DUP9 PUSH2 0x17B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1770 JUMP JUMPDEST SWAP2 POP PUSH2 0x77C JUMP JUMPDEST DUP5 SWAP2 POP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x789 SWAP1 DUP4 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF LT ISZERO PUSH2 0x7BA JUMPI PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SSTORE JUMPDEST PUSH2 0x7DA PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0x7D2 JUMPI INVALID JUMPDEST MOD NOT SWAP1 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH2 0x7E8 DUP2 DUP7 DUP7 PUSH2 0x186C JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x882 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x857 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x882 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x865 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x66A5236C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x66A5236C SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x931 CALLER DUP5 DUP5 PUSH2 0x19AA JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F0 PUSH1 0xB SLOAD DUP4 PUSH2 0x17B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH2 0x985 SWAP1 DUP4 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP2 SWAP4 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x0 PUSH2 0x9EC DUP4 PUSH2 0x940 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xA12 SWAP1 DUP3 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA41 SWAP1 DUP3 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP9 AND DUP2 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0xA76 DUP7 PUSH2 0xF8F JUMP JUMPDEST LT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446562743A2063616E6E6F74207472616E7366657220616D6F756E7400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x202F PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6745584F3A20206745584F20616C726561647920736574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FA7 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC47 PUSH1 0x7 SLOAD PUSH2 0x1009 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC47 PUSH2 0x1A4E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x931 SWAP2 DUP6 SWAP1 PUSH2 0xCBF SWAP1 DUP7 PUSH2 0x1812 JUMP JUMPDEST PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x202F PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0xD62 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073657420494E44455820616761696E00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xD6B DUP2 PUSH2 0x940 JUMP JUMPDEST PUSH1 0x7 SSTORE POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x202F PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE15 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E6700000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH7 0xE3D2CFE61FFFF NOT SWAP1 SSTORE DUP2 AND PUSH2 0xEB2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F20616464726573733A20547265617375727900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD PUSH32 0x817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP PUSH1 0x6 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F0 PUSH1 0xB SLOAD DUP4 PUSH2 0x1770 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x7F0 SWAP1 PUSH2 0x1B15 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC47 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x20138641 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1094 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH2 0x11F6 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA8248768 SWAP2 DUP4 SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x113B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x8 SLOAD PUSH2 0x11F6 SWAP1 PUSH2 0x11ED SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x1A0C JUMP JUMPDEST SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x882 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x857 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x882 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP1 DUP4 LT PUSH2 0x1299 JUMPI PUSH2 0x1294 CALLER DUP6 PUSH1 0x0 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0x12A8 CALLER DUP6 PUSH2 0xCBF DUP5 DUP8 PUSH2 0x1A0C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12CA PUSH1 0xB SLOAD DUP5 PUSH2 0x17B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x12E7 SWAP1 DUP3 PUSH2 0x1A0C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1313 SWAP1 DUP3 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE CALLER DUP1 DUP4 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1349 SWAP1 PUSH2 0xF8F JUMP JUMPDEST LT ISZERO PUSH2 0x139C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446562743A2063616E6E6F74207472616E7366657220616D6F756E7400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1445 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920747265617375727900000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x148C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x146E SWAP1 DUP5 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x14AF SWAP1 DUP5 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x14D2 DUP3 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x153E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7345584F3A20696E73756666696369656E742062616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xA824876800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA8248768 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x160F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP9 DUP9 DUP9 PUSH2 0x163E DUP13 PUSH2 0x1B19 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x16A7 DUP3 PUSH2 0x1B4B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16B7 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1B5E JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x171F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x172A DUP11 DUP11 DUP11 PUSH2 0x19AA JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1B86 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x17C8 JUMPI POP PUSH1 0x0 PUSH2 0x7F0 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x17D5 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x17B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x200E PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x17B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1884 DUP5 PUSH2 0x76B DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x17B9 JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18AD PUSH2 0x1041 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C0 PUSH2 0xC3A JUMP JUMPDEST DUP2 MSTORE NUMBER PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x7 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE DUP3 DUP3 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x2 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP7 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP7 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP7 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD MLOAD PUSH1 0x6 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP1 SLOAD DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD DUP5 SWAP3 PUSH32 0x417B340E646D4BE71F9B2DA63B5C3C69BC9CFA069F0E0DB4756271886130BF4 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG2 DUP2 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 DUP3 PUSH2 0x198C PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x0 CHAINID PUSH32 0x0 DUP2 EQ ISZERO PUSH2 0x1AA2 JUMPI PUSH32 0x0 SWAP2 POP POP PUSH2 0x88A JUMP JUMPDEST PUSH2 0x1B0D PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x88A JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1B3A DUP2 PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B45 DUP2 PUSH2 0x1CDE JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F0 PUSH2 0x1B58 PUSH2 0x1A4E JUMP JUMPDEST DUP4 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1B6F DUP8 DUP8 DUP8 DUP8 PUSH2 0x1D3D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1B7C DUP2 PUSH2 0x1E32 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1C12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BD7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BBF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C04 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1C1E JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x1C2A JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x1C37 JUMPI INVALID JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1C91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1BD7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BBF JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x22 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x42 DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0x62 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1D74 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1E29 JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x1D8C JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x1D9D JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x1E29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1E22 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1E40 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1E4B JUMPI PUSH2 0x1FA3 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1E59 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1EAC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1EBA JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1F0D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F1B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1F58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FCA PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F66 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1FA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FEC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP INVALID PUSH8 0x45584F3A20206745 PC 0x4F KECCAK256 PUSH10 0x73206E6F742061207661 PUSH13 0x696420636F6E74726163744543 DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202773272076616C7565 GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202776272076616C7565 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77496E697469616C697A PUSH6 0x723A20206361 PUSH13 0x6C6572206973206E6F7420696E PUSH10 0x7469616C697A65725374 PUSH2 0x6B69 PUSH15 0x67436F6E74726163743A202063616C PUSH13 0x206973206E6F74207374616B69 PUSH15 0x6720636F6E7472616374A264697066 PUSH20 0x58221220772D2E62702F79B66DAC145754A7B5A4 JUMPDEST 0x4A 0x5F 0xB7 0xD6 PUSH31 0x87F0598FA1F1F89C0A7064736F6C6343000705003300000000000000000000 ",
							"sourceMap": "211:9838:12:-:0;;;971:95:5;918:148;;2267:218:12;;;;;;;;;;1298:52:5;;;;;;;;;;;;;-1:-1:-1;;;1298:52:5;;;1337:4;2340:646:3;;;;;;;;;;;;;-1:-1:-1;;;2340:646:3;;;586:191:4;;;;;;;;;;;;;-1:-1:-1;;;586:191:4;;;;;;;;;;;;;;;;-1:-1:-1;;;586:191:4;;;2309:1:12;707:5:4;699;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;722:17:4;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;749:21:4;;;;;;-1:-1:-1;;2514:22:3;;;;;;;;;;2570:25;;;;;;;;;2751;;;;2786:31;;;;2464:9;2827:26;;;;2464:9;2514:22;2624:117;2890:58;2624:117;2514:22;2570:25;2890:21;:58::i;:::-;2863:85;;2958:21;;-1:-1:-1;;2348:11:12::2;:24:::0;;-1:-1:-1;;;;;;2348:24:12::2;2362:10;2348:24;::::0;;-1:-1:-1;;1523:17:12::2;2382:12;:39:::0;;;2450:28:::2;::::0;-1:-1:-1;1523:17:12;-1:-1:-1;1523:17:12;-1:-1:-1;;1773:38:12::2;-1:-1:-1::0;;1758:54:12::2;2450:14;;;;;;:28;;;;:::i;:::-;2431:16;:47:::0;211:9838;;3435:339:3;3699:67;;;;;;;;;;;;;;;;;;;;;;;;;3653:9;3699:67;;;;3760:4;3699:67;;;;;;;;;;;;;;;;;;;;;;;;3689:78;;;;;;3435:339::o;947:130:11:-;1005:7;1031:39;1035:1;1038;1031:39;;;;;;;;;;;;;;;;;:3;;;:39;;:::i;:::-;1024:46;947:130;-1:-1:-1;;;947:130:11:o;1083:301::-;1199:7;1233:12;1226:5;1218:28;;;;-1:-1:-1;;;1218:28:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1256:9;1272:1;1268;:5;;;;;;1256:17;;1308:1;1304;:5;;;;;;1299:1;1295;:5;:15;1290:1;:20;1283:28;;;;1376:1;1083:301;-1:-1:-1;;;;1083:301:11:o;211:9838:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;211:9838:12;;;-1:-1:-1;211:9838:12;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {
								"759": [
									{
										"length": 32,
										"start": 6779
									}
								],
								"761": [
									{
										"length": 32,
										"start": 6739
									}
								],
								"763": [
									{
										"length": 32,
										"start": 6856
									}
								],
								"765": [
									{
										"length": 32,
										"start": 6889
									}
								],
								"767": [
									{
										"length": 32,
										"start": 6823
									}
								],
								"932": [
									{
										"length": 32,
										"start": 3165
									}
								],
								"1404": [
									{
										"length": 32,
										"start": 5651
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61D027B3 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC4EF1C4C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC4EF1C4C EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0x65E JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xAE5C6CD3 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xB8FBD533 EQ PUSH2 0x59C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x7965D56D GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x7965D56D EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x508 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x73C69EB7 EQ PUSH2 0x468 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x245C0E99 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x40A5737F EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x40C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x245C0E99 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x2AF36B43 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x39D JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x1BD39674 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x313 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x58ECDB4 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x95BE818 EQ PUSH2 0x291 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x256 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x88D JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x940 JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x957 JUMP JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB1F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH2 0xC3A JUMP JUMPDEST PUSH2 0x381 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH2 0xC5B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC89 JUMP JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xD71 JUMP JUMPDEST PUSH2 0x381 PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF8F JUMP JUMPDEST PUSH2 0x485 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP7 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xE0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1020 JUMP JUMPDEST PUSH2 0x202 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0x21C PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x125D JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x12B2 JUMP JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1543 JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x381 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2056 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6BD PUSH2 0x1041 JUMP JUMPDEST SWAP1 POP DUP5 PUSH2 0x74C JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD DUP6 SWAP2 PUSH32 0x417B340E646D4BE71F9B2DA63B5C3C69BC9CFA069F0E0DB4756271886130BF4 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 DUP4 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 PUSH1 0x0 PUSH2 0x728 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 0x2 SLOAD SWAP3 POP POP POP PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x778 JUMPI PUSH2 0x771 DUP2 PUSH2 0x76B PUSH1 0x2 SLOAD DUP9 PUSH2 0x17B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1770 JUMP JUMPDEST SWAP2 POP PUSH2 0x77C JUMP JUMPDEST DUP5 SWAP2 POP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x789 SWAP1 DUP4 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF LT ISZERO PUSH2 0x7BA JUMPI PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SSTORE JUMPDEST PUSH2 0x7DA PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0x7D2 JUMPI INVALID JUMPDEST MOD NOT SWAP1 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH2 0x7E8 DUP2 DUP7 DUP7 PUSH2 0x186C JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x882 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x857 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x882 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x865 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x66A5236C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x66A5236C SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x931 CALLER DUP5 DUP5 PUSH2 0x19AA JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F0 PUSH1 0xB SLOAD DUP4 PUSH2 0x17B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH2 0x985 SWAP1 DUP4 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP2 SWAP4 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x0 PUSH2 0x9EC DUP4 PUSH2 0x940 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xA12 SWAP1 DUP3 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA41 SWAP1 DUP3 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP9 AND DUP2 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0xA76 DUP7 PUSH2 0xF8F JUMP JUMPDEST LT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446562743A2063616E6E6F74207472616E7366657220616D6F756E7400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x202F PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6745584F3A20206745584F20616C726561647920736574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FA7 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC47 PUSH1 0x7 SLOAD PUSH2 0x1009 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC47 PUSH2 0x1A4E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x931 SWAP2 DUP6 SWAP1 PUSH2 0xCBF SWAP1 DUP7 PUSH2 0x1812 JUMP JUMPDEST PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x202F PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0xD62 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073657420494E44455820616761696E00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xD6B DUP2 PUSH2 0x940 JUMP JUMPDEST PUSH1 0x7 SSTORE POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x202F PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE15 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E6700000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH7 0xE3D2CFE61FFFF NOT SWAP1 SSTORE DUP2 AND PUSH2 0xEB2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F20616464726573733A20547265617375727900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD PUSH32 0x817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP PUSH1 0x6 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F0 PUSH1 0xB SLOAD DUP4 PUSH2 0x1770 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x7F0 SWAP1 PUSH2 0x1B15 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC47 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x20138641 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1094 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH2 0x11F6 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA8248768 SWAP2 DUP4 SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x113B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x8 SLOAD PUSH2 0x11F6 SWAP1 PUSH2 0x11ED SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x1A0C JUMP JUMPDEST SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x882 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x857 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x882 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP1 DUP4 LT PUSH2 0x1299 JUMPI PUSH2 0x1294 CALLER DUP6 PUSH1 0x0 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0x12A8 CALLER DUP6 PUSH2 0xCBF DUP5 DUP8 PUSH2 0x1A0C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12CA PUSH1 0xB SLOAD DUP5 PUSH2 0x17B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x12E7 SWAP1 DUP3 PUSH2 0x1A0C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1313 SWAP1 DUP3 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE CALLER DUP1 DUP4 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1349 SWAP1 PUSH2 0xF8F JUMP JUMPDEST LT ISZERO PUSH2 0x139C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446562743A2063616E6E6F74207472616E7366657220616D6F756E7400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1445 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920747265617375727900000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x148C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x146E SWAP1 DUP5 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x14AF SWAP1 DUP5 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x14D2 DUP3 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x153E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7345584F3A20696E73756666696369656E742062616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xA824876800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA8248768 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x160F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP9 DUP9 DUP9 PUSH2 0x163E DUP13 PUSH2 0x1B19 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x16A7 DUP3 PUSH2 0x1B4B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16B7 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1B5E JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x171F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x172A DUP11 DUP11 DUP11 PUSH2 0x19AA JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1B86 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x17C8 JUMPI POP PUSH1 0x0 PUSH2 0x7F0 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x17D5 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x17B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x200E PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x17B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1884 DUP5 PUSH2 0x76B DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x17B9 JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18AD PUSH2 0x1041 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C0 PUSH2 0xC3A JUMP JUMPDEST DUP2 MSTORE NUMBER PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x7 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE DUP3 DUP3 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x2 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP7 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP7 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP7 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD MLOAD PUSH1 0x6 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP1 SLOAD DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD DUP5 SWAP3 PUSH32 0x417B340E646D4BE71F9B2DA63B5C3C69BC9CFA069F0E0DB4756271886130BF4 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG2 DUP2 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 DUP3 PUSH2 0x198C PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x0 CHAINID PUSH32 0x0 DUP2 EQ ISZERO PUSH2 0x1AA2 JUMPI PUSH32 0x0 SWAP2 POP POP PUSH2 0x88A JUMP JUMPDEST PUSH2 0x1B0D PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x88A JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1B3A DUP2 PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B45 DUP2 PUSH2 0x1CDE JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F0 PUSH2 0x1B58 PUSH2 0x1A4E JUMP JUMPDEST DUP4 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1B6F DUP8 DUP8 DUP8 DUP8 PUSH2 0x1D3D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1B7C DUP2 PUSH2 0x1E32 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1C12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BD7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BBF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C04 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1C1E JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x1C2A JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x1C37 JUMPI INVALID JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1C91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1BD7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BBF JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x22 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x42 DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0x62 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1D74 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1E29 JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x1D8C JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x1D9D JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x1E29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1E22 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1E40 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1E4B JUMPI PUSH2 0x1FA3 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1E59 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1EAC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1EBA JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1F0D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F1B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1F58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FCA PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F66 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1FA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FEC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP INVALID PUSH8 0x45584F3A20206745 PC 0x4F KECCAK256 PUSH10 0x73206E6F742061207661 PUSH13 0x696420636F6E74726163744543 DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202773272076616C7565 GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202776272076616C7565 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77496E697469616C697A PUSH6 0x723A20206361 PUSH13 0x6C6572206973206E6F7420696E PUSH10 0x7469616C697A65725374 PUSH2 0x6B69 PUSH15 0x67436F6E74726163743A202063616C PUSH13 0x206973206E6F74207374616B69 PUSH15 0x6720636F6E7472616374A264697066 PUSH20 0x58221220772D2E62702F79B66DAC145754A7B5A4 JUMPDEST 0x4A 0x5F 0xB7 0xD6 PUSH31 0x87F0598FA1F1F89C0A7064736F6C6343000705003300000000000000000000 ",
							"sourceMap": "211:9838:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3906:838;;;;;;;;;;;;;;;;-1:-1:-1;3906:838:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;783:81:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9082:116:12;;;;;;;;;;;;;;;;-1:-1:-1;9082:116:12;;:::i;6768:169::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6768:169:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1056:98:4;;;:::i;8693:131:12:-;;;;;;;;;;;;;;;;-1:-1:-1;8693:131:12;;:::i;6133:629::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6133:629:12;;;;;;;;;;;;;;;;;:::i;2777:314::-;;;;;;;;;;;;;;;;-1:-1:-1;2777:314:12;-1:-1:-1;;;;;2777:314:12;;:::i;:::-;;9780:101;;;:::i;1288:17::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1288:17:12;;;;;;;;;;;;;;961:89:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2348:113:5;;;:::i;6943:214:12:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6943:214:12;;;;;;;;:::i;2539:232::-;;;;;;;;;;;;;;;;-1:-1:-1;2539:232:12;;:::i;3117:585::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3117:585:12;;;;;;;;;;:::i;2130:23::-;;;:::i;8538:149::-;;;;;;;;;;;;;;;;-1:-1:-1;8538:149:12;-1:-1:-1;;;;;8538:149:12;;:::i;1359:23::-;;;;;;;;;;;;;;;;-1:-1:-1;1359:23:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8830:127;;;;;;;;;;;;;;;;-1:-1:-1;8830:127:12;;:::i;2098:126:5:-;;;;;;;;;;;;;;;;-1:-1:-1;2098:126:5;-1:-1:-1;;;;;2098:126:5;;:::i;9489:285:12:-;;;:::i;870:85:4:-;;;:::i;7163:381:12:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7163:381:12;;;;;;;;:::i;5670:457::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5670:457:12;;;;;;;;:::i;7756:449::-;;;;;;;;;;;;;;;;-1:-1:-1;7756:449:12;;;-1:-1:-1;;;;;7756:449:12;;;;;;;;;;;;:::i;9321:120::-;;;;;;;;;;;;;;;;-1:-1:-1;9321:120:12;;:::i;2159:56::-;;;;;;;;;;;;;;;;-1:-1:-1;2159:56:12;-1:-1:-1;;;;;2159:56:12;;:::i;1411:626:5:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1411:626:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9887:160:12:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9887:160:12;;;;;;;;;;:::i;1221:30::-;;;:::i;3906:838::-;684:15;;4000:7;;-1:-1:-1;;;;;684:15:12;670:10;:29;662:88;;;;-1:-1:-1;;;662:88:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4019:20:::1;4049:26:::0;4078:19:::1;:17;:19::i;:::-;4049:48:::0;-1:-1:-1;4111:12:12;4107:336:::1;;4162:12;::::0;4144:31:::1;::::0;;;;;;4154:6;;4144:31:::1;::::0;;;;;::::1;::::0;;::::1;4204:6;4194:29;4212:1;4215:7;:5;:7::i;:::-;4194:29;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;4244:12;;4237:19;;;;;;4107:336;4277:22:::0;;4273:170:::1;;4330:49;4360:18;4330:25;4342:12;;4330:7;:11;;:25;;;;:::i;:::-;:29:::0;::::1;:49::i;:::-;4315:64;;4273:170;;;4425:7;4410:22;;4273:170;4468:12;::::0;:30:::1;::::0;4485:12;4468:16:::1;:30::i;:::-;4453:12;:45:::0;;;4528:10:::1;-1:-1:-1::0;4509:81:12::1;;;4569:10;4554:12;:25:::0;4509:81:::1;4619:28;4634:12;;1523:17;-1:-1:-1::0;;1773:38:12::1;;;;;;1758:54:::0;;4619:14:::1;:28::i;:::-;4600:16;:47:::0;4658:49:::1;4671:18:::0;4691:7;4700:6;4658:12:::1;:49::i;:::-;4725:12;;4718:19;;;;760:1;3906:838:::0;;;;:::o;783:81:4:-;852:5;845:12;;;;;;;;-1:-1:-1;;845:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:13;;845:12;;852:5;;845:12;;852:5;845:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;783:81;;:::o;9082:116:12:-;9169:4;;:22;;;;;;;;;;;;;;9143:7;;-1:-1:-1;;;;;9169:4:12;;:14;;:22;;;;;;;;;;;;;;:4;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9169:22:12;;9082:116;-1:-1:-1;;9082:116:12:o;6768:169::-;6857:4;6873:36;6882:10;6894:7;6903:5;6873:8;:36::i;:::-;-1:-1:-1;6926:4:12;6768:169;;;;:::o;1056:98:4:-;1135:12;;1056:98;:::o;8693:131:12:-;8763:7;8789:28;8800:16;;8789:6;:10;;:28;;;;:::i;6133:629::-;-1:-1:-1;;;;;6316:19:12;;6266:4;6316:19;;;:13;:19;;;;;;;;6336:10;6316:31;;;;;;;;:42;;6352:5;6316:35;:42::i;:::-;-1:-1:-1;;;;;6282:19:12;;;;;;:13;:19;;;;;;;;6302:10;6282:31;;;;;;;;;;:76;;;6373:59;;;;;;6302:10;;6373:59;;;;;;;;;;;6443:16;6462:21;6477:5;6462:14;:21::i;:::-;-1:-1:-1;;;;;6514:18:12;;;;;;:12;:18;;;;;;6443:40;;-1:-1:-1;6514:32:12;;6443:40;6514:22;:32::i;:::-;-1:-1:-1;;;;;6493:18:12;;;;;;;:12;:18;;;;;;:53;;;;6575:16;;;;;;;:30;;6596:8;6575:20;:30::i;:::-;-1:-1:-1;;;;;6556:16:12;;;;;;;:12;:16;;;;;;;;:49;;;;6643:18;;;;;:12;:18;;;;;6624:15;6656:4;6624:9;:15::i;:::-;:37;;6616:78;;;;;-1:-1:-1;;;6616:78:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;6724:2;-1:-1:-1;;;;;6709:25:12;6718:4;-1:-1:-1;;;;;6709:25:12;;6728:5;6709:25;;;;;;;;;;;;;;;;;;-1:-1:-1;6751:4:12;;6133:629;-1:-1:-1;;;;6133:629:12:o;2777:314::-;2850:11;;-1:-1:-1;;;;;2850:11:12;2836:10;:25;2828:77;;;;-1:-1:-1;;;2828:77:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2931:4;;-1:-1:-1;;;;;2931:4:12;2923:27;2915:63;;;;;-1:-1:-1;;;2915:63:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2996:19:12;;2988:67;;;;-1:-1:-1;;;2988:67:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3065:4;:19;;-1:-1:-1;;3065:19:12;-1:-1:-1;;;;;3065:19:12;;;;;;;;;;2777:314::o;9780:101::-;9827:7;9853:21;9868:5;;9853:14;:21::i;:::-;9846:28;;9780:101;:::o;1288:17::-;;;-1:-1:-1;;;;;1288:17:12;;:::o;961:89:4:-;1034:9;961:89;:::o;2348:113:5:-;2408:7;2434:20;:18;:20::i;6943:214:12:-;7057:10;7032:4;7078:25;;;:13;:25;;;;;;;;-1:-1:-1;;;;;7078:34:12;;;;;;;;;;7032:4;;7048:81;;7069:7;;7078:50;;7117:10;7078:38;:50::i;:::-;7048:8;:81::i;2539:232::-;2614:11;;-1:-1:-1;;;;;2614:11:12;2600:10;:25;2592:77;;;;-1:-1:-1;;;2592:77:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2687:5;;:10;2679:45;;;;;-1:-1:-1;;;2679:45:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;2742:22;2757:6;2742:14;:22::i;:::-;2734:5;:30;-1:-1:-1;2539:232:12:o;3117:585::-;3223:11;;-1:-1:-1;;;;;3223:11:12;3209:10;:25;3201:77;;;;-1:-1:-1;;;3201:77:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3297:30:12;;3289:50;;;;;-1:-1:-1;;;3289:50:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;3349:15;:34;;-1:-1:-1;;3349:34:12;-1:-1:-1;;;;;3349:34:12;;;;;;;;;;;3406:15;;;-1:-1:-1;3393:29:12;;;:12;:29;;;;;-1:-1:-1;;3393:42:12;;3454:23;;3446:58;;;;;-1:-1:-1;;;3446:58:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;3514:8;:20;;-1:-1:-1;;3514:20:12;-1:-1:-1;;;;;3514:20:12;;;;;;;;;;3573:15;;3590:12;;3550:53;;;;;;;3573:15;;;;;-1:-1:-1;;3550:53:12;;;;;;;;;;3644:15;;3618:42;;;-1:-1:-1;;;;;3644:15:12;;;3618:42;;;;;;;;;;;;-1:-1:-1;;3671:11:12;:24;;-1:-1:-1;;3671:24:12;;;3117:585::o;2130:23::-;;;-1:-1:-1;;;;;2130:23:12;;:::o;8538:149::-;8663:16;;-1:-1:-1;;;;;8641:17:12;;8615:7;8641:17;;;:12;:17;;;;;;8615:7;;8641:39;;:17;:21;:39::i;1359:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8830:127::-;8898:7;8924:26;8933:16;;8924:4;:8;;:26;;;;:::i;2098:126:5:-;-1:-1:-1;;;;;2193:14:5;;2167:7;2193:14;;;:7;:14;;;;;:24;;:22;:24::i;9489:285:12:-;9548:7;9586:181;9720:15;;;;;;;;;-1:-1:-1;;;;;9720:15:12;-1:-1:-1;;;;;9711:40:12;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9711:42:12;9635:4;;9652:35;;;;;;;;9586:103;;-1:-1:-1;;;;;9635:4:12;;:16;;:4;;9652:33;;:35;;;;;9711:42;;9652:35;;;;;;;9635:4;9652:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9652:35:12;9635:53;;;;;;;;;;;;;;;;;;;;;;;;9652:35;;9635:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9635:53:12;9613:15;;9586:44;;9603:26;;-1:-1:-1;;;;;9613:15:12;9603:9;:26::i;:::-;9586:12;;;:16;:44::i;:::-;:48;;:103::i;870:85:4:-;941:7;934:14;;;;;;;;-1:-1:-1;;934:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;909:13;;934:14;;941:7;;934:14;;941:7;934:14;;;;;;;;;;;;;;;;;;;;;;;;7163:381:12;7306:10;7257:4;7292:25;;;:13;:25;;;;;;;;-1:-1:-1;;;;;7292:34:12;;;;;;;;;;7340:27;;;7336:181;;7383:32;7392:10;7404:7;7413:1;7383:8;:32::i;:::-;7336:181;;;7446:60;7455:10;7467:7;7476:29;:8;7489:15;7476:12;:29::i;7446:60::-;-1:-1:-1;7533:4:12;;7163:381;-1:-1:-1;;;7163:381:12:o;5670:457::-;5755:4;5771:16;5790:27;5800:16;;5790:5;:9;;:27;;;;:::i;:::-;5868:10;5855:24;;;;:12;:24;;;;;;5771:46;;-1:-1:-1;5855:38:12;;5771:46;5855:28;:38::i;:::-;5841:10;5828:24;;;;:12;:24;;;;;;:65;;;;-1:-1:-1;;;;;5922:16:12;;;;;;:30;;5943:8;5922:20;:30::i;:::-;-1:-1:-1;;;;;5903:16:12;;;;;;:12;:16;;;;;;;;:49;;;;6009:10;5996:24;;;:12;:24;;;;;;;;5971:21;;:9;:21::i;:::-;:49;;5963:90;;;;;-1:-1:-1;;;5963:90:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;6068:31;;;;;;;;-1:-1:-1;;;;;6068:31:12;;;6077:10;;6068:31;;;;;;;;;-1:-1:-1;6116:4:12;;5670:457;-1:-1:-1;;;5670:457:12:o;7756:449::-;7898:8;;-1:-1:-1;;;;;7898:8:12;7884:10;:22;7876:48;;;;;-1:-1:-1;;;7876:48:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;7938:3;7934:175;;;-1:-1:-1;;;;;7980:20:12;;;;;;:12;:20;;;;;;:32;;8005:6;7980:24;:32::i;:::-;-1:-1:-1;;;;;7957:20:12;;;;;;:12;:20;;;;;:55;7934:175;;;-1:-1:-1;;;;;8066:20:12;;;;;;:12;:20;;;;;;:32;;8091:6;8066:24;:32::i;:::-;-1:-1:-1;;;;;8043:20:12;;;;;;:12;:20;;;;;:55;7934:175;8150:17;8160:6;8150:9;:17::i;:::-;-1:-1:-1;;;;;8126:20:12;;;;;;:12;:20;;;;;;:41;;8118:80;;;;;-1:-1:-1;;;8118:80:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;7756:449;;;:::o;9321:120::-;9410:4;;:24;;;;;;;;;;;;;;9384:7;;-1:-1:-1;;;;;9410:4:12;;:16;;:24;;;;;;;;;;;;;;:4;:24;;;;;;;;;;2159:56;;;;;;;;;;;;;:::o;1411:626:5:-;1646:8;1627:15;:27;;1619:69;;;;;-1:-1:-1;;;1619:69:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1699:18;1741:16;1759:5;1766:7;1775:5;1782:16;1792:5;1782:9;:16::i;:::-;1800:8;1730:79;;;;;;;;;;;-1:-1:-1;;;;;1730:79:5;;;;;;-1:-1:-1;;;;;1730:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1720:90;;;;;;1699:111;;1821:12;1836:28;1853:10;1836:16;:28::i;:::-;1821:43;;1875:14;1892:28;1906:4;1912:1;1915;1918;1892:13;:28::i;:::-;1875:45;;1948:5;-1:-1:-1;;;;;1938:15:5;:6;-1:-1:-1;;;;;1938:15:5;;1930:58;;;;;-1:-1:-1;;;1930:58:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1999:31;2008:5;2015:7;2024:5;1999:8;:31::i;:::-;1411:626;;;;;;;;;;:::o;9887:160:12:-;-1:-1:-1;;;;;10010:21:12;;;9984:7;10010:21;;;:13;:21;;;;;;;;:30;;;;;;;;;;;;;9887:160::o;1221:30::-;;;-1:-1:-1;;;;;1221:30:12;;:::o;947:130:11:-;1005:7;1031:39;1035:1;1038;1031:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;1024:46;947:130;-1:-1:-1;;;947:130:11:o;700:241::-;758:7;781:6;777:45;;-1:-1:-1;810:1:11;803:8;;777:45;844:5;;;848:1;844;:5;:1;867:5;;;;;:10;859:56;;;;-1:-1:-1;;;859:56:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;155:176;213:7;244:5;;;267:6;;;;259:46;;;;;-1:-1:-1;;;259:46:11;;;;;;;;;;;;;;;;;;;;;;;;;;;4913:698:12;5047:21;5071:43;5093:20;5071:17;:7;5083:4;5071:11;:17::i;:43::-;5047:67;;5124:7;5150:341;;;;;;;;5182:6;5150:341;;;;5214:13;5150:341;;;;5279:20;5150:341;;;;5335:19;:17;:19::i;:::-;5150:341;;;;5387:7;5150:341;;;;5419:7;:5;:7::i;:::-;5150:341;;5464:12;5150:341;;;;;5124:377;;;;;;;;-1:-1:-1;5124:377:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5535:12;;5517:31;;;;;;;5527:6;;5517:31;;;;;;;;;5573:6;5563:41;5581:13;5596:7;:5;:7::i;:::-;5563:41;;;;;;;;;;;;;;;;;;;;;;4913:698;;;;:::o;8263:221::-;-1:-1:-1;;;;;8394:20:12;;;;;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;:37;;;8446:31;;;;;;;;;;;;;;;;;8263:221;;;:::o;337:134:11:-;395:7;421:43;425:1;428;421:43;;;;;;;;;;;;;;;;;:3;:43::i;3072:357:3:-;3125:7;3203:9;3247:16;3236:27;;3232:191;;;3286:24;3279:31;;;;;3232:191;3348:64;3370:10;3382:12;3396:15;3348:21;:64::i;:::-;3341:71;;;;;524:112:1;615:14;;524:112::o;2592:203:5:-;-1:-1:-1;;;;;2712:14:5;;2652:15;2712:14;;;:7;:14;;;;;2746:15;2712:14;2746:13;:15::i;:::-;2736:25;;2771:17;:5;:15;:17::i;:::-;2592:203;;;;:::o;4399:165:3:-;4476:7;4502:55;4524:20;:18;:20::i;:::-;4546:10;4502:21;:55::i;7390:270:2:-;7513:7;7533:17;7552:18;7574:25;7585:4;7591:1;7594;7597;7574:10;:25::i;:::-;7532:67;;;;7609:18;7621:5;7609:11;:18::i;:::-;-1:-1:-1;7644:9:2;7390:270;-1:-1:-1;;;;;7390:270:2:o;1083:301:11:-;1199:7;1233:12;1226:5;1218:28;;;;-1:-1:-1;;;1218:28:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1256:9;1272:1;1268;:5;;;;;;1256:17;;1308:1;1304;:5;;;;;;1299:1;1295;:5;:15;1290:1;:20;1283:28;;;;1376:1;1083:301;-1:-1:-1;;;;1083:301:11:o;477:217::-;593:7;628:12;620:6;;;;612:29;;;;-1:-1:-1;;;612:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;663:5:11;;;477:217::o;3435:339:3:-;3699:67;;;;;;;;;;;;;;;;;;;;;;;;;3653:9;3699:67;;;;3760:4;3699:67;;;;;;;;;;;;;;;;;;;;;;;;3689:78;;;;;;3435:339::o;642:178:1:-;794:19;;812:1;794:19;;;642:178::o;8554:194:2:-;8683:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8673:68;;;;;;8554:194::o;5654:1603::-;5780:7;;6704:66;6691:79;;6687:161;;;-1:-1:-1;6802:1:2;;-1:-1:-1;6806:30:2;6786:51;;6687:161;6861:1;:7;;6866:2;6861:7;;:18;;;;;6872:1;:7;;6877:2;6872:7;;6861:18;6857:100;;;-1:-1:-1;6911:1:2;;-1:-1:-1;6915:30:2;6895:51;;6857:100;7051:14;7068:24;7078:4;7084:1;7087;7090;7068:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7068:24:2;;-1:-1:-1;;7068:24:2;;;-1:-1:-1;;;;;;;7106:20:2;;7102:101;;7158:1;7162:29;7142:50;;;;;;;7102:101;7221:6;-1:-1:-1;7229:20:2;;-1:-1:-1;5654:1603:2;;;;;;;;:::o;443:631::-;520:20;511:5;:29;;;;;;;;;507:561;;;556:7;;507:561;616:29;607:5;:38;;;;;;;;;603:465;;;661:34;;;-1:-1:-1;;;661:34:2;;;;;;;;;;;;;;;;;;;;;;;;;;;603:465;725:35;716:5;:44;;;;;;;;;712:356;;;776:41;;;-1:-1:-1;;;776:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;712:356;847:30;838:5;:39;;;;;;;;;834:234;;;893:44;;-1:-1:-1;;;893:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:234;967:30;958:5;:39;;;;;;;;;954:114;;;1013:44;;-1:-1:-1;;;1013:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;954:114;443:631;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1675400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "1338",
								"approve(address,uint256)": "22365",
								"balanceForGons(uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"changeDebt(uint256,address,bool)": "infinite",
								"circulatingSupply()": "infinite",
								"debtBalances(address)": "1168",
								"decimals()": "infinite",
								"decreaseAllowance(address,uint256)": "23522",
								"fromG(uint256)": "infinite",
								"gEXO()": "1127",
								"gonsForBalance(uint256)": "infinite",
								"increaseAllowance(address,uint256)": "23431",
								"index()": "infinite",
								"initialize(address,address)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1249",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"rebase(uint256,uint256)": "infinite",
								"rebases(uint256)": "7037",
								"setIndex(uint256)": "infinite",
								"setgOHM(address)": "infinite",
								"stakingContract()": "1147",
								"symbol()": "infinite",
								"toG(uint256)": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"treasury()": "1083"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_storeRebase(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "160"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 971,
									"end": 1066,
									"name": "PUSH",
									"source": 5,
									"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
								},
								{
									"begin": 918,
									"end": 1066,
									"name": "PUSH",
									"source": 5,
									"value": "140"
								},
								{
									"begin": 918,
									"end": 1066,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2267,
									"end": 2485,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 2267,
									"end": 2485,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2267,
									"end": 2485,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2267,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2267,
									"end": 2485,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2267,
									"end": 2485,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 2485,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2267,
									"end": 2485,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2267,
									"end": 2485,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2267,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2267,
									"end": 2485,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5374616B65642045584F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1298,
									"end": 1350,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1341,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2340,
									"end": 2986,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 586,
									"end": 777,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 777,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 586,
									"end": 777,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5374616B65642045584F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 777,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 586,
									"end": 777,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7345584F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 586,
									"end": 777,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 586,
									"end": 777,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2309,
									"end": 2310,
									"name": "PUSH",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 707,
									"end": 712,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 699,
									"end": 704,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 699,
									"end": 712,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 699,
									"end": 712,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 699,
									"end": 712,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 699,
									"end": 712,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 699,
									"end": 712,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 699,
									"end": 712,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 699,
									"end": 712,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 699,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 699,
									"end": 712,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 699,
									"end": 712,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 699,
									"end": 712,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 699,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 699,
									"end": 712,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 699,
									"end": 712,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 699,
									"end": 712,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 722,
									"end": 739,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 722,
									"end": 739,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 722,
									"end": 739,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 722,
									"end": 729,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 722,
									"end": 729,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 722,
									"end": 739,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 722,
									"end": 739,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 722,
									"end": 739,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 722,
									"end": 739,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 722,
									"end": 739,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 749,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "F8"
								},
								{
									"begin": 749,
									"end": 770,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 749,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "FF00000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 749,
									"end": 770,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 749,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 749,
									"end": 770,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 2751,
									"end": 2776,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 2751,
									"end": 2776,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2751,
									"end": 2776,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2751,
									"end": 2776,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2786,
									"end": 2817,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2464,
									"end": 2473,
									"name": "CHAINID",
									"source": 3
								},
								{
									"begin": 2827,
									"end": 2853,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 2827,
									"end": 2853,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2827,
									"end": 2853,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2827,
									"end": 2853,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2464,
									"end": 2473,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2624,
									"end": 2741,
									"name": "PUSH",
									"source": 3,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 2890,
									"end": 2948,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2624,
									"end": 2741,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2514,
									"end": 2536,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2890,
									"end": 2911,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2890,
									"end": 2948,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2890,
									"end": 2948,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2890,
									"end": 2948,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2863,
									"end": 2948,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 2863,
									"end": 2948,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2958,
									"end": 2979,
									"name": "PUSH",
									"source": 3,
									"value": "120"
								},
								{
									"begin": 2958,
									"end": 2979,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2348,
									"end": 2359,
									"name": "PUSH",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 2348,
									"end": 2372,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2348,
									"end": 2372,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2348,
									"end": 2372,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2362,
									"end": 2372,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 2348,
									"end": 2372,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2348,
									"end": 2372,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2348,
									"end": 2372,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "PUSH",
									"source": 12,
									"value": "11C37937E08000"
								},
								{
									"begin": 2382,
									"end": 2394,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 2382,
									"end": 2421,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2382,
									"end": 2421,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2382,
									"end": 2421,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2450,
									"end": 2478,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2450,
									"end": 2478,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1773,
									"end": 1811,
									"name": "MOD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1758,
									"end": 1812,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2450,
									"end": 2464,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 2450,
									"end": 2464,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2450,
									"end": 2464,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2450,
									"end": 2464,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18446744073709551744"
								},
								{
									"begin": 2450,
									"end": 2464,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2450,
									"end": 2464,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2450,
									"end": 2478,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2450,
									"end": 2478,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2450,
									"end": 2478,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2450,
									"end": 2478,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2450,
									"end": 2478,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2450,
									"end": 2478,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2450,
									"end": 2478,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2431,
									"end": 2447,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 2431,
									"end": 2478,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3435,
									"end": 3774,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 3435,
									"end": 3774,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP6",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP6",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3653,
									"end": 3662,
									"name": "CHAINID",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3760,
									"end": 3764,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3699,
									"end": 3766,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3689,
									"end": 3767,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3689,
									"end": 3767,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3689,
									"end": 3767,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3689,
									"end": 3767,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3689,
									"end": 3767,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 3689,
									"end": 3767,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3435,
									"end": 3774,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 947,
									"end": 1077,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 947,
									"end": 1077,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1005,
									"end": 1012,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1035,
									"end": 1036,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1038,
									"end": 1039,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "PUSH",
									"source": 11,
									"value": "1A"
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "PUSH",
									"source": 11,
									"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1031,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1031,
									"end": 1034,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1031,
									"end": 1034,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1031,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1024,
									"end": 1070,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 947,
									"end": 1077,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 947,
									"end": 1077,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1083,
									"end": 1384,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1083,
									"end": 1384,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1199,
									"end": 1206,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1245,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1226,
									"end": 1231,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1246,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1256,
									"end": 1265,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 1273,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1268,
									"end": 1269,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1268,
									"end": 1273,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1268,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1268,
									"end": 1273,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1268,
									"end": 1273,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 1268,
									"end": 1273,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1268,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1268,
									"end": 1273,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1256,
									"end": 1273,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1256,
									"end": 1273,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1304,
									"end": 1305,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1304,
									"end": 1309,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1304,
									"end": 1309,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1304,
									"end": 1309,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1304,
									"end": 1309,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 1304,
									"end": 1309,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1304,
									"end": 1309,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1304,
									"end": 1309,
									"name": "MOD",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1300,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1295,
									"end": 1296,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1295,
									"end": 1300,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1295,
									"end": 1310,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1290,
									"end": 1291,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1290,
									"end": 1310,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1283,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1283,
									"end": 1311,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1283,
									"end": 1311,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 1283,
									"end": 1311,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1283,
									"end": 1311,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1377,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 1083,
									"end": 1384,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1083,
									"end": 1384,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "F8"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1404"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "767"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "765"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "763"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "761"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "759"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "932"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 10049,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220772d2e62702f79b66dac145754a7b5a45b4a5fb7d67e87f0598fa1f1f89c0a7064736f6c63430007050033",
									".code": [
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "61D027B3"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "A457C2D7"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "C4EF1C4C"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "C4EF1C4C"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "D505ACCF"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "EE99205C"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "A457C2D7"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "AE5C6CD3"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "B8FBD533"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "7965D56D"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "7965D56D"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "7ECEBE00"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "9358928B"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "61D027B3"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "73C69EB7"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "245C0E99"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "3644E515"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "3644E515"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "39509351"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "40A5737F"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "485CC955"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "245C0E99"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "2986C0E5"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "2AF36B43"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "1BD39674"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "58ECDB4"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "95BE818"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 10049,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 9780,
											"end": 9881,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 9780,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9780,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9780,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 9780,
											"end": 9881,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9489,
											"end": 9774,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 9489,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9489,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9489,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 9489,
											"end": 9774,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 870,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1251,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1221,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1221,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1221,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1221,
											"end": 1251,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 684,
											"end": 699,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 684,
											"end": 699,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4000,
											"end": 4007,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4007,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 699,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 670,
											"end": 680,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 670,
											"end": 699,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 662,
											"end": 750,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 750,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 662,
											"end": 750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 662,
											"end": 750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "PUSH",
											"source": 12,
											"value": "2E"
										},
										{
											"begin": 662,
											"end": 750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "PUSH data",
											"source": 12,
											"value": "A5659C1CC908CDAC5D93994075E79B6FACF5D4CB17E30F3636004F4933A19D9C"
										},
										{
											"begin": 662,
											"end": 750,
											"name": "PUSH",
											"source": 12,
											"value": "2E"
										},
										{
											"begin": 662,
											"end": 750,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "CODECOPY",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 750,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 662,
											"end": 750,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 662,
											"end": 750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4019,
											"end": 4039,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4075,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4078,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 4078,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 4078,
											"end": 4097,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4078,
											"end": 4097,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 4078,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4097,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4111,
											"end": 4123,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4107,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 4107,
											"end": 4443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4162,
											"end": 4174,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4162,
											"end": 4174,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4154,
											"end": 4160,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4154,
											"end": 4160,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "PUSH",
											"source": 12,
											"value": "417B340E646D4BE71F9B2DA63B5C3C69BC9CFA069F0E0DB4756271886130BF4"
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4175,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 4204,
											"end": 4210,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "PUSH",
											"source": 12,
											"value": "6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2"
										},
										{
											"begin": 4212,
											"end": 4213,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 4215,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 4215,
											"end": 4222,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4215,
											"end": 4222,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 4215,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 4244,
											"end": 4256,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4244,
											"end": 4256,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4237,
											"end": 4256,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4237,
											"end": 4256,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4237,
											"end": 4256,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4237,
											"end": 4256,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4237,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 4237,
											"end": 4256,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4107,
											"end": 4443,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 4107,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4273,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 4273,
											"end": 4443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 4360,
											"end": 4378,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 4342,
											"end": 4354,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4342,
											"end": 4354,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4337,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 4330,
											"end": 4341,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4359,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 4330,
											"end": 4379,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4330,
											"end": 4379,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 4330,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4315,
											"end": 4379,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4315,
											"end": 4379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4273,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 4273,
											"end": 4443,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4273,
											"end": 4443,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 4273,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4425,
											"end": 4432,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4273,
											"end": 4443,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 4273,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4468,
											"end": 4480,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4468,
											"end": 4480,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4468,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 4468,
											"end": 4498,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4485,
											"end": 4497,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4468,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 4468,
											"end": 4498,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4468,
											"end": 4498,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 4468,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4453,
											"end": 4465,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4453,
											"end": 4498,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4453,
											"end": 4498,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4453,
											"end": 4498,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4528,
											"end": 4538,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4509,
											"end": 4590,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4509,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 4509,
											"end": 4590,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4579,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4554,
											"end": 4566,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4554,
											"end": 4579,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4509,
											"end": 4590,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 4509,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 4634,
											"end": 4646,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4634,
											"end": 4646,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1523,
											"end": 1540,
											"name": "PUSH",
											"source": 12,
											"value": "11C37937E08000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1773,
											"end": 1811,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1773,
											"end": 1811,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1811,
											"name": "INVALID",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1811,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1773,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1811,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 1758,
											"end": 1812,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1758,
											"end": 1812,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 4619,
											"end": 4647,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4619,
											"end": 4647,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 4619,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4600,
											"end": 4616,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4600,
											"end": 4647,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4658,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4691,
											"end": 4698,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4700,
											"end": 4706,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4658,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 4658,
											"end": 4707,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4658,
											"end": 4707,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 4658,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 4737,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 4737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 4737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 4737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 760,
											"end": 761,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 760,
											"end": 761,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 4744,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 852,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 820,
											"end": 833,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 833,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 852,
											"end": 857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 852,
											"end": 857,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 852,
											"end": 857,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 845,
											"end": 857,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 864,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9173,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 9169,
											"end": 9173,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH",
											"source": 12,
											"value": "66A5236C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9143,
											"end": 9150,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9143,
											"end": 9150,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9169,
											"end": 9173,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9173,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9183,
											"name": "PUSH",
											"source": 12,
											"value": "66A5236C"
										},
										{
											"begin": 9169,
											"end": 9183,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9173,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9082,
											"end": 9198,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6857,
											"end": 6861,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 6882,
											"end": 6892,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6894,
											"end": 6901,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 6908,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6873,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 6873,
											"end": 6909,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6873,
											"end": 6909,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 6873,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6926,
											"end": 6930,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6937,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1154,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 8693,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8763,
											"end": 8770,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8789,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 8800,
											"end": 8816,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 8800,
											"end": 8816,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 8795,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 8789,
											"end": 8799,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 8817,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 8817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 8817,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8789,
											"end": 8817,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 8817,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6266,
											"end": 6270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6329,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6335,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6336,
											"end": 6346,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6347,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6347,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6347,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6347,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6347,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6347,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6347,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6347,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 6316,
											"end": 6358,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6352,
											"end": 6357,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 6316,
											"end": 6358,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6316,
											"end": 6358,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 6316,
											"end": 6358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6282,
											"end": 6301,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6301,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6301,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6301,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6301,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6301,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6295,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 6282,
											"end": 6301,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6282,
											"end": 6301,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6301,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6301,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6301,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6282,
											"end": 6301,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6301,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6301,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6312,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6313,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6313,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6313,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6313,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6313,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6313,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6313,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6313,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6358,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6358,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6358,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6312,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6312,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "PUSH",
											"source": 12,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6432,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 6443,
											"end": 6459,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6462,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 6477,
											"end": 6482,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6462,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 6462,
											"end": 6483,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6462,
											"end": 6483,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 6462,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6514,
											"end": 6532,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6532,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6532,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6532,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6532,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6532,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6526,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 6514,
											"end": 6532,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6514,
											"end": 6532,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6532,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6514,
											"end": 6532,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6532,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6532,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6443,
											"end": 6483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6443,
											"end": 6483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6514,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 6514,
											"end": 6546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6443,
											"end": 6483,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6514,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 6514,
											"end": 6546,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6514,
											"end": 6546,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 6514,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6493,
											"end": 6511,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6511,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6511,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6493,
											"end": 6511,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6511,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6505,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 6493,
											"end": 6511,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6511,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6511,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6511,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6511,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6511,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6546,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6546,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6546,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6591,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6591,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6591,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6591,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6591,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6591,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6591,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 6575,
											"end": 6605,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6604,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 6575,
											"end": 6605,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 6605,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 6575,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6568,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6572,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6605,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6605,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6605,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6605,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6655,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6624,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 6656,
											"end": 6660,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6624,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 6624,
											"end": 6639,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6624,
											"end": 6639,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 6624,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6624,
											"end": 6661,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6624,
											"end": 6661,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "PUSH",
											"source": 12,
											"value": "446562743A2063616E6E6F74207472616E7366657220616D6F756E7400000000"
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 6616,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6724,
											"end": 6726,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6718,
											"end": 6722,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "PUSH",
											"source": 12,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6728,
											"end": 6733,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6734,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6751,
											"end": 6755,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6751,
											"end": 6755,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6133,
											"end": 6762,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2861,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2850,
											"end": 2861,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2850,
											"end": 2861,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2846,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2861,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "PUSH",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "PUSH data",
											"source": 12,
											"value": "943A7F2FE776B1DA8F1C593116D1DB5F305D3C06D55576C45BCE8BD0CF858A2E"
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "PUSH",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "CODECOPY",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 2828,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2950,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "PUSH",
											"source": 12,
											"value": "6745584F3A20206745584F20616C726561647920736574000000000000000000"
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 2915,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2996,
											"end": 3015,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3015,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "PUSH",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "PUSH data",
											"source": 12,
											"value": "35B6BC83DAFB7A2CAF38CEE64B612CE6A24918CE92E23821600BD75C1740717"
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "PUSH",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "CODECOPY",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3069,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3084,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 3091,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9780,
											"end": 9881,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 9780,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9827,
											"end": 9834,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9853,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 9868,
											"end": 9873,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 9868,
											"end": 9873,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9853,
											"end": 9867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 9853,
											"end": 9874,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9853,
											"end": 9874,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 9853,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9846,
											"end": 9874,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9846,
											"end": 9874,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9780,
											"end": 9881,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9780,
											"end": 9881,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "932"
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 961,
											"end": 1050,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2348,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2434,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2434,
											"end": 2454,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 6943,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7057,
											"end": 7067,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7032,
											"end": 7036,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7078,
											"end": 7103,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7103,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7103,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7091,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 7078,
											"end": 7103,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7078,
											"end": 7103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7103,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7103,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7103,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7078,
											"end": 7103,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7103,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7103,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7078,
											"end": 7112,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7112,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7112,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7112,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7112,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7112,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7112,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7112,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7112,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7112,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7032,
											"end": 7036,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7032,
											"end": 7036,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7048,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 7048,
											"end": 7129,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7069,
											"end": 7076,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7069,
											"end": 7076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 7078,
											"end": 7128,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7117,
											"end": 7127,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 7078,
											"end": 7128,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7078,
											"end": 7128,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 7078,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7048,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 7048,
											"end": 7129,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2600,
											"end": 2625,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "PUSH",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "PUSH data",
											"source": 12,
											"value": "943A7F2FE776B1DA8F1C593116D1DB5F305D3C06D55576C45BCE8BD0CF858A2E"
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "PUSH",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "CODECOPY",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 2592,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2687,
											"end": 2692,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2687,
											"end": 2692,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2687,
											"end": 2697,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "PUSH",
											"source": 12,
											"value": "43616E6E6F742073657420494E44455820616761696E00000000000000000000"
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 2679,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2742,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 2757,
											"end": 2763,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2742,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 2742,
											"end": 2764,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2742,
											"end": 2764,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 2742,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2734,
											"end": 2739,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2734,
											"end": 2764,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2539,
											"end": 2771,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3223,
											"end": 3234,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3223,
											"end": 3234,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3223,
											"end": 3234,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3219,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "PUSH",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "PUSH data",
											"source": 12,
											"value": "943A7F2FE776B1DA8F1C593116D1DB5F305D3C06D55576C45BCE8BD0CF858A2E"
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "PUSH",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "CODECOPY",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 3201,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3297,
											"end": 3327,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3297,
											"end": 3327,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "PUSH",
											"source": 12,
											"value": "5374616B696E6700000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 3289,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3364,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3406,
											"end": 3421,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3406,
											"end": 3421,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3406,
											"end": 3421,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3422,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3393,
											"end": 3422,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3393,
											"end": 3422,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3393,
											"end": 3405,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 3393,
											"end": 3422,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3422,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3393,
											"end": 3422,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3422,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3393,
											"end": 3422,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3D2CFE61FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3393,
											"end": 3435,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3393,
											"end": 3435,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 3477,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 3477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "PUSH",
											"source": 12,
											"value": "5A65726F20616464726573733A20547265617375727900000000000000000000"
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3522,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3588,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3573,
											"end": 3588,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3590,
											"end": 3602,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3590,
											"end": 3602,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3588,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3588,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3588,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3588,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "PUSH",
											"source": 12,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 3644,
											"end": 3659,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3644,
											"end": 3659,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3644,
											"end": 3659,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3644,
											"end": 3659,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3644,
											"end": 3659,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "PUSH",
											"source": 12,
											"value": "817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1"
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3671,
											"end": 3682,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3671,
											"end": 3695,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3671,
											"end": 3695,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3671,
											"end": 3695,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3671,
											"end": 3695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3671,
											"end": 3695,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3702,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 8538,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 8663,
											"end": 8679,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8615,
											"end": 8622,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8653,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8615,
											"end": 8622,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8615,
											"end": 8622,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 8641,
											"end": 8680,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8662,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 8641,
											"end": 8680,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 8830,
											"end": 8957,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8898,
											"end": 8905,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8924,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 8933,
											"end": 8949,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 8933,
											"end": 8949,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8924,
											"end": 8928,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8924,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 8924,
											"end": 8932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8924,
											"end": 8950,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8924,
											"end": 8950,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8924,
											"end": 8950,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8924,
											"end": 8950,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8924,
											"end": 8950,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2098,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2200,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2193,
											"end": 2217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2193,
											"end": 2217,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9489,
											"end": 9774,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 9489,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9586,
											"end": 9767,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 9720,
											"end": 9735,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 9720,
											"end": 9735,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9720,
											"end": 9735,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9720,
											"end": 9735,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9720,
											"end": 9735,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9720,
											"end": 9735,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9720,
											"end": 9735,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 9720,
											"end": 9735,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9720,
											"end": 9735,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9720,
											"end": 9735,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9711,
											"end": 9751,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9751,
											"name": "PUSH",
											"source": 12,
											"value": "20138641"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9639,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 9635,
											"end": 9639,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 9586,
											"end": 9689,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9635,
											"end": 9639,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9651,
											"name": "PUSH",
											"source": 12,
											"value": "A8248768"
										},
										{
											"begin": 9635,
											"end": 9651,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9639,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9685,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 9652,
											"end": 9685,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9711,
											"end": 9753,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9639,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9635,
											"end": 9688,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9613,
											"end": 9628,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 9613,
											"end": 9628,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 9586,
											"end": 9630,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9603,
											"end": 9629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 9603,
											"end": 9629,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9613,
											"end": 9628,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9603,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 9603,
											"end": 9629,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9603,
											"end": 9629,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 9603,
											"end": 9629,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9598,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9586,
											"end": 9598,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9598,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 9586,
											"end": 9630,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9586,
											"end": 9630,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 9586,
											"end": 9630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9634,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 9586,
											"end": 9689,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 870,
											"end": 955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 941,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 909,
											"end": 922,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 909,
											"end": 922,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 941,
											"end": 948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 941,
											"end": 948,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 941,
											"end": 948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 934,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 934,
											"end": 948,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7306,
											"end": 7316,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7257,
											"end": 7261,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7292,
											"end": 7317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7317,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7317,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7305,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 7292,
											"end": 7317,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7292,
											"end": 7317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7317,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7317,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7317,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7292,
											"end": 7317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7317,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7317,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7340,
											"end": 7367,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7340,
											"end": 7367,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7340,
											"end": 7367,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7336,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 7336,
											"end": 7517,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 7392,
											"end": 7402,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7404,
											"end": 7411,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7413,
											"end": 7414,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7383,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 7383,
											"end": 7415,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7383,
											"end": 7415,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 7383,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7336,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 7336,
											"end": 7517,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7336,
											"end": 7517,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 7336,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7446,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 7455,
											"end": 7465,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7467,
											"end": 7474,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 7476,
											"end": 7484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7489,
											"end": 7504,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 7476,
											"end": 7505,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7446,
											"end": 7506,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 7446,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7533,
											"end": 7537,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7533,
											"end": 7537,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7163,
											"end": 7544,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5755,
											"end": 5759,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5790,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5790,
											"end": 5795,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5790,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 5790,
											"end": 5799,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5790,
											"end": 5817,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5790,
											"end": 5817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5790,
											"end": 5817,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5790,
											"end": 5817,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5790,
											"end": 5817,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5790,
											"end": 5817,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 5790,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5878,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5867,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5817,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5855,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 5855,
											"end": 5893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5817,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 5855,
											"end": 5893,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5855,
											"end": 5893,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 5855,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5841,
											"end": 5851,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5828,
											"end": 5852,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5852,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5828,
											"end": 5852,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5828,
											"end": 5852,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5828,
											"end": 5840,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 5828,
											"end": 5852,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5828,
											"end": 5852,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5828,
											"end": 5852,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5828,
											"end": 5852,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5828,
											"end": 5852,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5828,
											"end": 5852,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5828,
											"end": 5893,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5828,
											"end": 5893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5828,
											"end": 5893,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5828,
											"end": 5893,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5922,
											"end": 5938,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 5938,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 5938,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 5938,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 5938,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 5938,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 5922,
											"end": 5952,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 5951,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 5922,
											"end": 5952,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5922,
											"end": 5952,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 5922,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5915,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5952,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5952,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5952,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5952,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6009,
											"end": 6019,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6008,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 5971,
											"end": 5992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 5971,
											"end": 5992,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5971,
											"end": 5992,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 5971,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6020,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6020,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH",
											"source": 12,
											"value": "446562743A2063616E6E6F74207472616E7366657220616D6F756E7400000000"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6077,
											"end": 6087,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6077,
											"end": 6087,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "PUSH",
											"source": 12,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6116,
											"end": 6120,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6116,
											"end": 6120,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5670,
											"end": 6127,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7898,
											"end": 7906,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 7898,
											"end": 7906,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7898,
											"end": 7906,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7894,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7906,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "PUSH",
											"source": 12,
											"value": "4F6E6C7920747265617375727900000000000000000000000000000000000000"
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 7876,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7938,
											"end": 7941,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7934,
											"end": 8109,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7934,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 7934,
											"end": 8109,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7980,
											"end": 8000,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7980,
											"end": 8000,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7980,
											"end": 8000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7980,
											"end": 8000,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7980,
											"end": 8000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7980,
											"end": 8000,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7980,
											"end": 7992,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 7980,
											"end": 8000,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7980,
											"end": 8000,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7980,
											"end": 8000,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7980,
											"end": 8000,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7980,
											"end": 8000,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7980,
											"end": 8000,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7980,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 7980,
											"end": 8012,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8005,
											"end": 8011,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7980,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 7980,
											"end": 8012,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7980,
											"end": 8012,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 7980,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7957,
											"end": 7969,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7957,
											"end": 8012,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 7934,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 7934,
											"end": 8109,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7934,
											"end": 8109,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 7934,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8066,
											"end": 8078,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8066,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 8066,
											"end": 8098,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8091,
											"end": 8097,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8066,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 8066,
											"end": 8098,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8066,
											"end": 8098,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 8066,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8043,
											"end": 8063,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8043,
											"end": 8063,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8043,
											"end": 8063,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8043,
											"end": 8063,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8043,
											"end": 8063,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8043,
											"end": 8063,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8043,
											"end": 8055,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 8043,
											"end": 8063,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8043,
											"end": 8063,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8043,
											"end": 8063,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8043,
											"end": 8063,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8043,
											"end": 8063,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8043,
											"end": 8098,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 7934,
											"end": 8109,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 7934,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8150,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 8160,
											"end": 8166,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8150,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 8150,
											"end": 8167,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8150,
											"end": 8167,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 8150,
											"end": 8167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8126,
											"end": 8138,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8126,
											"end": 8167,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8126,
											"end": 8167,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "PUSH",
											"source": 12,
											"value": "7345584F3A20696E73756666696369656E742062616C616E6365000000000000"
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 8118,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7756,
											"end": 8205,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 9321,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9414,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 9410,
											"end": 9414,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "PUSH",
											"source": 12,
											"value": "A824876800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9384,
											"end": 9391,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9384,
											"end": 9391,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9410,
											"end": 9414,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9414,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9426,
											"name": "PUSH",
											"source": 12,
											"value": "A8248768"
										},
										{
											"begin": 9410,
											"end": 9426,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9414,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2215,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1646,
											"end": 1654,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1642,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1654,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "45524332305065726D69743A206578706972656420646561646C696E65000000"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 1619,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1757,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "1404"
										},
										{
											"begin": 1759,
											"end": 1764,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1773,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 1782,
											"end": 1798,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1782,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 1782,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1808,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1730,
											"end": 1809,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1810,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1810,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1810,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1810,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1821,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 1853,
											"end": 1863,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 1836,
											"end": 1864,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1836,
											"end": 1864,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 1836,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1821,
											"end": 1864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1821,
											"end": 1864,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 1906,
											"end": 1910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1919,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1892,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 1892,
											"end": 1920,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1892,
											"end": 1920,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 1892,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1944,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "45524332305065726D69743A20696E76616C6964207369676E61747572650000"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 1930,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 2008,
											"end": 2013,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2022,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1999,
											"end": 2030,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1999,
											"end": 2030,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 1999,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 2037,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9984,
											"end": 9991,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10023,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10040,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10040,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10040,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10040,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10040,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10040,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10040,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10040,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10040,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10040,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10040,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10040,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10040,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 10047,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1251,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1221,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1221,
											"end": 1251,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1221,
											"end": 1251,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1221,
											"end": 1251,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1221,
											"end": 1251,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1221,
											"end": 1251,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 947,
											"end": 1077,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 947,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1012,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 1035,
											"end": 1036,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1038,
											"end": 1039,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 11,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1024,
											"end": 1070,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 947,
											"end": 1077,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 947,
											"end": 1077,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 700,
											"end": 941,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 700,
											"end": 941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 787,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 777,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 777,
											"end": 822,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 803,
											"end": 811,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 777,
											"end": 822,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 777,
											"end": 822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 849,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 845,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 845,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 867,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 867,
											"end": 872,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 867,
											"end": 872,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 867,
											"end": 872,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 867,
											"end": 872,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 867,
											"end": 872,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 867,
											"end": 877,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH data",
											"source": 11,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "CODECOPY",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 859,
											"end": 915,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 155,
											"end": 331,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 155,
											"end": 331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 213,
											"end": 220,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 249,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 244,
											"end": 249,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 244,
											"end": 249,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 267,
											"end": 273,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 267,
											"end": 273,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 267,
											"end": 273,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 267,
											"end": 273,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 259,
											"end": 305,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 5611,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 4913,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5047,
											"end": 5068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 5093,
											"end": 5113,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5071,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 5071,
											"end": 5078,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5083,
											"end": 5087,
											"name": "PUSH",
											"source": 12,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5071,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 5071,
											"end": 5088,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5071,
											"end": 5114,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 5071,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5047,
											"end": 5114,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5047,
											"end": 5114,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5131,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5182,
											"end": 5188,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5214,
											"end": 5227,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5279,
											"end": 5299,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 5335,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 5335,
											"end": 5354,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5335,
											"end": 5354,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 5335,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5387,
											"end": 5394,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 5419,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5464,
											"end": 5476,
											"name": "NUMBER",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5491,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5501,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5535,
											"end": 5547,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5535,
											"end": 5547,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5527,
											"end": 5533,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5527,
											"end": 5533,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "PUSH",
											"source": 12,
											"value": "417B340E646D4BE71F9B2DA63B5C3C69BC9CFA069F0E0DB4756271886130BF4"
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5548,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 5573,
											"end": 5579,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "PUSH",
											"source": 12,
											"value": "6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2"
										},
										{
											"begin": 5581,
											"end": 5594,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5596,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 5596,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 5596,
											"end": 5603,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5596,
											"end": 5603,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 5596,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 4913,
											"end": 5611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4913,
											"end": 5611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4913,
											"end": 5611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4913,
											"end": 5611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4913,
											"end": 5611,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8263,
											"end": 8484,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 8263,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8407,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8431,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8431,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8431,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "PUSH",
											"source": 12,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8477,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 8263,
											"end": 8484,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8263,
											"end": 8484,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8263,
											"end": 8484,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8263,
											"end": 8484,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 337,
											"end": 471,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 337,
											"end": 471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 395,
											"end": 402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 425,
											"end": 426,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 428,
											"end": 429,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 11,
											"value": "1E"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 11,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 421,
											"end": 464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 421,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3072,
											"end": 3429,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 3072,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3212,
											"name": "CHAINID",
											"source": 3
										},
										{
											"begin": 3247,
											"end": 3263,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "761"
										},
										{
											"begin": 3236,
											"end": 3263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3263,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3232,
											"end": 3423,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3232,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 3232,
											"end": 3423,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "759"
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3232,
											"end": 3423,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 3232,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 3370,
											"end": 3380,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "767"
										},
										{
											"begin": 3382,
											"end": 3394,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "763"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "765"
										},
										{
											"begin": 3348,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 3348,
											"end": 3412,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3348,
											"end": 3412,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 3348,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3412,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3341,
											"end": 3412,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 524,
											"end": 636,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 524,
											"end": 636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 629,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 615,
											"end": 629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 524,
											"end": 636,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2592,
											"end": 2795,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 2592,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2719,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 2712,
											"end": 2726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2746,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2761,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 2771,
											"end": 2776,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 2771,
											"end": 2788,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2771,
											"end": 2788,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 2771,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2795,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2795,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2795,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4399,
											"end": 4564,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 4399,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4502,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 4524,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4546,
											"end": 4556,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 4502,
											"end": 4557,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7390,
											"end": 7660,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 7390,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7513,
											"end": 7520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7550,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 7585,
											"end": 7589,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7591,
											"end": 7592,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7594,
											"end": 7595,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7597,
											"end": 7598,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7574,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 7574,
											"end": 7599,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7574,
											"end": 7599,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 7574,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7532,
											"end": 7599,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7532,
											"end": 7599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7532,
											"end": 7599,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7532,
											"end": 7599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 7621,
											"end": 7626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7609,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 7390,
											"end": 7660,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7390,
											"end": 7660,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1199,
											"end": 1206,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1245,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1273,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 1299,
											"end": 1300,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1295,
											"end": 1310,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1290,
											"end": 1310,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 477,
											"end": 694,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 477,
											"end": 694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 593,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 640,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 620,
											"end": 626,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 620,
											"end": 626,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 641,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 477,
											"end": 694,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3435,
											"end": 3774,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 3435,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3653,
											"end": 3662,
											"name": "CHAINID",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3764,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3689,
											"end": 3767,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3435,
											"end": 3774,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 642,
											"end": 820,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 642,
											"end": 820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 794,
											"end": 813,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 794,
											"end": 813,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 812,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 794,
											"end": 813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 794,
											"end": 813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 794,
											"end": 813,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 642,
											"end": 820,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8554,
											"end": 8748,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 8554,
											"end": 8748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "PUSH",
											"source": 2,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "PUSH",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "PUSH",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8673,
											"end": 8741,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8673,
											"end": 8741,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8673,
											"end": 8741,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8673,
											"end": 8741,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8673,
											"end": 8741,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8673,
											"end": 8741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8554,
											"end": 8748,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5787,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6704,
											"end": 6770,
											"name": "PUSH",
											"source": 2,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6691,
											"end": 6770,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6691,
											"end": 6770,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6687,
											"end": 6848,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6687,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6687,
											"end": 6848,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6802,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6802,
											"end": 6803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6806,
											"end": 6836,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6786,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 6786,
											"end": 6837,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6687,
											"end": 6848,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6687,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6861,
											"end": 6862,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6861,
											"end": 6868,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 6861,
											"end": 6868,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6868,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 6861,
											"end": 6868,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6861,
											"end": 6868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6873,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6879,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 6872,
											"end": 6879,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6877,
											"end": 6879,
											"name": "PUSH",
											"source": 2,
											"value": "1C"
										},
										{
											"begin": 6872,
											"end": 6879,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6879,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 6861,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6857,
											"end": 6957,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6857,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6857,
											"end": 6957,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6911,
											"end": 6912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6915,
											"end": 6945,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6895,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 6895,
											"end": 6946,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6857,
											"end": 6957,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6857,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7051,
											"end": 7065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7078,
											"end": 7082,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7085,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7088,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7090,
											"end": 7091,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7068,
											"end": 7092,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7106,
											"end": 7126,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7106,
											"end": 7126,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7102,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 7102,
											"end": 7203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7158,
											"end": 7159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7162,
											"end": 7191,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7142,
											"end": 7192,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7142,
											"end": 7192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7142,
											"end": 7192,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7142,
											"end": 7192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7142,
											"end": 7192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7142,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 7142,
											"end": 7192,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7102,
											"end": 7203,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 7102,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7221,
											"end": 7227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7229,
											"end": 7249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7229,
											"end": 7249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5654,
											"end": 7257,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 443,
											"end": 1074,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 443,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 520,
											"end": 540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 511,
											"end": 540,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 540,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 511,
											"end": 540,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 511,
											"end": 540,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 511,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 511,
											"end": 540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 511,
											"end": 540,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 511,
											"end": 540,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 511,
											"end": 540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 511,
											"end": 540,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 507,
											"end": 1068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 507,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 507,
											"end": 1068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 556,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 556,
											"end": 563,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 507,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 507,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 607,
											"end": 612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 607,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 645,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 607,
											"end": 645,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 607,
											"end": 645,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 607,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 607,
											"end": 645,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 607,
											"end": 645,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 607,
											"end": 645,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 607,
											"end": 645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 607,
											"end": 645,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 603,
											"end": 1068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 603,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 603,
											"end": 1068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 661,
											"end": 695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "45434453413A20696E76616C6964207369676E61747572650000000000000000"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 661,
											"end": 695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 661,
											"end": 695,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 603,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 603,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 725,
											"end": 760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 716,
											"end": 721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 716,
											"end": 760,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 716,
											"end": 760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 716,
											"end": 760,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 716,
											"end": 760,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 716,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 716,
											"end": 760,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 716,
											"end": 760,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 716,
											"end": 760,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 716,
											"end": 760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 716,
											"end": 760,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 712,
											"end": 1068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 712,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 712,
											"end": 1068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 776,
											"end": 817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 776,
											"end": 817,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 712,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 712,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 847,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 838,
											"end": 843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 838,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 838,
											"end": 877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 838,
											"end": 877,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 838,
											"end": 877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 838,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 838,
											"end": 877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 838,
											"end": 877,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 838,
											"end": 877,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 838,
											"end": 877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 838,
											"end": 877,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 834,
											"end": 1068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH data",
											"source": 2,
											"value": "520D1F787DBCAFBBFC007FD2C4ECF3D2711EC587F3EE9A1215C0B646C3E530BD"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 937,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 834,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 967,
											"end": 997,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 958,
											"end": 963,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 958,
											"end": 997,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 958,
											"end": 997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 958,
											"end": 997,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 958,
											"end": 997,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 958,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 958,
											"end": 997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 958,
											"end": 997,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 958,
											"end": 997,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 958,
											"end": 997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 958,
											"end": 997,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 954,
											"end": 1068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH data",
											"source": 2,
											"value": "8522EE1B53216F595394DB8E80A64D9E7D9BD512C0811C18DEBE9F40858597E4"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1057,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 954,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 954,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 443,
											"end": 1074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 443,
											"end": 1074,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									],
									".data": {
										"35B6BC83DAFB7A2CAF38CEE64B612CE6A24918CE92E23821600BD75C1740717": "6745584f3a20206745584f206973206e6f7420612076616c696420636f6e7472616374",
										"520D1F787DBCAFBBFC007FD2C4ECF3D2711EC587F3EE9A1215C0B646C3E530BD": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
										"8522EE1B53216F595394DB8E80A64D9E7D9BD512C0811C18DEBE9F40858597E4": "45434453413a20696e76616c6964207369676e6174757265202776272076616c7565",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"943A7F2FE776B1DA8F1C593116D1DB5F305D3C06D55576C45BCE8BD0CF858A2E": "496e697469616c697a65723a202063616c6c6572206973206e6f7420696e697469616c697a6572",
										"A5659C1CC908CDAC5D93994075E79B6FACF5D4CB17E30F3636004F4933A19D9C": "5374616b696e67436f6e74726163743a202063616c6c206973206e6f74207374616b696e6720636f6e7472616374"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceForGons(uint256)": "7965d56d",
							"balanceOf(address)": "70a08231",
							"changeDebt(uint256,address,bool)": "ae5c6cd3",
							"circulatingSupply()": "9358928b",
							"debtBalances(address)": "c4ef1c4c",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"fromG(uint256)": "b8fbd533",
							"gEXO()": "2af36b43",
							"gonsForBalance(uint256)": "1bd39674",
							"increaseAllowance(address,uint256)": "39509351",
							"index()": "2986c0e5",
							"initialize(address,address)": "485cc955",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"rebase(uint256,uint256)": "058ecdb4",
							"rebases(uint256)": "73c69eb7",
							"setIndex(uint256)": "40a5737f",
							"setgOHM(address)": "245c0e99",
							"stakingContract()": "ee99205c",
							"symbol()": "95d89b41",
							"toG(uint256)": "095be818",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"treasury()": "61d027b3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rebase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"LogRebase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingContract\",\"type\":\"address\"}],\"name\":\"LogStakingContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"LogSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gons\",\"type\":\"uint256\"}],\"name\":\"balanceForGons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"}],\"name\":\"changeDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"debtBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fromG\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gEXO\",\"outputs\":[{\"internalType\":\"contract IgEXO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"gonsForBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"profit_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"epoch_\",\"type\":\"uint256\"}],\"name\":\"rebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rebases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountRebased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberOccured\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"setIndex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gEXO\",\"type\":\"address\"}],\"name\":\"setgOHM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"toG\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"rebase(uint256,uint256)\":{\"params\":{\"profit_\":\"uint256\"},\"returns\":{\"_0\":\"uint256\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rebase(uint256,uint256)\":{\"notice\":\"increases rOHM supply to increase staking balances relative to profit_\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sExodus/sOlympusERC20.sol\":\"sExodus\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"sExodus/Address.sol\":{\"keccak256\":\"0xc2d8595504a985f53a5db9e6220ae614a7f8b4c5c1d35f55b07e08a21e40b2b9\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1b8104a932321f4f8a89ca5265b7bca5fe9f5e51ccec01470931e5014be87fc9\",\"dweb:/ipfs/Qmb2ta7fADrRuXqjot4reKg63brweMH6jWocx534huYtCc\"]},\"sExodus/Counters.sol\":{\"keccak256\":\"0x2723e1522fb9088bb9ee8d3f20e9f3b04bc38daf127ef1dc624e61a88cbf48de\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b52e187f74d2be83d893b2b47f866878504b14ba04834cb5e3d06219c5ab5673\",\"dweb:/ipfs/QmcYVMhAunHXNU55TGZGkSKATbDCNTgs42u4q5At8NN4Ce\"]},\"sExodus/ECDSA.sol\":{\"keccak256\":\"0x2fb4959d42d1a72b47f3c3c8db1e466d21dbfb33aa445fd6a8c1f1e84ba37cdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10b87bfd64543429c28797a71b78149d9cb93261fc60bdfee25c56c6af886866\",\"dweb:/ipfs/QmVRvnZSbAgSSR8PfZnKSkLFPqqUkxJeS919FvszosQzsV\"]},\"sExodus/EIP712.sol\":{\"keccak256\":\"0x76bfc700bb36030b1e9c73abc9b024eea9632c4538f0eedca7f15ae062b4581c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f5a92ca1f712919f5da7f70fabfa55626f772f6e455510a49b2b55ec0632315\",\"dweb:/ipfs/Qme3YZHzQgeAZ7m8tB9zWdRLopRqNsBppKVj9cpKuAaLBE\"]},\"sExodus/ERC20.sol\":{\"keccak256\":\"0x69e61a22f9d3311cf65421c12af4fd9f22797c0919c71a8c4e3210d4ef1e0978\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://3429dd0834aad2edcce7b0d3e0cf4d10b038034da2b62264f26f508fbde7887c\",\"dweb:/ipfs/QmeACvafiAej3T3CBTaBH8hTSru6pbHdKZU8anMfhGNRqu\"]},\"sExodus/ERC20Permit.sol\":{\"keccak256\":\"0x652e9ebde967277c422d494f1696e735864ea171b04f210f1a9356553b800d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c501477f99535423eeb0617e706d78fa9fd5b50d4cdec4f069a922f1bc4e26\",\"dweb:/ipfs/QmTKQShGC5NYbYfENQ1pKqedGmMdiBXm86SVdykrKwTXF1\"]},\"sExodus/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"sExodus/IERC20Permit.sol\":{\"keccak256\":\"0x681e969fed243296a88805a5c99bc934b6149f0310ce7761a9cbd988f2cc139a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c274384e15d6fe8eeb1eb4a8468162ca96d7135e0714f9ac050883e9dfebb58d\",\"dweb:/ipfs/QmXmafvMmYq6xvWwvKwXSHdmpjYDwYd1CqBjLhRi1qSPxj\"]},\"sExodus/IStaking.sol\":{\"keccak256\":\"0xc5481248b924479a867d252882a1be9573e4aefe3c7816045e1c0c25daacca70\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5a0bf214509dcb8f0f9566918c2038e50e5bd9286a19a914f1ed6fbf2de22b1d\",\"dweb:/ipfs/QmTacgzN9NcR1oHwyWdFV8Kazfzoj8dCaNLVVftt35KnNU\"]},\"sExodus/IgOHM.sol\":{\"keccak256\":\"0x6cac4e5000a7bf84a9fb175f38a3a85fdedf2401cca7c0f0d95e9f88c8929e0d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e313687e3a347191cbb05812b8bf6832ee47019912f066d3e5c68a7b9fc8ea3f\",\"dweb:/ipfs/QmX2si86fKKkP96jmWCc3D2qbLUiT5mN9mw5nL68CUcHwW\"]},\"sExodus/IsOHM.sol\":{\"keccak256\":\"0xe6853333a2d813d8ff0afce244cb92d4e1742a26ae2955d1d2cca221bfd4e675\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9a3dd7d8b7d6421a74b3794e80174f7ee486c1391013c7a557859f75e30229d2\",\"dweb:/ipfs/QmeyMJhtEkL85vGk1e9BRd2AXmfq6Kivm4nTi1NeDTkoDr\"]},\"sExodus/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]},\"sExodus/sOlympusERC20.sol\":{\"keccak256\":\"0xc3d6aff0cfb460472f030f57f16db550260937adbc58eca32b5bda57d9d1a59c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://276b12089ac1f442bb128e47d591239df7ad425f4e408a058b5d494e4c8f7cef\",\"dweb:/ipfs/QmYe1KUro3MDCjKWsC7ksda3ViZou3fFwdtCJ8DCxxfYzN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 918,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 924,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 926,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 928,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 930,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1399,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "_nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Counter)353_storage)"
							},
							{
								"astId": 2132,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "initializer",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2134,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "INDEX",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 2136,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "stakingContract",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 2138,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "gEXO",
								"offset": 0,
								"slot": "9",
								"type": "t_contract(IgEXO)1782"
							},
							{
								"astId": 2141,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "rebases",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_struct(Rebase)2130_storage)dyn_storage"
							},
							{
								"astId": 2172,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "_gonsPerFragment",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 2176,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "_gonBalances",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2182,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "_allowedValue",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2184,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "treasury",
								"offset": 0,
								"slot": "14",
								"type": "t_address"
							},
							{
								"astId": 2189,
								"contract": "sExodus/sOlympusERC20.sol:sExodus",
								"label": "debtBalances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Rebase)2130_storage)dyn_storage": {
								"base": "t_struct(Rebase)2130_storage",
								"encoding": "dynamic_array",
								"label": "struct sExodus.Rebase[]",
								"numberOfBytes": "32"
							},
							"t_contract(IgEXO)1782": {
								"encoding": "inplace",
								"label": "contract IgEXO",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)353_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)353_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)353_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 352,
										"contract": "sExodus/sOlympusERC20.sol:sExodus",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Rebase)2130_storage": {
								"encoding": "inplace",
								"label": "struct sExodus.Rebase",
								"members": [
									{
										"astId": 2117,
										"contract": "sExodus/sOlympusERC20.sol:sExodus",
										"label": "epoch",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2119,
										"contract": "sExodus/sOlympusERC20.sol:sExodus",
										"label": "rebase",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2121,
										"contract": "sExodus/sOlympusERC20.sol:sExodus",
										"label": "totalStakedBefore",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2123,
										"contract": "sExodus/sOlympusERC20.sol:sExodus",
										"label": "totalStakedAfter",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2125,
										"contract": "sExodus/sOlympusERC20.sol:sExodus",
										"label": "amountRebased",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2127,
										"contract": "sExodus/sOlympusERC20.sol:sExodus",
										"label": "index",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2129,
										"contract": "sExodus/sOlympusERC20.sol:sExodus",
										"label": "blockNumberOccured",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"rebase(uint256,uint256)": {
								"notice": "increases rOHM supply to increase staking balances relative to profit_"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"sExodus/Address.sol": {
				"ast": {
					"absolutePath": "sExodus/Address.sol",
					"exportedSymbols": {
						"Address": [
							344
						]
					},
					"id": 345,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 344,
							"linearizedBaseContracts": [
								344
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "766:367:0",
										"statements": [
											{
												"assignments": [
													10
												],
												"declarations": [
													{
														"constant": false,
														"id": 10,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 17,
														"src": "963:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 9,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "963:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"nodeType": "VariableDeclarationStatement",
												"src": "963:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1050:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1064:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1084:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1072:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1072:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1064:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 4,
														"isOffset": false,
														"isSlot": false,
														"src": "1084:7:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "1064:4:0",
														"valueSize": 1
													}
												],
												"id": 12,
												"nodeType": "InlineAssembly",
												"src": "1041:61:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 13,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1118:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1125:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1118:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 16,
												"nodeType": "Return",
												"src": "1111:15:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "130:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 18,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "720:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:17:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "760:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:6:0"
									},
									"scope": 344,
									"src": "700:433:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2121:318:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 29,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2147:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$344",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$344",
																				"typeString": "library Address"
																			}
																		],
																		"id": 28,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2139:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 27,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2139:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2139:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2139:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 32,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "2164:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2139:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2172:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 26,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2131:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2131:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2131:73:0"
											},
											{
												"assignments": [
													38,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 51,
														"src": "2293:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 37,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2293:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 45,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 39,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2311:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2311:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 41,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "2333:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2311:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2311:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2292:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 47,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "2362:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 46,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2354:78:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1139:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2069:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:43:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2121:0:0"
									},
									"scope": 344,
									"src": "2050:389:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3269:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 63,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3299:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 64,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "3307:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3313:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 62,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															69,
															89
														],
														"referencedDeclaration": 89,
														"src": "3286:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3286:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 61,
												"id": 67,
												"nodeType": "Return",
												"src": "3279:67:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2445:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3202:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3218:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:35:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3255:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 59,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:14:0"
									},
									"scope": 344,
									"src": "3180:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "3722:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3762:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 83,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "3770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3776:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 85,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "3779:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 81,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "3739:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 80,
												"id": 87,
												"nodeType": "Return",
												"src": "3732:60:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3359:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3606:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3630:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 73,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3630:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3657:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3657:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3596:93:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3708:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3708:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3707:14:0"
									},
									"scope": 344,
									"src": "3575:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "4304:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4343:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 103,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4351:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 104,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "4357:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4364:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 101,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															159
														],
														"referencedDeclaration": 159,
														"src": "4321:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4321:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 100,
												"id": 107,
												"nodeType": "Return",
												"src": "4314:94:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "3805:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4201:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4225:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 93,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4225:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4252:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4191:80:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4290:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4290:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:14:0"
									},
									"scope": 344,
									"src": "4161:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "5172:380:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 126,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "5198:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$344",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$344",
																				"typeString": "library Address"
																			}
																		],
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5190:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 124,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5190:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5190:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5190:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 129,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5215:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5190:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5222:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5182:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "5182:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 136,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 112,
																	"src": "5292:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 135,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "5281:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5281:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5301:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5273:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5273:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "5273:60:0"
											},
											{
												"assignments": [
													142,
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 158,
														"src": "5404:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 141,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5404:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 158,
														"src": "5418:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 143,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5418:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": {
													"arguments": [
														{
															"id": 149,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "5471:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 145,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "5445:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5445:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 147,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5464:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5445:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5445:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5403:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5511:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 154,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "5520:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 155,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "5532:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 152,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "5493:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5493:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 157,
												"nodeType": "Return",
												"src": "5486:59:0"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "4421:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5033:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5057:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5057:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5084:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5107:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5107:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5023:116:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5158:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5158:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5157:14:0"
									},
									"scope": 344,
									"src": "4993:559:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5740:812:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 174,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "5769:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 173,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "5758:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5758:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5778:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5750:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5750:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "5750:60:0"
											},
											{
												"assignments": [
													180,
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "5881:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 179,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5881:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 182,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "5895:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 181,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5895:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 189,
												"initialValue": {
													"arguments": [
														{
															"id": 187,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5951:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 183,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "5922:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5922:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 185,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "5941:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5922:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5922:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5880:76:0"
											},
											{
												"condition": {
													"id": 190,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 180,
													"src": "5970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 206,
													"nodeType": "Block",
													"src": "6027:519:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 194,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 182,
																		"src": "6111:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6111:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6131:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6111:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 204,
																"nodeType": "Block",
																"src": "6483:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 201,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 167,
																					"src": "6508:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 200,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6501:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6501:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 203,
																		"nodeType": "ExpressionStatement",
																		"src": "6501:20:0"
																	}
																]
															},
															"id": 205,
															"nodeType": "IfStatement",
															"src": "6107:429:0",
															"trueBody": {
																"id": 199,
																"nodeType": "Block",
																"src": "6134:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6318:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6340:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6369:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6363:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6363:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6344:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6412:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6416:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6408:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6408:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6429:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6401:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6401:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6401:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 182,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6369:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 182,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6416:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 198,
																		"nodeType": "InlineAssembly",
																		"src": "6309:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 207,
												"nodeType": "IfStatement",
												"src": "5966:580:0",
												"trueBody": {
													"id": 193,
													"nodeType": "Block",
													"src": "5979:42:0",
													"statements": [
														{
															"expression": {
																"id": 191,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "6000:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 171,
															"id": 192,
															"nodeType": "Return",
															"src": "5993:17:0"
														}
													]
												}
											}
										]
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5623:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5623:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5650:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5676:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5676:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5589:119:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5726:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5726:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5725:14:0"
									},
									"scope": 344,
									"src": "5558:994:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "6829:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6865:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6873:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6879:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 219,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															226,
															261
														],
														"referencedDeclaration": 261,
														"src": "6846:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6846:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 218,
												"id": 224,
												"nodeType": "Return",
												"src": "6839:80:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6558:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6757:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6773:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6773:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:35:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6815:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6815:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6814:14:0"
									},
									"scope": 344,
									"src": "6729:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "7268:288:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 240,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "7297:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 239,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "7286:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7286:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7306:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7278:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7278:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "7278:67:0"
											},
											{
												"assignments": [
													246,
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7416:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7416:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7430:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7430:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [
														{
															"id": 251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7457:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "7457:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7457:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7415:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "7515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 256,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7524:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 257,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7536:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 254,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "7497:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7497:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 237,
												"id": 259,
												"nodeType": "Return",
												"src": "7490:59:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6932:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7147:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7171:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7171:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7198:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7198:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7137:93:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7254:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7254:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7253:14:0"
									},
									"scope": 344,
									"src": "7110:446:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "7832:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 272,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "7870:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "7878:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7884:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 271,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															278,
															313
														],
														"referencedDeclaration": 313,
														"src": "7849:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7849:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "7842:84:0"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "7562:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "7765:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "7781:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7764:35:0"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "7818:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7818:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7817:14:0"
									},
									"scope": 344,
									"src": "7735:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "8274:292:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 292,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "8303:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 291,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "8292:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8292:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8312:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8284:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8284:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "8284:69:0"
											},
											{
												"assignments": [
													298,
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 312,
														"src": "8424:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 297,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8424:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 312,
														"src": "8438:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 299,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8438:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"arguments": [
														{
															"id": 303,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "8485:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 301,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "8465:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "8465:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8465:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8423:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "8525:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 308,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "8534:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 309,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "8546:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 306,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "8507:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8507:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 289,
												"id": 311,
												"nodeType": "Return",
												"src": "8500:59:0"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "7939:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "8158:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "8182:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8182:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "8209:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 284,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8209:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8148:93:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "8260:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8260:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8259:14:0"
									},
									"scope": 344,
									"src": "8119:447:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "8732:596:0",
										"statements": [
											{
												"condition": {
													"id": 324,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "8746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 340,
													"nodeType": "Block",
													"src": "8803:519:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 328,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "8887:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8887:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8907:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8887:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 338,
																"nodeType": "Block",
																"src": "9259:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 335,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 319,
																					"src": "9284:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 334,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "9277:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9277:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 337,
																		"nodeType": "ExpressionStatement",
																		"src": "9277:20:0"
																	}
																]
															},
															"id": 339,
															"nodeType": "IfStatement",
															"src": "8883:429:0",
															"trueBody": {
																"id": 333,
																"nodeType": "Block",
																"src": "8910:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "9094:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "9116:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "9145:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "9139:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9139:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "9120:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9188:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "9192:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9184:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9184:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "9205:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "9177:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9177:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9177:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 317,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "9145:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 317,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "9192:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 332,
																		"nodeType": "InlineAssembly",
																		"src": "9085:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 341,
												"nodeType": "IfStatement",
												"src": "8742:580:0",
												"trueBody": {
													"id": 327,
													"nodeType": "Block",
													"src": "8755:42:0",
													"statements": [
														{
															"expression": {
																"id": 325,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "8776:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 323,
															"id": 326,
															"nodeType": "Return",
															"src": "8769:17:0"
														}
													]
												}
											}
										]
									},
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8608:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8608:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8630:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8630:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8663:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 318,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8663:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8598:97:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8718:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8718:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8717:14:0"
									},
									"scope": 344,
									"src": "8572:756:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 345,
							"src": "108:9222:0"
						}
					],
					"src": "37:9294:0"
				},
				"id": 0
			},
			"sExodus/Counters.sol": {
				"ast": {
					"absolutePath": "sExodus/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							393
						],
						"SafeMath": [
							2070
						]
					},
					"id": 394,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 346,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:1"
						},
						{
							"absolutePath": "sExodus/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 347,
							"nodeType": "ImportDirective",
							"scope": 394,
							"sourceUnit": 2071,
							"src": "62:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 393,
							"linearizedBaseContracts": [
								393
							],
							"name": "Counters",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 350,
									"libraryName": {
										"id": 348,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2070,
										"src": "117:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2070",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "111:27:1",
									"typeName": {
										"id": 349,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "130:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Counters.Counter",
									"id": 353,
									"members": [
										{
											"constant": false,
											"id": 352,
											"mutability": "mutable",
											"name": "_value",
											"nodeType": "VariableDeclaration",
											"scope": 353,
											"src": "483:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 351,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "483:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nodeType": "StructDefinition",
									"scope": 393,
									"src": "144:374:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "598:38:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 360,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "615:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 352,
													"src": "615:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 359,
												"id": 362,
												"nodeType": "Return",
												"src": "608:21:1"
											}
										]
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "541:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 354,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 353,
													"src": "541:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "540:25:1"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "589:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:9:1"
									},
									"scope": 393,
									"src": "524:112:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "695:125:1",
										"statements": [
											{
												"expression": {
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 369,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "794:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 352,
														"src": "794:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "812:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "794:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "794:19:1"
											}
										]
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "661:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 365,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 353,
													"src": "661:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:25:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:0:1"
									},
									"scope": 393,
									"src": "642:178:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "879:55:1",
										"statements": [
											{
												"expression": {
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 381,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "889:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 352,
														"src": "889:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "925:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"expression": {
																	"id": 384,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "906:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 352,
																"src": "906:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1894,
															"src": "906:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "906:21:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "889:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "889:38:1"
											}
										]
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "845:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 377,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 353,
													"src": "845:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:25:1"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:0:1"
									},
									"scope": 393,
									"src": "826:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 394,
							"src": "88:848:1"
						}
					],
					"src": "37:900:1"
				},
				"id": 1
			},
			"sExodus/ECDSA.sol": {
				"ast": {
					"absolutePath": "sExodus/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							753
						]
					},
					"id": 754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 395,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 396,
								"nodeType": "StructuredDocumentation",
								"src": "58:205:2",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 753,
							"linearizedBaseContracts": [
								753
							],
							"name": "ECDSA",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 402,
									"members": [
										{
											"id": 397,
											"name": "NoError",
											"nodeType": "EnumValue",
											"src": "312:7:2"
										},
										{
											"id": 398,
											"name": "InvalidSignature",
											"nodeType": "EnumValue",
											"src": "329:16:2"
										},
										{
											"id": 399,
											"name": "InvalidSignatureLength",
											"nodeType": "EnumValue",
											"src": "355:22:2"
										},
										{
											"id": 400,
											"name": "InvalidSignatureS",
											"nodeType": "EnumValue",
											"src": "387:17:2"
										},
										{
											"id": 401,
											"name": "InvalidSignatureV",
											"nodeType": "EnumValue",
											"src": "414:17:2"
										}
									],
									"name": "RecoverError",
									"nodeType": "EnumDefinition",
									"src": "284:153:2"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "497:577:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$402",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 407,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "511:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$402",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 408,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "520:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$402_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"src": "520:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$402",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "511:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$402",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 413,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "607:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$402",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 414,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "616:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$402_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"src": "616:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$402",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "607:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$402",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 422,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "716:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$402",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 423,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "725:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$402_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"src": "725:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$402",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "716:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$402",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 431,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "838:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$402",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 432,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "847:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$402_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"src": "847:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$402",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "838:39:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_RecoverError_$402",
																		"typeString": "enum ECDSA.RecoverError"
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 440,
																		"name": "error",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "958:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$402",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 441,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "967:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$402_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignatureV",
																		"nodeType": "MemberAccess",
																		"src": "967:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$402",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"src": "958:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 449,
																"nodeType": "IfStatement",
																"src": "954:114:2",
																"trueBody": {
																	"id": 448,
																	"nodeType": "Block",
																	"src": "999:69:2",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "45434453413a20696e76616c6964207369676e6174757265202776272076616c7565",
																						"id": 445,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1020:36:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4",
																							"typeString": "literal_string \"ECDSA: invalid signature 'v' value\""
																						},
																						"value": "ECDSA: invalid signature 'v' value"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4",
																							"typeString": "literal_string \"ECDSA: invalid signature 'v' value\""
																						}
																					],
																					"id": 444,
																					"name": "revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						-19,
																						-19
																					],
																					"referencedDeclaration": -19,
																					"src": "1013:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (string memory) pure"
																					}
																				},
																				"id": 446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1013:44:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 447,
																			"nodeType": "ExpressionStatement",
																			"src": "1013:44:2"
																		}
																	]
																}
															},
															"id": 450,
															"nodeType": "IfStatement",
															"src": "834:234:2",
															"trueBody": {
																"id": 439,
																"nodeType": "Block",
																"src": "879:69:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
																					"id": 436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "900:36:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					},
																					"value": "ECDSA: invalid signature 's' value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					}
																				],
																				"id": 435,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "893:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "893:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 438,
																		"nodeType": "ExpressionStatement",
																		"src": "893:44:2"
																	}
																]
															}
														},
														"id": 451,
														"nodeType": "IfStatement",
														"src": "712:356:2",
														"trueBody": {
															"id": 430,
															"nodeType": "Block",
															"src": "762:66:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																				"id": 427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "783:33:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				},
																				"value": "ECDSA: invalid signature length"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				}
																			],
																			"id": 426,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				-19,
																				-19
																			],
																			"referencedDeclaration": -19,
																			"src": "776:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "776:41:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 429,
																	"nodeType": "ExpressionStatement",
																	"src": "776:41:2"
																}
															]
														}
													},
													"id": 452,
													"nodeType": "IfStatement",
													"src": "603:465:2",
													"trueBody": {
														"id": 421,
														"nodeType": "Block",
														"src": "647:59:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "668:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			},
																			"value": "ECDSA: invalid signature"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			}
																		],
																		"id": 417,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			-19,
																			-19
																		],
																		"referencedDeclaration": -19,
																		"src": "661:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "661:34:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 420,
																"nodeType": "ExpressionStatement",
																"src": "661:34:2"
															}
														]
													}
												},
												"id": 453,
												"nodeType": "IfStatement",
												"src": "507:561:2",
												"trueBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "542:55:2",
													"statements": [
														{
															"functionReturnParameters": 406,
															"id": 411,
															"nodeType": "Return",
															"src": "556:7:2"
														}
													]
												}
											}
										]
									},
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "error",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "464:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$402",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 403,
													"name": "RecoverError",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 402,
													"src": "464:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$402",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:20:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "497:0:2"
									},
									"scope": 753,
									"src": "443:631:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "2242:1175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 467,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2449:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2449:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2469:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2449:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 489,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2931:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2931:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3634",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2951:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "2931:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 515,
														"nodeType": "Block",
														"src": "3330:81:2",
														"statements": [
															{
																"expression": {
																	"components": [
																		{
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 509,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3360:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3352:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 507,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3352:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3352:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		{
																			"expression": {
																				"id": 511,
																				"name": "RecoverError",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 402,
																				"src": "3364:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_RecoverError_$402_$",
																					"typeString": "type(enum ECDSA.RecoverError)"
																				}
																			},
																			"id": 512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "InvalidSignatureLength",
																			"nodeType": "MemberAccess",
																			"src": "3364:35:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_RecoverError_$402",
																				"typeString": "enum ECDSA.RecoverError"
																			}
																		}
																	],
																	"id": 513,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3351:49:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_payable_$_t_enum$_RecoverError_$402_$",
																		"typeString": "tuple(address payable,enum ECDSA.RecoverError)"
																	}
																},
																"functionReturnParameters": 466,
																"id": 514,
																"nodeType": "Return",
																"src": "3344:56:2"
															}
														]
													},
													"id": 516,
													"nodeType": "IfStatement",
													"src": "2927:484:2",
													"trueBody": {
														"id": 506,
														"nodeType": "Block",
														"src": "2955:369:2",
														"statements": [
															{
																"assignments": [
																	494
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 494,
																		"mutability": "mutable",
																		"name": "r",
																		"nodeType": "VariableDeclaration",
																		"scope": 506,
																		"src": "2969:9:2",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"typeName": {
																			"id": 493,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2969:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 495,
																"nodeType": "VariableDeclarationStatement",
																"src": "2969:9:2"
															},
															{
																"assignments": [
																	497
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 497,
																		"mutability": "mutable",
																		"name": "vs",
																		"nodeType": "VariableDeclaration",
																		"scope": 506,
																		"src": "2992:10:2",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"typeName": {
																			"id": 496,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2992:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 498,
																"nodeType": "VariableDeclarationStatement",
																"src": "2992:10:2"
															},
															{
																"AST": {
																	"nodeType": "YulBlock",
																	"src": "3156:114:2",
																	"statements": [
																		{
																			"nodeType": "YulAssignment",
																			"src": "3174:32:2",
																			"value": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "signature",
																								"nodeType": "YulIdentifier",
																								"src": "3189:9:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3200:4:2",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3185:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3185:20:2"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3179:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:27:2"
																			},
																			"variableNames": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "3174:1:2"
																				}
																			]
																		},
																		{
																			"nodeType": "YulAssignment",
																			"src": "3223:33:2",
																			"value": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "signature",
																								"nodeType": "YulIdentifier",
																								"src": "3239:9:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3250:4:2",
																								"type": "",
																								"value": "0x40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3235:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3235:20:2"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3229:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3229:27:2"
																			},
																			"variableNames": [
																				{
																					"name": "vs",
																					"nodeType": "YulIdentifier",
																					"src": "3223:2:2"
																				}
																			]
																		}
																	]
																},
																"evmVersion": "istanbul",
																"externalReferences": [
																	{
																		"declaration": 494,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "3174:1:2",
																		"valueSize": 1
																	},
																	{
																		"declaration": 460,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "3189:9:2",
																		"valueSize": 1
																	},
																	{
																		"declaration": 460,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "3239:9:2",
																		"valueSize": 1
																	},
																	{
																		"declaration": 497,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "3223:2:2",
																		"valueSize": 1
																	}
																],
																"id": 499,
																"nodeType": "InlineAssembly",
																"src": "3147:123:2"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 501,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "3301:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 502,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 494,
																			"src": "3307:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 503,
																			"name": "vs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "3310:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 500,
																		"name": "tryRecover",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			519,
																			574,
																			683
																		],
																		"referencedDeclaration": 574,
																		"src": "3290:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$402_$",
																			"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3290:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$402_$",
																		"typeString": "tuple(address,enum ECDSA.RecoverError)"
																	}
																},
																"functionReturnParameters": 466,
																"id": 505,
																"nodeType": "Return",
																"src": "3283:30:2"
															}
														]
													}
												},
												"id": 517,
												"nodeType": "IfStatement",
												"src": "2445:966:2",
												"trueBody": {
													"id": 488,
													"nodeType": "Block",
													"src": "2473:448:2",
													"statements": [
														{
															"assignments": [
																472
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 472,
																	"mutability": "mutable",
																	"name": "r",
																	"nodeType": "VariableDeclaration",
																	"scope": 488,
																	"src": "2487:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 471,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2487:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 473,
															"nodeType": "VariableDeclarationStatement",
															"src": "2487:9:2"
														},
														{
															"assignments": [
																475
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 475,
																	"mutability": "mutable",
																	"name": "s",
																	"nodeType": "VariableDeclaration",
																	"scope": 488,
																	"src": "2510:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 474,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2510:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 476,
															"nodeType": "VariableDeclarationStatement",
															"src": "2510:9:2"
														},
														{
															"assignments": [
																478
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 478,
																	"mutability": "mutable",
																	"name": "v",
																	"nodeType": "VariableDeclaration",
																	"scope": 488,
																	"src": "2533:7:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 477,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2533:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 479,
															"nodeType": "VariableDeclarationStatement",
															"src": "2533:7:2"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2694:171:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2712:32:2",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2727:9:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2738:4:2",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2723:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2723:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2717:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2717:27:2"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "2712:1:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2761:32:2",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2776:9:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2787:4:2",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2772:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2772:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2766:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2766:27:2"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "2761:1:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2810:41:2",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2820:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "2833:9:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2844:4:2",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2829:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2829:20:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2823:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2823:27:2"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "2815:4:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2815:36:2"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "2810:1:2"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 472,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2712:1:2",
																	"valueSize": 1
																},
																{
																	"declaration": 475,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2761:1:2",
																	"valueSize": 1
																},
																{
																	"declaration": 460,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2727:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 460,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2776:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 460,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2833:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 478,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2810:1:2",
																	"valueSize": 1
																}
															],
															"id": 480,
															"nodeType": "InlineAssembly",
															"src": "2685:180:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 482,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "2896:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 483,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "2902:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 484,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 472,
																		"src": "2905:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 485,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 475,
																		"src": "2908:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 481,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		519,
																		574,
																		683
																	],
																	"referencedDeclaration": 683,
																	"src": "2885:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$402_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2885:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$402_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 466,
															"id": 487,
															"nodeType": "Return",
															"src": "2878:32:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "1080:1053:2",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "2158:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 457,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "2172:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 459,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2172:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2157:38:2"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "2219:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "2228:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$402",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 464,
													"name": "RecoverError",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 402,
													"src": "2228:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$402",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2218:23:2"
									},
									"scope": 753,
									"src": "2138:1279:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "4290:140:2",
										"statements": [
											{
												"assignments": [
													530,
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "recovered",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "4301:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 529,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4301:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "error",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "4320:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$402",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 531,
															"name": "RecoverError",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 402,
															"src": "4320:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$402",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"id": 534,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4353:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 535,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "4359:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 533,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															519,
															574,
															683
														],
														"referencedDeclaration": 519,
														"src": "4342:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$402_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4342:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$402_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4300:69:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "4391:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$402",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$402",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 538,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "4379:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$402_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4379:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "4379:18:2"
											},
											{
												"expression": {
													"id": 542,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 530,
													"src": "4414:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 528,
												"id": 543,
												"nodeType": "Return",
												"src": "4407:16:2"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "3423:775:2",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
									},
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "4220:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 521,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4220:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "signature",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "4234:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 523,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4219:38:2"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "4281:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4281:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4280:9:2"
									},
									"scope": 753,
									"src": "4203:227:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "4817:246:2",
										"statements": [
											{
												"assignments": [
													560
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "s",
														"nodeType": "VariableDeclaration",
														"scope": 573,
														"src": "4827:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 559,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4827:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 561,
												"nodeType": "VariableDeclarationStatement",
												"src": "4827:9:2"
											},
											{
												"assignments": [
													563
												],
												"declarations": [
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "v",
														"nodeType": "VariableDeclaration",
														"scope": 573,
														"src": "4846:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 562,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4846:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 564,
												"nodeType": "VariableDeclarationStatement",
												"src": "4846:7:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4872:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4886:80:2",
															"value": {
																"arguments": [
																	{
																		"name": "vs",
																		"nodeType": "YulIdentifier",
																		"src": "4895:2:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4899:66:2",
																		"type": "",
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4891:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4891:75:2"
															},
															"variableNames": [
																{
																	"name": "s",
																	"nodeType": "YulIdentifier",
																	"src": "4886:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4979:26:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4992:3:2",
																				"type": "",
																				"value": "255"
																			},
																			{
																				"name": "vs",
																				"nodeType": "YulIdentifier",
																				"src": "4997:2:2"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "4988:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4988:12:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5002:2:2",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4984:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4984:21:2"
															},
															"variableNames": [
																{
																	"name": "v",
																	"nodeType": "YulIdentifier",
																	"src": "4979:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 560,
														"isOffset": false,
														"isSlot": false,
														"src": "4886:1:2",
														"valueSize": 1
													},
													{
														"declaration": 563,
														"isOffset": false,
														"isSlot": false,
														"src": "4979:1:2",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "4895:2:2",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "4997:2:2",
														"valueSize": 1
													}
												],
												"id": 565,
												"nodeType": "InlineAssembly",
												"src": "4863:152:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 567,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "5042:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 568,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "5048:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 569,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5051:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 570,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "5054:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 566,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															519,
															574,
															683
														],
														"referencedDeclaration": 683,
														"src": "5031:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$402_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5031:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$402_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 558,
												"id": 572,
												"nodeType": "Return",
												"src": "5024:32:2"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "4436:243:2",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "4713:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 547,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4713:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "4735:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 549,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "vs",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "4754:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 551,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4754:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4703:67:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "4794:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4794:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "4803:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$402",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 556,
													"name": "RecoverError",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 402,
													"src": "4803:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$402",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4793:23:2"
									},
									"scope": 753,
									"src": "4684:379:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "5344:136:2",
										"statements": [
											{
												"assignments": [
													587,
													589
												],
												"declarations": [
													{
														"constant": false,
														"id": 587,
														"mutability": "mutable",
														"name": "recovered",
														"nodeType": "VariableDeclaration",
														"scope": 602,
														"src": "5355:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 586,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5355:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 589,
														"mutability": "mutable",
														"name": "error",
														"nodeType": "VariableDeclaration",
														"scope": 602,
														"src": "5374:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$402",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 588,
															"name": "RecoverError",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 402,
															"src": "5374:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$402",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 595,
												"initialValue": {
													"arguments": [
														{
															"id": 591,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "5407:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 592,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5413:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 593,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "5416:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 590,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															519,
															574,
															683
														],
														"referencedDeclaration": 574,
														"src": "5396:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$402_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5396:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$402_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5354:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 597,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "5441:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$402",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$402",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 596,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "5429:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$402_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5429:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "5429:18:2"
											},
											{
												"expression": {
													"id": 600,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 587,
													"src": "5464:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 585,
												"id": 601,
												"nodeType": "Return",
												"src": "5457:16:2"
											}
										]
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "5069:154:2",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "5254:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 576,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5254:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "5276:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 578,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5276:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "vs",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "5295:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 580,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5295:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5244:67:2"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "5335:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5335:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5334:9:2"
									},
									"scope": 753,
									"src": "5228:252:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "5803:1454:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 621,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "6699:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6691:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 619,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6691:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6691:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6704:66:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6691:79:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 634,
												"nodeType": "IfStatement",
												"src": "6687:161:2",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "6772:76:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6802:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6794:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 625,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6794:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6794:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"expression": {
																			"id": 629,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "6806:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$402_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"src": "6806:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$402",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 631,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_payable_$_t_enum$_RecoverError_$402_$",
																	"typeString": "tuple(address payable,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 618,
															"id": 632,
															"nodeType": "Return",
															"src": "6786:51:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 635,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "6861:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "3237",
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6866:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_27_by_1",
																"typeString": "int_const 27"
															},
															"value": "27"
														},
														"src": "6861:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 638,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "6872:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "3238",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6877:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_28_by_1",
																"typeString": "int_const 28"
															},
															"value": "28"
														},
														"src": "6872:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6861:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "6857:100:2",
												"trueBody": {
													"id": 650,
													"nodeType": "Block",
													"src": "6881:76:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6911:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6903:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 642,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6903:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6903:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"expression": {
																			"id": 646,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "6915:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$402_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignatureV",
																		"nodeType": "MemberAccess",
																		"src": "6915:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$402",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 648,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6902:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_payable_$_t_enum$_RecoverError_$402_$",
																	"typeString": "tuple(address payable,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 618,
															"id": 649,
															"nodeType": "Return",
															"src": "6895:51:2"
														}
													]
												}
											},
											{
												"assignments": [
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "7051:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 652,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7051:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 660,
												"initialValue": {
													"arguments": [
														{
															"id": 655,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7078:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 656,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "7084:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 657,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "7087:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 658,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "7090:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 654,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "7068:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7051:41:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 661,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "7106:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7124:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7116:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 662,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7116:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7116:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "7106:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 676,
												"nodeType": "IfStatement",
												"src": "7102:101:2",
												"trueBody": {
													"id": 675,
													"nodeType": "Block",
													"src": "7128:75:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7158:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7150:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 667,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7150:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7150:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"expression": {
																			"id": 671,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "7162:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$402_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"src": "7162:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$402",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 673,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7149:43:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_payable_$_t_enum$_RecoverError_$402_$",
																	"typeString": "tuple(address payable,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 618,
															"id": 674,
															"nodeType": "Return",
															"src": "7142:50:2"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 677,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "7221:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 678,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "7229:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$402_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"src": "7229:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$402",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"id": 680,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7220:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$402_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 618,
												"id": 681,
												"nodeType": "Return",
												"src": "7213:37:2"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "5486:163:2",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5683:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 605,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5705:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 607,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5705:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5722:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 609,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5722:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5741:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 611,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5741:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5673:83:2"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5780:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5780:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5789:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$402",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 616,
													"name": "RecoverError",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 402,
													"src": "5789:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$402",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5779:23:2"
									},
									"scope": 753,
									"src": "5654:1603:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "7522:138:2",
										"statements": [
											{
												"assignments": [
													698,
													700
												],
												"declarations": [
													{
														"constant": false,
														"id": 698,
														"mutability": "mutable",
														"name": "recovered",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "7533:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 697,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7533:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 700,
														"mutability": "mutable",
														"name": "error",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "7552:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$402",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 699,
															"name": "RecoverError",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 402,
															"src": "7552:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$402",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"initialValue": {
													"arguments": [
														{
															"id": 702,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "7585:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 703,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "7591:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 704,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "7594:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 705,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "7597:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 701,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															519,
															574,
															683
														],
														"referencedDeclaration": 683,
														"src": "7574:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$402_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7574:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$402_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7532:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 709,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "7621:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$402",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$402",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 708,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "7609:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$402_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7609:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "7609:18:2"
											},
											{
												"expression": {
													"id": 712,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 698,
													"src": "7644:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 696,
												"id": 713,
												"nodeType": "Return",
												"src": "7637:16:2"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "7263:122:2",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "7416:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 685,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7416:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "7438:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 687,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7438:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "7455:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 689,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7455:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "7474:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 691,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7474:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7406:83:2"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "7513:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7513:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7512:9:2"
									},
									"scope": 753,
									"src": "7390:270:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "8028:187:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8166:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 727,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "8202:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 724,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "8149:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8149:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 723,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "8139:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8139:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 722,
												"id": 730,
												"nodeType": "Return",
												"src": "8132:76:2"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "7666:279:2",
										"text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "7982:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7981:14:2"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "8019:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 720,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8019:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8018:9:2"
									},
									"scope": 753,
									"src": "7950:265:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "8656:92:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 746,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "8712:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 747,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "8729:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "8683:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8683:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8683:57:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 742,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "8673:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8673:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 741,
												"id": 750,
												"nodeType": "Return",
												"src": "8666:75:2"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "8221:328:2",
										"text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "8579:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 734,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8579:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "structHash",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "8604:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 736,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8604:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8578:45:2"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "8647:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 739,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:9:2"
									},
									"scope": 753,
									"src": "8554:194:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 754,
							"src": "264:8486:2"
						}
					],
					"src": "33:8718:2"
				},
				"id": 2
			},
			"sExodus/EIP712.sol": {
				"ast": {
					"absolutePath": "sExodus/EIP712.sol",
					"exportedSymbols": {
						"ECDSA": [
							753
						],
						"EIP712": [
							900
						]
					},
					"id": 901,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 755,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "sExodus/ECDSA.sol",
							"file": "./ECDSA.sol",
							"id": 756,
							"nodeType": "ImportDirective",
							"scope": 901,
							"sourceUnit": 754,
							"src": "58:21:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 757,
								"nodeType": "StructuredDocumentation",
								"src": "81:1142:3",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 900,
							"linearizedBaseContracts": [
								900
							],
							"name": "EIP712",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 759,
									"mutability": "immutable",
									"name": "_CACHED_DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 900,
									"src": "1492:50:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 758,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1492:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 761,
									"mutability": "immutable",
									"name": "_CACHED_CHAIN_ID",
									"nodeType": "VariableDeclaration",
									"scope": 900,
									"src": "1548:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 760,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1548:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 763,
									"mutability": "immutable",
									"name": "_HASHED_NAME",
									"nodeType": "VariableDeclaration",
									"scope": 900,
									"src": "1597:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 762,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1597:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 765,
									"mutability": "immutable",
									"name": "_HASHED_VERSION",
									"nodeType": "VariableDeclaration",
									"scope": 900,
									"src": "1641:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 764,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1641:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 767,
									"mutability": "immutable",
									"name": "_TYPE_HASH",
									"nodeType": "VariableDeclaration",
									"scope": 900,
									"src": "1688:36:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 766,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1688:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "2395:591:3",
										"statements": [
											{
												"assignments": [
													776
												],
												"declarations": [
													{
														"constant": false,
														"id": 776,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 827,
														"src": "2405:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 775,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2405:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"nodeType": "VariableDeclarationStatement",
												"src": "2405:15:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2439:44:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2453:20:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "2464:7:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2464:9:3"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "2453:7:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 776,
														"isOffset": false,
														"isSlot": false,
														"src": "2453:7:3",
														"valueSize": 1
													}
												],
												"id": 778,
												"nodeType": "InlineAssembly",
												"src": "2430:53:3"
											},
											{
												"assignments": [
													780
												],
												"declarations": [
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "hashedName",
														"nodeType": "VariableDeclaration",
														"scope": 827,
														"src": "2493:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 779,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2493:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 784,
																	"name": "name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "2530:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2524:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 782,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2524:5:3",
																	"typeDescriptions": {}
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2524:11:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 781,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "2514:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2514:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2493:43:3"
											},
											{
												"assignments": [
													789
												],
												"declarations": [
													{
														"constant": false,
														"id": 789,
														"mutability": "mutable",
														"name": "hashedVersion",
														"nodeType": "VariableDeclaration",
														"scope": 827,
														"src": "2546:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 788,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2546:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 793,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "2586:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2580:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 791,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2580:5:3",
																	"typeDescriptions": {}
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2580:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 790,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "2570:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2570:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2546:49:3"
											},
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "typeHash",
														"nodeType": "VariableDeclaration",
														"scope": 827,
														"src": "2605:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 797,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2605:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 802,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2647:84:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
															},
															"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
															}
														],
														"id": 799,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "2624:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:117:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2605:136:3"
											},
											{
												"expression": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 803,
														"name": "_HASHED_NAME",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "2751:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 804,
														"name": "hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "2766:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2751:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "2751:25:3"
											},
											{
												"expression": {
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 807,
														"name": "_HASHED_VERSION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "2786:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 808,
														"name": "hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "2804:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2786:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "2786:31:3"
											},
											{
												"expression": {
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 811,
														"name": "_CACHED_CHAIN_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "2827:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 812,
														"name": "chainID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "2846:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2827:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "2827:26:3"
											},
											{
												"expression": {
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 815,
														"name": "_CACHED_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "2863:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 817,
																"name": "typeHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "2912:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 818,
																"name": "hashedName",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "2922:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 819,
																"name": "hashedVersion",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "2934:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 816,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "2890:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32,bytes32,bytes32) view returns (bytes32)"
															}
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2890:58:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2863:85:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "2863:85:3"
											},
											{
												"expression": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 823,
														"name": "_TYPE_HASH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "2958:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 824,
														"name": "typeHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "2971:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2958:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "2958:21:3"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "1776:559:3",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 828,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2352:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 769,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2352:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "version",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2372:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2372:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2351:43:3"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2395:0:3"
									},
									"scope": 900,
									"src": "2340:646:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "3134:295:3",
										"statements": [
											{
												"assignments": [
													835
												],
												"declarations": [
													{
														"constant": false,
														"id": 835,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 852,
														"src": "3144:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 834,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3144:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 836,
												"nodeType": "VariableDeclarationStatement",
												"src": "3144:15:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3178:44:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3192:20:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "3203:7:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3203:9:3"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "3192:7:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 835,
														"isOffset": false,
														"isSlot": false,
														"src": "3192:7:3",
														"valueSize": 1
													}
												],
												"id": 837,
												"nodeType": "InlineAssembly",
												"src": "3169:53:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 838,
														"name": "chainID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "3236:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 839,
														"name": "_CACHED_CHAIN_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "3247:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3236:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "3327:96:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 845,
																		"name": "_TYPE_HASH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "3370:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 846,
																		"name": "_HASHED_NAME",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "3382:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 847,
																		"name": "_HASHED_VERSION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "3396:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 844,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "3348:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																		"typeString": "function (bytes32,bytes32,bytes32) view returns (bytes32)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3348:64:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 833,
															"id": 849,
															"nodeType": "Return",
															"src": "3341:71:3"
														}
													]
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "3232:191:3",
												"trueBody": {
													"id": 843,
													"nodeType": "Block",
													"src": "3265:56:3",
													"statements": [
														{
															"expression": {
																"id": 841,
																"name": "_CACHED_DOMAIN_SEPARATOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "3286:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 833,
															"id": 842,
															"nodeType": "Return",
															"src": "3279:31:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "2992:75:3",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3099:2:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "3125:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 831,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3124:9:3"
									},
									"scope": 900,
									"src": "3072:357:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "3584:190:3",
										"statements": [
											{
												"assignments": [
													865
												],
												"declarations": [
													{
														"constant": false,
														"id": 865,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 882,
														"src": "3594:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 864,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3594:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 866,
												"nodeType": "VariableDeclarationStatement",
												"src": "3594:15:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3628:44:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3642:20:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "3653:7:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3653:9:3"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "3642:7:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 865,
														"isOffset": false,
														"isSlot": false,
														"src": "3642:7:3",
														"valueSize": 1
													}
												],
												"id": 867,
												"nodeType": "InlineAssembly",
												"src": "3619:53:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 871,
																	"name": "typeHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "3710:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 872,
																	"name": "nameHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "3720:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 873,
																	"name": "versionHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "3730:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 874,
																	"name": "chainID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "3743:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 877,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "3760:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$900",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$900",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3752:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 875,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3752:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3752:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 869,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "3699:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "3699:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3699:67:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 868,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "3689:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3689:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 863,
												"id": 881,
												"nodeType": "Return",
												"src": "3682:85:3"
											}
										]
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "typeHash",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "3475:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 854,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "nameHash",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "3501:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 856,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "versionHash",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "3527:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 858,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3527:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3465:87:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "3575:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 861,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3575:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3574:9:3"
									},
									"scope": 900,
									"src": "3435:339:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "4485:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 893,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "4524:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4524:20:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 895,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "4546:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 891,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "4502:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$753_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 752,
														"src": "4502:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4502:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 890,
												"id": 897,
												"nodeType": "Return",
												"src": "4495:62:3"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "3780:614:3",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "structHash",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "4425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 885,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4425:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4424:20:3"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "4476:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 888,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4476:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4475:9:3"
									},
									"scope": 900,
									"src": "4399:165:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 901,
							"src": "1224:3342:3"
						}
					],
					"src": "33:4534:3"
				},
				"id": 3
			},
			"sExodus/ERC20.sol": {
				"ast": {
					"absolutePath": "sExodus/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							1378
						],
						"IERC20": [
							1613
						],
						"SafeMath": [
							2070
						]
					},
					"id": 1379,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 902,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:4"
						},
						{
							"absolutePath": "sExodus/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 903,
							"nodeType": "ImportDirective",
							"scope": 1379,
							"sourceUnit": 2071,
							"src": "72:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sExodus/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 904,
							"nodeType": "ImportDirective",
							"scope": 1379,
							"sourceUnit": 1614,
							"src": "98:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 905,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1613,
										"src": "149:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1613",
											"typeString": "contract IERC20"
										}
									},
									"id": 906,
									"nodeType": "InheritanceSpecifier",
									"src": "149:6:4"
								}
							],
							"contractDependencies": [
								1613
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1378,
							"linearizedBaseContracts": [
								1378,
								1613
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 909,
									"libraryName": {
										"id": 907,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2070,
										"src": "168:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2070",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "162:27:4",
									"typeName": {
										"id": 908,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "181:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 914,
									"mutability": "constant",
									"name": "ERC20TOKEN_ERC1820_INTERFACE_ID",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "234:82:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 910,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "234:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4552433230546f6b656e",
												"id": 912,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "303:12:4",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												},
												"value": "ERC20Token"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												}
											],
											"id": 911,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "293:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 913,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "293:23:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 918,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "323:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 917,
										"keyType": {
											"id": 915,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "331:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "323:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 916,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "342:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 924,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "376:68:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 923,
										"keyType": {
											"id": 919,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "384:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "376:47:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 922,
											"keyType": {
												"id": 920,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "403:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "395:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 921,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "414:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 926,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "451:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 925,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 928,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "487:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 927,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "487:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 930,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "515:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 929,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "515:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 932,
									"mutability": "immutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "545:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 931,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "545:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "689:88:4",
										"statements": [
											{
												"expression": {
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 941,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "699:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 942,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "707:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "699:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "699:13:4"
											},
											{
												"expression": {
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 945,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "722:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 946,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "732:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "722:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "722:17:4"
											},
											{
												"expression": {
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 949,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "749:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 950,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "761:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "749:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "749:21:4"
											}
										]
									},
									"id": 954,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "607:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "607:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 935,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "636:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "667:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 937,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "667:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:91:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:4"
									},
									"scope": 1378,
									"src": "586:191:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "835:29:4",
										"statements": [
											{
												"expression": {
													"id": 959,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 928,
													"src": "852:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 958,
												"id": 960,
												"nodeType": "Return",
												"src": "845:12:4"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "820:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 956,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "820:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:15:4"
									},
									"scope": 1378,
									"src": "783:81:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "924:31:4",
										"statements": [
											{
												"expression": {
													"id": 967,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "941:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 966,
												"id": 968,
												"nodeType": "Return",
												"src": "934:14:4"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:2:4"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "909:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 964,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "909:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:15:4"
									},
									"scope": 1378,
									"src": "870:85:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "1017:33:4",
										"statements": [
											{
												"expression": {
													"id": 975,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 932,
													"src": "1034:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 974,
												"id": 976,
												"nodeType": "Return",
												"src": "1027:16:4"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:2:4"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "1010:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 972,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1010:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:7:4"
									},
									"scope": 1378,
									"src": "961:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1551
									],
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "1118:36:4",
										"statements": [
											{
												"expression": {
													"id": 984,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 926,
													"src": "1135:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 983,
												"id": 985,
												"nodeType": "Return",
												"src": "1128:19:4"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 980,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1091:8:4"
									},
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:2:4"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1109:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:9:4"
									},
									"scope": 1378,
									"src": "1056:98:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1558
									],
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "1243:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 995,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "1260:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 997,
													"indexExpression": {
														"id": 996,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "1270:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1260:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 994,
												"id": 998,
												"nodeType": "Return",
												"src": "1253:25:4"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 991,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1216:8:4"
									},
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "1179:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:17:4"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "1234:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:9:4"
									},
									"scope": 1378,
									"src": "1160:125:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1567
									],
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "1383:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1011,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1403:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1403:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1013,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1415:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "1426:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1010,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "1393:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "1393:40:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1450:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1009,
												"id": 1018,
												"nodeType": "Return",
												"src": "1443:11:4"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1006,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1359:8:4"
									},
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1309:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1328:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:35:4"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1007,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:6:4"
									},
									"scope": 1378,
									"src": "1291:170:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1576
									],
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "1565:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1030,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "1582:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1032,
														"indexExpression": {
															"id": 1031,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "1594:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1582:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1034,
													"indexExpression": {
														"id": 1033,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "1601:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1582:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1029,
												"id": 1035,
												"nodeType": "Return",
												"src": "1575:34:4"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1026,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1538:8:4"
									},
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "1486:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "1501:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:32:4"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "1556:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:9:4"
									},
									"scope": 1378,
									"src": "1467:149:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1585
									],
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "1711:75:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1048,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1730:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1730:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1050,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "1742:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1051,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "1751:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1047,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "1721:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "1721:37:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1775:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1046,
												"id": 1055,
												"nodeType": "Return",
												"src": "1768:11:4"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1043,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1687:8:4"
									},
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1639:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1639:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1656:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1638:33:4"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1705:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1044,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1705:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:6:4"
									},
									"scope": 1378,
									"src": "1622:164:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1596
									],
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "1934:247:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1070,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "1954:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1071,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "1962:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "1973:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1069,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "1944:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1944:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "1944:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "2012:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1077,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2032:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2032:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1086,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "2092:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2100:42:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1079,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 924,
																			"src": "2056:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1081,
																		"indexExpression": {
																			"id": 1080,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1059,
																			"src": "2068:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2056:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1084,
																	"indexExpression": {
																		"expression": {
																			"id": 1082,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "2076:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2076:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2056:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1921,
																"src": "2056:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2056:87:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1075,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "1990:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "1990:163:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2170:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1068,
												"id": 1092,
												"nodeType": "Return",
												"src": "2163:11:4"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1065,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1910:8:4"
									},
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1823:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1847:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1847:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1874:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:81:4"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1928:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1066,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1928:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1927:6:4"
									},
									"scope": 1378,
									"src": "1792:389:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "2281:117:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1104,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2300:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2300:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1106,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "2312:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1114,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "2358:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1107,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 924,
																			"src": "2321:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1110,
																		"indexExpression": {
																			"expression": {
																				"id": 1108,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "2333:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2333:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2321:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1112,
																	"indexExpression": {
																		"id": 1111,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "2345:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2321:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1878,
																"src": "2321:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1103,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "2291:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2291:79:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "2291:79:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2387:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1102,
												"id": 1119,
												"nodeType": "Return",
												"src": "2380:11:4"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "2214:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "2231:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:37:4"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "2275:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1100,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2275:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2274:6:4"
									},
									"scope": 1378,
									"src": "2187:211:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "2503:209:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1131,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2535:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2535:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1133,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "2559:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1141,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "2617:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2634:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1134,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 924,
																			"src": "2580:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1137,
																		"indexExpression": {
																			"expression": {
																				"id": 1135,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "2592:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2592:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2580:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1139,
																	"indexExpression": {
																		"id": 1138,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "2604:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2580:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1921,
																"src": "2580:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2580:94:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1130,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "2513:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2513:171:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "2513:171:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2701:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1129,
												"id": 1147,
												"nodeType": "Return",
												"src": "2694:11:4"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2431:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2448:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:42:4"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2497:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2497:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:6:4"
									},
									"scope": 1378,
									"src": "2404:308:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "2835:443:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1159,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "2853:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2871:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2863:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1160,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2863:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2863:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2853:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2875:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2845:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2845:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "2845:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1169,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "2933:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2954:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2946:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1170,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2946:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2946:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2933:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2958:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2925:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2925:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "2925:71:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1179,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "3028:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1180,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "3036:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1181,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "3047:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1178,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "3007:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "3007:47:4"
											},
											{
												"expression": {
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1184,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3065:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1186,
														"indexExpression": {
															"id": 1185,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "3075:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3065:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1191,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "3107:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3115:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1187,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "3085:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1189,
																"indexExpression": {
																	"id": 1188,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "3095:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3085:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1921,
															"src": "3085:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3085:71:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3065:91:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "3065:91:4"
											},
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1196,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3166:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1198,
														"indexExpression": {
															"id": 1197,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "3176:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3166:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1203,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "3214:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1199,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "3189:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1201,
																"indexExpression": {
																	"id": 1200,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "3199:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3189:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1878,
															"src": "3189:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3189:32:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3166:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "3166:55:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1208,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "3245:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1209,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "3253:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1210,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "3264:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1207,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "3236:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3236:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "EmitStatement",
												"src": "3231:40:4"
											}
										]
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "2746:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "2770:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "2797:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:81:4"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2835:0:4"
									},
									"scope": 1378,
									"src": "2718:560:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "3349:303:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1222,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "3367:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3386:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3378:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1223,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3378:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3378:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3367:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3390:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3359:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3359:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "3359:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3463:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3455:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1232,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3455:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3455:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1236,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "3467:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1237,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "3476:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1231,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "3434:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3434:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "3434:49:4"
											},
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1240,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "3493:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1243,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "3525:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1241,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "3508:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1878,
															"src": "3508:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3493:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "3493:39:4"
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1247,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3542:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1249,
														"indexExpression": {
															"id": 1248,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "3552:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3542:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1254,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "3586:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1250,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "3563:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1252,
																"indexExpression": {
																	"id": 1251,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "3573:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3563:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1878,
															"src": "3563:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3563:30:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3542:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "3542:51:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3625:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3617:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1259,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3617:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3617:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1263,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "3629:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1264,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "3638:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1258,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "3608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3608:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "EmitStatement",
												"src": "3603:42:4"
											}
										]
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "3299:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3299:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "3316:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3298:33:4"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3349:0:4"
									},
									"scope": 1378,
									"src": "3284:368:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "3723:345:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1276,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "3741:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3760:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3752:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1277,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3752:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3752:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3741:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3764:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3733:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "3733:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1286,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "3832:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3849:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3841:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1287,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3841:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3841:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1291,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "3853:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1285,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "3811:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3811:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "3811:49:4"
											},
											{
												"expression": {
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1294,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3871:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1296,
														"indexExpression": {
															"id": 1295,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "3881:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3871:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1301,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "3915:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3923:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1297,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "3892:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1299,
																"indexExpression": {
																	"id": 1298,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "3902:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3892:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1921,
															"src": "3892:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3892:68:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3871:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "3871:89:4"
											},
											{
												"expression": {
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1306,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "3970:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1309,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "4002:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1307,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "3985:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1894,
															"src": "3985:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3985:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3970:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1312,
												"nodeType": "ExpressionStatement",
												"src": "3970:39:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1314,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "4033:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4050:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4042:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1315,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4042:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4042:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1319,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "4054:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1313,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "4024:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4024:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1321,
												"nodeType": "EmitStatement",
												"src": "4019:42:4"
											}
										]
									},
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "3673:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3673:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "3690:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3690:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3672:33:4"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3723:0:4"
									},
									"scope": 1378,
									"src": "3658:410:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "4187:257:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1333,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "4205:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4222:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4214:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1334,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4214:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4214:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4205:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4197:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4197:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1341,
												"nodeType": "ExpressionStatement",
												"src": "4197:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1343,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "4283:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4302:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4294:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1344,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4294:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4294:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4283:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4306:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4275:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4275:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "4275:68:4"
											},
											{
												"expression": {
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1352,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "4354:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1355,
															"indexExpression": {
																"id": 1353,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "4366:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4354:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1356,
														"indexExpression": {
															"id": 1354,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "4373:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4354:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1357,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "4384:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4354:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1359,
												"nodeType": "ExpressionStatement",
												"src": "4354:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1361,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "4414:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1362,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "4421:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1363,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "4430:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1360,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "4405:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4405:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "EmitStatement",
												"src": "4400:37:4"
											}
										]
									},
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "4101:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "4124:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4124:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "4149:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4149:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4091:78:4"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4187:0:4"
									},
									"scope": 1378,
									"src": "4074:370:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "4572:2:4",
										"statements": []
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "from_",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "4489:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4489:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "to_",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "4512:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "4533:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4533:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4479:75:4"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4572:0:4"
									},
									"scope": 1378,
									"src": "4450:124:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1379,
							"src": "122:4454:4"
						}
					],
					"src": "46:4531:4"
				},
				"id": 4
			},
			"sExodus/ERC20Permit.sol": {
				"ast": {
					"absolutePath": "sExodus/ERC20Permit.sol",
					"exportedSymbols": {
						"Counters": [
							393
						],
						"ECDSA": [
							753
						],
						"EIP712": [
							900
						],
						"ERC20": [
							1378
						],
						"ERC20Permit": [
							1544
						],
						"IERC20": [
							1613
						],
						"IERC20Permit": [
							1649
						],
						"SafeMath": [
							2070
						]
					},
					"id": 1545,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1380,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "sExodus/IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 1381,
							"nodeType": "ImportDirective",
							"scope": 1545,
							"sourceUnit": 1650,
							"src": "58:28:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sExodus/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 1382,
							"nodeType": "ImportDirective",
							"scope": 1545,
							"sourceUnit": 1379,
							"src": "87:21:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sExodus/EIP712.sol",
							"file": "./EIP712.sol",
							"id": 1383,
							"nodeType": "ImportDirective",
							"scope": 1545,
							"sourceUnit": 901,
							"src": "109:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sExodus/ECDSA.sol",
							"file": "./ECDSA.sol",
							"id": 1384,
							"nodeType": "ImportDirective",
							"scope": 1545,
							"sourceUnit": 754,
							"src": "132:21:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sExodus/Counters.sol",
							"file": "./Counters.sol",
							"id": 1385,
							"nodeType": "ImportDirective",
							"scope": 1545,
							"sourceUnit": 394,
							"src": "154:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1387,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1378,
										"src": "731:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1378",
											"typeString": "contract ERC20"
										}
									},
									"id": 1388,
									"nodeType": "InheritanceSpecifier",
									"src": "731:5:5"
								},
								{
									"baseName": {
										"id": 1389,
										"name": "IERC20Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1649,
										"src": "738:12:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Permit_$1649",
											"typeString": "contract IERC20Permit"
										}
									},
									"id": 1390,
									"nodeType": "InheritanceSpecifier",
									"src": "738:12:5"
								},
								{
									"baseName": {
										"id": 1391,
										"name": "EIP712",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 900,
										"src": "752:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EIP712_$900",
											"typeString": "contract EIP712"
										}
									},
									"id": 1392,
									"nodeType": "InheritanceSpecifier",
									"src": "752:6:5"
								}
							],
							"contractDependencies": [
								900,
								1378,
								1613,
								1649
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1386,
								"nodeType": "StructuredDocumentation",
								"src": "180:517:5",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"
							},
							"fullyImplemented": false,
							"id": 1544,
							"linearizedBaseContracts": [
								1544,
								900,
								1649,
								1378,
								1613
							],
							"name": "ERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1395,
									"libraryName": {
										"id": 1393,
										"name": "Counters",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 393,
										"src": "771:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Counters_$393",
											"typeString": "library Counters"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "765:36:5",
									"typeName": {
										"id": 1394,
										"name": "Counters.Counter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 353,
										"src": "784:16:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1399,
									"mutability": "mutable",
									"name": "_nonces",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "807:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$353_storage_$",
										"typeString": "mapping(address => struct Counters.Counter)"
									},
									"typeName": {
										"id": 1398,
										"keyType": {
											"id": 1396,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "815:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "807:36:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$353_storage_$",
											"typeString": "mapping(address => struct Counters.Counter)"
										},
										"valueType": {
											"id": 1397,
											"name": "Counters.Counter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 353,
											"src": "826:16:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
												"typeString": "struct Counters.Counter"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1404,
									"mutability": "immutable",
									"name": "_PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "918:148:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1400,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "918:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 1402,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "981:84:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 1401,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "971:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1403,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "971:95:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "1348:2:5",
										"statements": []
									},
									"documentation": {
										"id": 1405,
										"nodeType": "StructuredDocumentation",
										"src": "1073:220:5",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 1415,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1410,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1407,
													"src": "1337:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1343:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 1412,
											"modifierName": {
												"id": 1409,
												"name": "EIP712",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 900,
												"src": "1330:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_EIP712_$900_$",
													"typeString": "type(contract EIP712)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1330:17:5"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "1310:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1406,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1310:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:20:5"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:0:5"
									},
									"scope": 1544,
									"src": "1298:52:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1634
									],
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "1609:428:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1435,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "1627:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1627:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1437,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "1646:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1627:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332305065726d69743a206578706972656420646561646c696e65",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1656:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
																"typeString": "literal_string \"ERC20Permit: expired deadline\""
															},
															"value": "ERC20Permit: expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
																"typeString": "literal_string \"ERC20Permit: expired deadline\""
															}
														],
														"id": 1434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1619:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1619:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "1619:69:5"
											},
											{
												"assignments": [
													1443
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"scope": 1487,
														"src": "1699:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1442,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1699:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1457,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1447,
																	"name": "_PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "1741:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1448,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "1759:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1449,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1420,
																	"src": "1766:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1450,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "1775:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1452,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "1792:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1451,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1543,
																		"src": "1782:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 1453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1782:16:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1454,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "1800:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1445,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1730:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1730:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1730:79:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1444,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "1720:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1720:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1699:111:5"
											},
											{
												"assignments": [
													1459
												],
												"declarations": [
													{
														"constant": false,
														"id": 1459,
														"mutability": "mutable",
														"name": "hash",
														"nodeType": "VariableDeclaration",
														"scope": 1487,
														"src": "1821:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1458,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1821:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1463,
												"initialValue": {
													"arguments": [
														{
															"id": 1461,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "1853:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1460,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "1836:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1836:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1821:43:5"
											},
											{
												"assignments": [
													1465
												],
												"declarations": [
													{
														"constant": false,
														"id": 1465,
														"mutability": "mutable",
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"scope": 1487,
														"src": "1875:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1464,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1875:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1473,
												"initialValue": {
													"arguments": [
														{
															"id": 1468,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "1906:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1469,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "1912:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1470,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "1915:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1471,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "1918:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1466,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "1892:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$753_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 715,
														"src": "1892:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1892:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1875:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1475,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "1938:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1476,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "1948:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1938:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332305065726d69743a20696e76616c6964207369676e6174757265",
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1955:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
																"typeString": "literal_string \"ERC20Permit: invalid signature\""
															},
															"value": "ERC20Permit: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
																"typeString": "literal_string \"ERC20Permit: invalid signature\""
															}
														],
														"id": 1474,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1930:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1930:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "1930:58:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1482,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "2008:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1483,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "2015:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1484,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "2024:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1481,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "1999:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "1999:31:5"
											}
										]
									},
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "1356:50:5",
										"text": " @dev See {IERC20Permit-permit}."
									},
									"functionSelector": "d505accf",
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1432,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1600:8:5"
									},
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1436:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1459:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1484:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1507:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1533:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1425,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1533:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1550:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1427,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1550:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1569:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1429,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1426:158:5"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1609:0:5"
									},
									"scope": 1544,
									"src": "1411:626:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1642
									],
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "2176:48:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1497,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "2193:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$353_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 1499,
															"indexExpression": {
																"id": 1498,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "2201:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2193:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$353_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "2193:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$353_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$353_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2193:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1496,
												"id": 1502,
												"nodeType": "Return",
												"src": "2186:31:5"
											}
										]
									},
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "2043:50:5",
										"text": " @dev See {IERC20Permit-nonces}."
									},
									"functionSelector": "7ecebe00",
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1493,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2149:8:5"
									},
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2114:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:15:5"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2167:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2167:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:9:5"
									},
									"scope": 1544,
									"src": "2098:126:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1648
									],
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "2417:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1511,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "2434:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2434:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1510,
												"id": 1513,
												"nodeType": "Return",
												"src": "2427:27:5"
											}
										]
									},
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "2230:60:5",
										"text": " @dev See {IERC20Permit-DOMAIN_SEPARATOR}."
									},
									"functionSelector": "3644e515",
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1507,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2390:8:5"
									},
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2373:2:5"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "2408:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1508,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:9:5"
									},
									"scope": 1544,
									"src": "2348:113:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1542,
										"nodeType": "Block",
										"src": "2669:126:5",
										"statements": [
											{
												"assignments": [
													1526
												],
												"declarations": [
													{
														"constant": false,
														"id": 1526,
														"mutability": "mutable",
														"name": "nonce",
														"nodeType": "VariableDeclaration",
														"scope": 1542,
														"src": "2679:30:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
															"typeString": "struct Counters.Counter"
														},
														"typeName": {
															"id": 1525,
															"name": "Counters.Counter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 353,
															"src": "2679:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
																"typeString": "struct Counters.Counter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1530,
												"initialValue": {
													"baseExpression": {
														"id": 1527,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "2712:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$353_storage_$",
															"typeString": "mapping(address => struct Counters.Counter storage ref)"
														}
													},
													"id": 1529,
													"indexExpression": {
														"id": 1528,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "2720:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2712:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$353_storage",
														"typeString": "struct Counters.Counter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2679:47:5"
											},
											{
												"expression": {
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1531,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "2736:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1532,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1526,
																"src": "2746:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
																	"typeString": "struct Counters.Counter storage pointer"
																}
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 364,
															"src": "2746:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$353_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$353_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2746:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2736:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "2736:25:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1537,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "2771:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$353_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1539,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "2771:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$353_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$353_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2771:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1541,
												"nodeType": "ExpressionStatement",
												"src": "2771:17:5"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "2467:120:5",
										"text": " @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"
									},
									"id": 1543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "2611:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2610:15:5"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "current",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "2652:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:5"
									},
									"scope": 1544,
									"src": "2592:203:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1545,
							"src": "698:2099:5"
						}
					],
					"src": "32:2766:5"
				},
				"id": 5
			},
			"sExodus/IERC20.sol": {
				"ast": {
					"absolutePath": "sExodus/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1613
						]
					},
					"id": 1614,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1546,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1613,
							"linearizedBaseContracts": [
								1613
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 1551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "106:2:6"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "132:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:9:6"
									},
									"scope": 1613,
									"src": "86:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "166:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "166:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:17:6"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "206:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:6"
									},
									"scope": 1613,
									"src": "147:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "239:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "258:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:35:6"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "292:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "292:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:6:6"
									},
									"scope": 1613,
									"src": "221:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "323:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "338:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:32:6"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "378:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:9:6"
									},
									"scope": 1613,
									"src": "304:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "410:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "427:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:33:6"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "461:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "461:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:6:6"
									},
									"scope": 1613,
									"src": "393:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "504:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "528:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "555:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:81:6"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "594:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1593,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "594:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:6:6"
									},
									"scope": 1613,
									"src": "473:127:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 1604,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "621:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "643:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "663:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:57:6"
									},
									"src": "606:72:6"
								},
								{
									"anonymous": false,
									"id": 1612,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "699:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "722:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "747:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:63:6"
									},
									"src": "684:78:6"
								}
							],
							"scope": 1614,
							"src": "63:701:6"
						}
					],
					"src": "37:728:6"
				},
				"id": 6
			},
			"sExodus/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "sExodus/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							1649
						]
					},
					"id": 1650,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1615,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1616,
								"nodeType": "StructuredDocumentation",
								"src": "58:480:7",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 1649,
							"linearizedBaseContracts": [
								1649
							],
							"name": "IERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "568:794:7",
										"text": " @dev Sets `value` as th xe allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 1634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "1392:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "1415:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "1440:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "1463:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "1489:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1626,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1489:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "1506:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1628,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "1525:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1630,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1525:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:158:7"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1549:0:7"
									},
									"scope": 1649,
									"src": "1367:183:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "1556:294:7",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "1871:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:15:7"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "1909:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1908:9:7"
									},
									"scope": 1649,
									"src": "1855:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "1924:128:7",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2135:2:7"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "2161:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2160:9:7"
									},
									"scope": 1649,
									"src": "2110:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1650,
							"src": "539:1633:7"
						}
					],
					"src": "32:2141:7"
				},
				"id": 7
			},
			"sExodus/IStaking.sol": {
				"ast": {
					"absolutePath": "sExodus/IStaking.sol",
					"exportedSymbols": {
						"IStaking": [
							1736
						]
					},
					"id": 1737,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1651,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1736,
							"linearizedBaseContracts": [
								1736
							],
							"name": "IStaking",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d866c9d8",
									"id": 1664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "112:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "133:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "_rebasing",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "158:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "158:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "_claim",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "182:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1658,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "182:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:97:8"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "218:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "217:9:8"
									},
									"scope": 1736,
									"src": "88:139:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "92fd2daf",
									"id": 1673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "248:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "248:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "_rebasing",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "268:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "268:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:36:8"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "302:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:9:8"
									},
									"scope": 1736,
									"src": "233:78:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f3d86e4a",
									"id": 1678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "forfeit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "333:2:8"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "354:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:9:8"
									},
									"scope": 1736,
									"src": "317:46:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ff9413d8",
									"id": 1681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "toggleLock",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:8"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "399:0:8"
									},
									"scope": 1736,
									"src": "369:31:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "990966d5",
									"id": 1694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "432:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "453:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "_trigger",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "478:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1686,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "478:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "_rebasing",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "501:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1688,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "501:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:99:8"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "540:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:9:8"
									},
									"scope": 1736,
									"src": "406:143:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bf376c7a",
									"id": 1703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wrap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "569:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "582:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:30:8"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "gBalance_",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "617:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:19:8"
									},
									"scope": 1736,
									"src": "555:81:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "39f47693",
									"id": 1712,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unwrap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "658:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "671:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:30:8"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "sBalance_",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "706:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:19:8"
									},
									"scope": 1736,
									"src": "642:83:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "af14052c",
									"id": 1715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "746:2:8"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "757:0:8"
									},
									"scope": 1736,
									"src": "731:27:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2986c0e5",
									"id": 1720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "778:2:8"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "804:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:9:8"
									},
									"scope": 1736,
									"src": "764:49:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8b7afe2e",
									"id": 1725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "contractBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:8"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "869:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:8"
									},
									"scope": 1736,
									"src": "819:59:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "817b1cd2",
									"id": 1730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalStaked",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:2:8"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "930:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:9:8"
									},
									"scope": 1736,
									"src": "884:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "20138641",
									"id": 1735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supplyInWarmup",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:8"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "994:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:9:8"
									},
									"scope": 1736,
									"src": "945:58:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1737,
							"src": "63:942:8"
						}
					],
					"src": "37:969:8"
				},
				"id": 8
			},
			"sExodus/IgOHM.sol": {
				"ast": {
					"absolutePath": "sExodus/IgOHM.sol",
					"exportedSymbols": {
						"IERC20": [
							1613
						],
						"IgEXO": [
							1782
						]
					},
					"id": 1783,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1738,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:9"
						},
						{
							"absolutePath": "sExodus/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1739,
							"nodeType": "ImportDirective",
							"scope": 1783,
							"sourceUnit": 1614,
							"src": "63:22:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1740,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1613,
										"src": "106:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1613",
											"typeString": "contract IERC20"
										}
									},
									"id": 1741,
									"nodeType": "InheritanceSpecifier",
									"src": "106:6:9"
								}
							],
							"contractDependencies": [
								1613
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1782,
							"linearizedBaseContracts": [
								1782,
								1613
							],
							"name": "IgEXO",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 1748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "133:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "146:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "132:30:9"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "171:0:9"
									},
									"scope": 1782,
									"src": "119:53:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dc29fac",
									"id": 1755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "192:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "207:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:32:9"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:0:9"
									},
									"scope": 1782,
									"src": "178:55:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2986c0e5",
									"id": 1760,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "253:2:9"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "279:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "278:9:9"
									},
									"scope": 1782,
									"src": "239:49:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a8248768",
									"id": 1767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "315:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "314:17:9"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "355:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "354:9:9"
									},
									"scope": 1782,
									"src": "294:70:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "66a5236c",
									"id": 1774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "389:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:17:9"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "429:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:9:9"
									},
									"scope": 1782,
									"src": "370:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1068361f",
									"id": 1781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "_staking",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "461:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "_sOHM",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "479:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:33:9"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "502:0:9"
									},
									"scope": 1782,
									"src": "444:59:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1783,
							"src": "87:418:9"
						}
					],
					"src": "37:469:9"
				},
				"id": 9
			},
			"sExodus/IsOHM.sol": {
				"ast": {
					"absolutePath": "sExodus/IsOHM.sol",
					"exportedSymbols": {
						"IERC20": [
							1613
						],
						"IsEXO": [
							1851
						]
					},
					"id": 1852,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1784,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:10"
						},
						{
							"absolutePath": "sExodus/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1785,
							"nodeType": "ImportDirective",
							"scope": 1852,
							"sourceUnit": 1614,
							"src": "63:22:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1786,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1613,
										"src": "106:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1613",
											"typeString": "contract IERC20"
										}
									},
									"id": 1787,
									"nodeType": "InheritanceSpecifier",
									"src": "106:6:10"
								}
							],
							"contractDependencies": [
								1613
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1851,
							"linearizedBaseContracts": [
								1851,
								1613
							],
							"name": "IsEXO",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "058ecdb4",
									"id": 1796,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "ohmProfit_",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "135:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "155:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:36:10"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "189:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:9:10"
									},
									"scope": 1851,
									"src": "119:79:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9358928b",
									"id": 1801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "circulatingSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "230:2:10"
									},
									"returnParameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "256:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "255:9:10"
									},
									"scope": 1851,
									"src": "204:61:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1bd39674",
									"id": 1808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "gonsForBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "295:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:16:10"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "334:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:9:10"
									},
									"scope": 1851,
									"src": "271:72:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7965d56d",
									"id": 1815,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceForGons",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "gons",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "373:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:14:10"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "410:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:9:10"
									},
									"scope": 1851,
									"src": "349:70:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2986c0e5",
									"id": 1820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:2:10"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "465:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:9:10"
									},
									"scope": 1851,
									"src": "425:49:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095be818",
									"id": 1827,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "toG",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "493:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:16:10"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "532:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "531:9:10"
									},
									"scope": 1851,
									"src": "480:61:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b8fbd533",
									"id": 1834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fromG",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "562:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:16:10"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "601:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:9:10"
									},
									"scope": 1851,
									"src": "547:63:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ae5c6cd3",
									"id": 1843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeDebt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "645:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "debtor",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "669:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "add",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "693:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "693:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:72:10"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "716:0:10"
									},
									"scope": 1851,
									"src": "616:101:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c4ef1c4c",
									"id": 1850,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "debtBalances",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "745:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:18:10"
									},
									"returnParameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "786:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "786:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:9:10"
									},
									"scope": 1851,
									"src": "723:72:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1852,
							"src": "87:710:10"
						}
					],
					"src": "37:761:10"
				},
				"id": 10
			},
			"sExodus/SafeMath.sol": {
				"ast": {
					"absolutePath": "sExodus/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2070
						]
					},
					"id": 2071,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1853,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2070,
							"linearizedBaseContracts": [
								2070
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "222:109:11",
										"statements": [
											{
												"assignments": [
													1863
												],
												"declarations": [
													{
														"constant": false,
														"id": 1863,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1877,
														"src": "232:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1862,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "232:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1867,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1864,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "244:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1865,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "248:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "244:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "232:17:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1869,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "267:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1870,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1855,
																"src": "272:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "267:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "275:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "259:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "259:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "259:46:11"
											},
											{
												"expression": {
													"id": 1875,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1863,
													"src": "323:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1861,
												"id": 1876,
												"nodeType": "Return",
												"src": "316:8:11"
											}
										]
									},
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "168:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "179:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:22:11"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "213:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:9:11"
									},
									"scope": 2070,
									"src": "155:176:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "404:67:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1888,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "425:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1889,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "428:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "431:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1887,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1894,
															1921
														],
														"referencedDeclaration": 1921,
														"src": "421:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "421:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1886,
												"id": 1892,
												"nodeType": "Return",
												"src": "414:50:11"
											}
										]
									},
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "350:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "361:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:22:11"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "395:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:9:11"
									},
									"scope": 2070,
									"src": "337:134:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "602:92:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1906,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "620:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1907,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1896,
																"src": "625:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "620:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1909,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "628:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "612:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "612:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1911,
												"nodeType": "ExpressionStatement",
												"src": "612:29:11"
											},
											{
												"assignments": [
													1913
												],
												"declarations": [
													{
														"constant": false,
														"id": 1913,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1920,
														"src": "651:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1912,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "651:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1917,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1914,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "663:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1915,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "667:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "663:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "651:17:11"
											},
											{
												"expression": {
													"id": 1918,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1913,
													"src": "686:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1904,
												"id": 1919,
												"nodeType": "Return",
												"src": "679:8:11"
											}
										]
									},
									"id": 1921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "499:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "518:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "537:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1899,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:80:11"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "593:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:9:11"
									},
									"scope": 2070,
									"src": "477:217:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "767:174:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1930,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "781:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "786:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "781:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1936,
												"nodeType": "IfStatement",
												"src": "777:45:11",
												"trueBody": {
													"id": 1935,
													"nodeType": "Block",
													"src": "789:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "810:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1929,
															"id": 1934,
															"nodeType": "Return",
															"src": "803:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													1938
												],
												"declarations": [
													{
														"constant": false,
														"id": 1938,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1954,
														"src": "832:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "832:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1942,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1939,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "844:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1940,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1925,
														"src": "848:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "844:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "832:17:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1944,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "867:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1945,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1923,
																	"src": "871:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "867:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1947,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1925,
																"src": "876:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "867:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "879:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1943,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "859:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "859:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1951,
												"nodeType": "ExpressionStatement",
												"src": "859:56:11"
											},
											{
												"expression": {
													"id": 1952,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1938,
													"src": "933:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1929,
												"id": 1953,
												"nodeType": "Return",
												"src": "926:8:11"
											}
										]
									},
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "713:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "724:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:22:11"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "758:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:9:11"
									},
									"scope": 2070,
									"src": "700:241:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "1014:63:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1965,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1957,
															"src": "1035:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1966,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "1038:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1041:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1964,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1971,
															2011
														],
														"referencedDeclaration": 2011,
														"src": "1031:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1963,
												"id": 1969,
												"nodeType": "Return",
												"src": "1024:46:11"
											}
										]
									},
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "960:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "971:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "959:22:11"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "1005:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1004:9:11"
									},
									"scope": 2070,
									"src": "947:130:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2010,
										"nodeType": "Block",
										"src": "1208:176:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1983,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1975,
																"src": "1226:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1230:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1226:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1986,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "1233:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1218:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1988,
												"nodeType": "ExpressionStatement",
												"src": "1218:28:11"
											},
											{
												"assignments": [
													1990
												],
												"declarations": [
													{
														"constant": false,
														"id": 1990,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 2010,
														"src": "1256:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1989,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1256:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1994,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1991,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "1268:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1992,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "1272:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1268:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1256:17:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1996,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "1290:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1997,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1975,
																		"src": "1295:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1998,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1990,
																		"src": "1299:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1295:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2000,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1973,
																				"src": "1304:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 2001,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1975,
																				"src": "1308:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1304:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2003,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1303:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1295:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1290:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1995,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1283:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1283:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "1283:28:11"
											},
											{
												"expression": {
													"id": 2008,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1990,
													"src": "1376:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1981,
												"id": 2009,
												"nodeType": "Return",
												"src": "1369:8:11"
											}
										]
									},
									"id": 2011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "1105:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "1124:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "1143:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1976,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1143:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:80:11"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "1199:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1198:9:11"
									},
									"scope": 2070,
									"src": "1083:301:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2068,
										"nodeType": "Block",
										"src": "1497:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2018,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2013,
														"src": "1511:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1515:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1511:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2058,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "1713:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1718:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1713:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2066,
													"nodeType": "IfStatement",
													"src": "1709:42:11",
													"trueBody": {
														"id": 2065,
														"nodeType": "Block",
														"src": "1721:30:11",
														"statements": [
															{
																"expression": {
																	"id": 2063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2061,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2016,
																		"src": "1735:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 2062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1739:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1735:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2064,
																"nodeType": "ExpressionStatement",
																"src": "1735:5:11"
															}
														]
													}
												},
												"id": 2067,
												"nodeType": "IfStatement",
												"src": "1507:244:11",
												"trueBody": {
													"id": 2057,
													"nodeType": "Block",
													"src": "1518:185:11",
													"statements": [
														{
															"expression": {
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2021,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "1532:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2022,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2013,
																	"src": "1536:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1532:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2024,
															"nodeType": "ExpressionStatement",
															"src": "1532:5:11"
														},
														{
															"assignments": [
																2026
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2026,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 2057,
																	"src": "1551:9:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2025,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1551:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2034,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2029,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2013,
																				"src": "1571:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 2030,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1574:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 2028,
																			"name": "div",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1971,
																				2011
																			],
																			"referencedDeclaration": 1971,
																			"src": "1567:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1567:9:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1578:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 2027,
																	"name": "add",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "1563:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1563:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1551:29:11"
														},
														{
															"body": {
																"id": 2055,
																"nodeType": "Block",
																"src": "1608:85:11",
																"statements": [
																	{
																		"expression": {
																			"id": 2040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2038,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2016,
																				"src": "1626:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2039,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2026,
																				"src": "1630:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1626:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2041,
																		"nodeType": "ExpressionStatement",
																		"src": "1626:5:11"
																	},
																	{
																		"expression": {
																			"id": 2053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2042,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2026,
																				"src": "1649:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 2046,
																										"name": "a",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2013,
																										"src": "1665:1:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 2047,
																										"name": "b",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2026,
																										"src": "1668:1:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 2045,
																									"name": "div",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										1971,
																										2011
																									],
																									"referencedDeclaration": 1971,
																									"src": "1661:3:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 2048,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1661:9:11",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2049,
																								"name": "b",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2026,
																								"src": "1672:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2044,
																							"name": "add",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1878,
																							"src": "1657:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2050,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1657:17:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "32",
																						"id": 2051,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1676:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						}
																					],
																					"id": 2043,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						1971,
																						2011
																					],
																					"referencedDeclaration": 1971,
																					"src": "1653:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1653:25:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1649:29:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2054,
																		"nodeType": "ExpressionStatement",
																		"src": "1649:29:11"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2035,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2026,
																	"src": "1601:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2036,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "1605:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1601:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2056,
															"nodeType": "WhileStatement",
															"src": "1594:99:11"
														}
													]
												}
											}
										]
									},
									"id": 2069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "1452:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:11:11"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "1486:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:11:11"
									},
									"scope": 2070,
									"src": "1437:320:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2071,
							"src": "132:1627:11"
						}
					],
					"src": "37:1723:11"
				},
				"id": 11
			},
			"sExodus/sOlympusERC20.sol": {
				"ast": {
					"absolutePath": "sExodus/sOlympusERC20.sol",
					"exportedSymbols": {
						"Address": [
							344
						],
						"Counters": [
							393
						],
						"ECDSA": [
							753
						],
						"EIP712": [
							900
						],
						"ERC20": [
							1378
						],
						"ERC20Permit": [
							1544
						],
						"IERC20": [
							1613
						],
						"IERC20Permit": [
							1649
						],
						"IStaking": [
							1736
						],
						"IgEXO": [
							1782
						],
						"IsEXO": [
							1851
						],
						"SafeMath": [
							2070
						],
						"sExodus": [
							2971
						]
					},
					"id": 2972,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2072,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:12"
						},
						{
							"absolutePath": "sExodus/Address.sol",
							"file": "./Address.sol",
							"id": 2073,
							"nodeType": "ImportDirective",
							"scope": 2972,
							"sourceUnit": 345,
							"src": "62:23:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sExodus/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 2074,
							"nodeType": "ImportDirective",
							"scope": 2972,
							"sourceUnit": 2071,
							"src": "86:24:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sExodus/ERC20Permit.sol",
							"file": "./ERC20Permit.sol",
							"id": 2075,
							"nodeType": "ImportDirective",
							"scope": 2972,
							"sourceUnit": 1545,
							"src": "112:27:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sExodus/IgOHM.sol",
							"file": "./IgOHM.sol",
							"id": 2076,
							"nodeType": "ImportDirective",
							"scope": 2972,
							"sourceUnit": 1783,
							"src": "141:21:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sExodus/IsOHM.sol",
							"file": "./IsOHM.sol",
							"id": 2077,
							"nodeType": "ImportDirective",
							"scope": 2972,
							"sourceUnit": 1852,
							"src": "163:21:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "sExodus/IStaking.sol",
							"file": "./IStaking.sol",
							"id": 2078,
							"nodeType": "ImportDirective",
							"scope": 2972,
							"sourceUnit": 1737,
							"src": "185:24:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2079,
										"name": "IsEXO",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1851,
										"src": "231:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IsEXO_$1851",
											"typeString": "contract IsEXO"
										}
									},
									"id": 2080,
									"nodeType": "InheritanceSpecifier",
									"src": "231:5:12"
								},
								{
									"baseName": {
										"id": 2081,
										"name": "ERC20Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1544,
										"src": "238:11:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Permit_$1544",
											"typeString": "contract ERC20Permit"
										}
									},
									"id": 2082,
									"nodeType": "InheritanceSpecifier",
									"src": "238:11:12"
								}
							],
							"contractDependencies": [
								900,
								1378,
								1544,
								1613,
								1649,
								1851
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2971,
							"linearizedBaseContracts": [
								2971,
								1544,
								900,
								1649,
								1378,
								1851,
								1613
							],
							"name": "sExodus",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2085,
									"libraryName": {
										"id": 2083,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2070,
										"src": "308:8:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2070",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "302:27:12",
									"typeName": {
										"id": 2084,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "321:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"id": 2091,
									"name": "LogSupply",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "391:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "414:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:44:12"
									},
									"src": "375:60:12"
								},
								{
									"anonymous": false,
									"id": 2099,
									"name": "LogRebase",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "456:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2095,
												"indexed": false,
												"mutability": "mutable",
												"name": "rebase",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "479:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "495:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:54:12"
									},
									"src": "440:70:12"
								},
								{
									"anonymous": false,
									"id": 2103,
									"name": "LogStakingContractUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakingContract",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "547:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:25:12"
									},
									"src": "515:57:12"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "652:116:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2106,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "670:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "670:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2108,
																"name": "stakingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2136,
																"src": "684:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "670:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67436f6e74726163743a202063616c6c206973206e6f74207374616b696e6720636f6e7472616374",
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "701:48:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5659c1cc908cdac5d93994075e79b6facf5d4cb17e30f3636004f4933a19d9c",
																"typeString": "literal_string \"StakingContract:  call is not staking contract\""
															},
															"value": "StakingContract:  call is not staking contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5659c1cc908cdac5d93994075e79b6facf5d4cb17e30f3636004f4933a19d9c",
																"typeString": "literal_string \"StakingContract:  call is not staking contract\""
															}
														],
														"id": 2105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "662:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "662:88:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2112,
												"nodeType": "ExpressionStatement",
												"src": "662:88:12"
											},
											{
												"id": 2113,
												"nodeType": "PlaceholderStatement",
												"src": "760:1:12"
											}
										]
									},
									"id": 2115,
									"name": "onlyStakingContract",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "649:2:12"
									},
									"src": "621:147:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "sExodus.Rebase",
									"id": 2130,
									"members": [
										{
											"constant": false,
											"id": 2117,
											"mutability": "mutable",
											"name": "epoch",
											"nodeType": "VariableDeclaration",
											"scope": 2130,
											"src": "847:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2116,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "847:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2119,
											"mutability": "mutable",
											"name": "rebase",
											"nodeType": "VariableDeclaration",
											"scope": 2130,
											"src": "870:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2118,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "870:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2121,
											"mutability": "mutable",
											"name": "totalStakedBefore",
											"nodeType": "VariableDeclaration",
											"scope": 2130,
											"src": "909:25:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2120,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "909:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2123,
											"mutability": "mutable",
											"name": "totalStakedAfter",
											"nodeType": "VariableDeclaration",
											"scope": 2130,
											"src": "944:24:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2122,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "944:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2125,
											"mutability": "mutable",
											"name": "amountRebased",
											"nodeType": "VariableDeclaration",
											"scope": 2130,
											"src": "978:21:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2124,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "978:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2127,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 2130,
											"src": "1009:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2126,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1009:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2129,
											"mutability": "mutable",
											"name": "blockNumberOccured",
											"nodeType": "VariableDeclaration",
											"scope": 2130,
											"src": "1032:26:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2128,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1032:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Rebase",
									"nodeType": "StructDefinition",
									"scope": 2971,
									"src": "823:242:12",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2132,
									"mutability": "mutable",
									"name": "initializer",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "1120:28:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2131,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1120:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2134,
									"mutability": "mutable",
									"name": "INDEX",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "1155:22:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2133,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1155:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ee99205c",
									"id": 2136,
									"mutability": "mutable",
									"name": "stakingContract",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "1221:30:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2135,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1221:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2af36b43",
									"id": 2138,
									"mutability": "mutable",
									"name": "gEXO",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "1288:17:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IgEXO_$1782",
										"typeString": "contract IgEXO"
									},
									"typeName": {
										"id": 2137,
										"name": "IgEXO",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1782,
										"src": "1288:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IgEXO_$1782",
											"typeString": "contract IgEXO"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73c69eb7",
									"id": 2141,
									"mutability": "mutable",
									"name": "rebases",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "1359:23:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Rebase_$2130_storage_$dyn_storage",
										"typeString": "struct sExodus.Rebase[]"
									},
									"typeName": {
										"baseType": {
											"id": 2139,
											"name": "Rebase",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 2130,
											"src": "1359:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Rebase_$2130_storage_ptr",
												"typeString": "struct sExodus.Rebase"
											}
										},
										"id": 2140,
										"nodeType": "ArrayTypeName",
										"src": "1359:8:12",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Rebase_$2130_storage_$dyn_storage_ptr",
											"typeString": "struct sExodus.Rebase[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 2148,
									"mutability": "constant",
									"name": "MAX_UINT256",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "1409:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2142,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1409:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"expression": {
											"arguments": [
												{
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "1453:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_uint256_$",
														"typeString": "type(uint256)"
													},
													"typeName": {
														"id": 2144,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1453:7:12",
														"typeDescriptions": {}
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_type$_t_uint256_$",
														"typeString": "type(uint256)"
													}
												],
												"id": 2143,
												"name": "type",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": -27,
												"src": "1448:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
													"typeString": "function () pure"
												}
											},
											"id": 2146,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "functionCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1448:13:12",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_magic_meta_type_t_uint256",
												"typeString": "type(uint256)"
											}
										},
										"id": 2147,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "max",
										"nodeType": "MemberAccess",
										"src": "1448:17:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2155,
									"mutability": "constant",
									"name": "INITIAL_FRAGMENTS_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "1471:69:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2149,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1471:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										},
										"id": 2154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "355f3030305f303030",
											"id": 2150,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1523:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5000000_by_1",
												"typeString": "int_const 5000000"
											},
											"value": "5_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 2153,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 2151,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1535:2:12",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 2152,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1539:1:12",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "1535:5:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "1523:17:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2163,
									"mutability": "constant",
									"name": "TOTAL_GONS",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "1720:92:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2156,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 2162,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 2157,
											"name": "MAX_UINT256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2148,
											"src": "1758:11:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2158,
														"name": "MAX_UINT256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "1773:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2159,
														"name": "INITIAL_FRAGMENTS_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "1787:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1773:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2161,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1772:40:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1758:54:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2170,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "1890:49:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2164,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1890:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 2169,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "1928:11:12",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 2167,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1937:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 2166,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1929:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint128_$",
													"typeString": "type(uint128)"
												},
												"typeName": {
													"id": 2165,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:12",
													"typeDescriptions": {}
												}
											},
											"id": 2168,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1929:10:12",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2172,
									"mutability": "mutable",
									"name": "_gonsPerFragment",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "1961:32:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2171,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1961:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2176,
									"mutability": "mutable",
									"name": "_gonBalances",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "1999:48:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2175,
										"keyType": {
											"id": 2173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2007:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1999:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2174,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2018:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2182,
									"mutability": "mutable",
									"name": "_allowedValue",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "2054:69:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 2181,
										"keyType": {
											"id": 2177,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2062:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2054:47:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 2180,
											"keyType": {
												"id": 2178,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2081:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2073:27:12",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 2179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2092:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 2184,
									"mutability": "mutable",
									"name": "treasury",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "2130:23:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2183,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2130:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1850
									],
									"constant": false,
									"functionSelector": "c4ef1c4c",
									"id": 2189,
									"mutability": "mutable",
									"name": "debtBalances",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2188,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:12"
									},
									"scope": 2971,
									"src": "2159:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2187,
										"keyType": {
											"id": 2185,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2167:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2159:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2186,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2178:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2216,
										"nodeType": "Block",
										"src": "2338:147:12",
										"statements": [
											{
												"expression": {
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2200,
														"name": "initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "2348:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2201,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "2362:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2362:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2348:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2204,
												"nodeType": "ExpressionStatement",
												"src": "2348:24:12"
											},
											{
												"expression": {
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2205,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "2382:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2206,
														"name": "INITIAL_FRAGMENTS_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "2397:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2382:39:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2208,
												"nodeType": "ExpressionStatement",
												"src": "2382:39:12"
											},
											{
												"expression": {
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2209,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2172,
														"src": "2431:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2212,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "2465:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2210,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2163,
																"src": "2450:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1971,
															"src": "2450:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2450:28:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2431:47:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2215,
												"nodeType": "ExpressionStatement",
												"src": "2431:47:12"
											}
										]
									},
									"id": 2217,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5374616b65642045584f",
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2287:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_95d91e1bc80e9fd625adad17337263438cef5918fb585eaf3ff56d96ff627ec3",
														"typeString": "literal_string \"Staked EXO\""
													},
													"value": "Staked EXO"
												},
												{
													"hexValue": "7345584f",
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2301:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_67c82ec1c9459f73a1bc00d65c9444435155244aac07693fa15f4f79168505ad",
														"typeString": "literal_string \"sEXO\""
													},
													"value": "sEXO"
												},
												{
													"hexValue": "39",
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2309:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												}
											],
											"id": 2195,
											"modifierName": {
												"id": 2191,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1378,
												"src": "2281:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$1378_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2281:30:12"
										},
										{
											"arguments": [
												{
													"hexValue": "5374616b65642045584f",
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2324:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_95d91e1bc80e9fd625adad17337263438cef5918fb585eaf3ff56d96ff627ec3",
														"typeString": "literal_string \"Staked EXO\""
													},
													"value": "Staked EXO"
												}
											],
											"id": 2198,
											"modifierName": {
												"id": 2196,
												"name": "ERC20Permit",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1544,
												"src": "2312:11:12",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20Permit_$1544_$",
													"typeString": "type(contract ERC20Permit)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2312:25:12"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2278:2:12"
									},
									"returnParameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2338:0:12"
									},
									"scope": 2971,
									"src": "2267:218:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2243,
										"nodeType": "Block",
										"src": "2582:189:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2223,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2600:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2600:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2225,
																"name": "initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2132,
																"src": "2614:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2600:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a65723a202063616c6c6572206973206e6f7420696e697469616c697a6572",
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2627:41:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_943a7f2fe776b1da8f1c593116d1db5f305d3c06d55576c45bce8bd0cf858a2e",
																"typeString": "literal_string \"Initializer:  caller is not initializer\""
															},
															"value": "Initializer:  caller is not initializer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_943a7f2fe776b1da8f1c593116d1db5f305d3c06d55576c45bce8bd0cf858a2e",
																"typeString": "literal_string \"Initializer:  caller is not initializer\""
															}
														],
														"id": 2222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2592:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2592:77:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2229,
												"nodeType": "ExpressionStatement",
												"src": "2592:77:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2231,
																"name": "INDEX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2134,
																"src": "2687:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2696:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2687:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742073657420494e44455820616761696e",
															"id": 2234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2699:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f03e9129fdbd36e7fa8dd80a2aa5ddf4323545f4ab20d6b59c8692cac2633726",
																"typeString": "literal_string \"Cannot set INDEX again\""
															},
															"value": "Cannot set INDEX again"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f03e9129fdbd36e7fa8dd80a2aa5ddf4323545f4ab20d6b59c8692cac2633726",
																"typeString": "literal_string \"Cannot set INDEX again\""
															}
														],
														"id": 2230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2679:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2679:45:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2236,
												"nodeType": "ExpressionStatement",
												"src": "2679:45:12"
											},
											{
												"expression": {
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2237,
														"name": "INDEX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2134,
														"src": "2734:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2239,
																"name": "_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2219,
																"src": "2757:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2238,
															"name": "gonsForBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2864,
															"src": "2742:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2742:22:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2734:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2242,
												"nodeType": "ExpressionStatement",
												"src": "2734:30:12"
											}
										]
									},
									"functionSelector": "40a5737f",
									"id": 2244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "_index",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "2557:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2557:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2556:16:12"
									},
									"returnParameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2582:0:12"
									},
									"scope": 2971,
									"src": "2539:232:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2286,
										"nodeType": "Block",
										"src": "2818:273:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2250,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2836:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2836:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2252,
																"name": "initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2132,
																"src": "2850:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2836:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a65723a202063616c6c6572206973206e6f7420696e697469616c697a6572",
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2863:41:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_943a7f2fe776b1da8f1c593116d1db5f305d3c06d55576c45bce8bd0cf858a2e",
																"typeString": "literal_string \"Initializer:  caller is not initializer\""
															},
															"value": "Initializer:  caller is not initializer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_943a7f2fe776b1da8f1c593116d1db5f305d3c06d55576c45bce8bd0cf858a2e",
																"typeString": "literal_string \"Initializer:  caller is not initializer\""
															}
														],
														"id": 2249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2828:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2828:77:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2256,
												"nodeType": "ExpressionStatement",
												"src": "2828:77:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2260,
																		"name": "gEXO",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2138,
																		"src": "2931:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IgEXO_$1782",
																			"typeString": "contract IgEXO"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IgEXO_$1782",
																			"typeString": "contract IgEXO"
																		}
																	],
																	"id": 2259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2923:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2258,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2923:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2923:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2948:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2940:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2262,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2940:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2940:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2923:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6745584f3a20206745584f20616c726561647920736574",
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2952:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_545e404e09dc07986872ed8720cab154b2ec92f5872127b581b9064d35aa7601",
																"typeString": "literal_string \"gEXO:  gEXO already set\""
															},
															"value": "gEXO:  gEXO already set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_545e404e09dc07986872ed8720cab154b2ec92f5872127b581b9064d35aa7601",
																"typeString": "literal_string \"gEXO:  gEXO already set\""
															}
														],
														"id": 2257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2915:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2915:63:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2269,
												"nodeType": "ExpressionStatement",
												"src": "2915:63:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2271,
																"name": "_gEXO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2246,
																"src": "2996:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3013:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3005:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2272,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3005:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3005:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2996:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6745584f3a20206745584f206973206e6f7420612076616c696420636f6e7472616374",
															"id": 2277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3017:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_035b6bc83dafb7a2caf38cee64b612ce6a24918ce92e23821600bd75c1740717",
																"typeString": "literal_string \"gEXO:  gEXO is not a valid contract\""
															},
															"value": "gEXO:  gEXO is not a valid contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_035b6bc83dafb7a2caf38cee64b612ce6a24918ce92e23821600bd75c1740717",
																"typeString": "literal_string \"gEXO:  gEXO is not a valid contract\""
															}
														],
														"id": 2270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2988:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2988:67:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2279,
												"nodeType": "ExpressionStatement",
												"src": "2988:67:12"
											},
											{
												"expression": {
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2280,
														"name": "gEXO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "3065:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IgEXO_$1782",
															"typeString": "contract IgEXO"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2282,
																"name": "_gEXO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2246,
																"src": "3078:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2281,
															"name": "IgEXO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "3072:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IgEXO_$1782_$",
																"typeString": "type(contract IgEXO)"
															}
														},
														"id": 2283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3072:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IgEXO_$1782",
															"typeString": "contract IgEXO"
														}
													},
													"src": "3065:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IgEXO_$1782",
														"typeString": "contract IgEXO"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "3065:19:12"
											}
										]
									},
									"functionSelector": "245c0e99",
									"id": 2287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setgOHM",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "_gEXO",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "2794:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2794:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2793:15:12"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2818:0:12"
									},
									"scope": 2971,
									"src": "2777:314:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2356,
										"nodeType": "Block",
										"src": "3191:511:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2295,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "3209:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3209:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2297,
																"name": "initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2132,
																"src": "3223:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3209:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a65723a202063616c6c6572206973206e6f7420696e697469616c697a6572",
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3236:41:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_943a7f2fe776b1da8f1c593116d1db5f305d3c06d55576c45bce8bd0cf858a2e",
																"typeString": "literal_string \"Initializer:  caller is not initializer\""
															},
															"value": "Initializer:  caller is not initializer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_943a7f2fe776b1da8f1c593116d1db5f305d3c06d55576c45bce8bd0cf858a2e",
																"typeString": "literal_string \"Initializer:  caller is not initializer\""
															}
														],
														"id": 2294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3201:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3201:77:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2301,
												"nodeType": "ExpressionStatement",
												"src": "3201:77:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2303,
																"name": "_stakingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "3297:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3325:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3317:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2304,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3317:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3317:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3297:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67",
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3329:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
																"typeString": "literal_string \"Staking\""
															},
															"value": "Staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
																"typeString": "literal_string \"Staking\""
															}
														],
														"id": 2302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3289:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3289:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2311,
												"nodeType": "ExpressionStatement",
												"src": "3289:50:12"
											},
											{
												"expression": {
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2312,
														"name": "stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "3349:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2313,
														"name": "_stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2289,
														"src": "3367:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3349:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2315,
												"nodeType": "ExpressionStatement",
												"src": "3349:34:12"
											},
											{
												"expression": {
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2316,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "3393:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2318,
														"indexExpression": {
															"id": 2317,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "3406:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3393:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2319,
														"name": "TOTAL_GONS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2163,
														"src": "3425:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3393:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2321,
												"nodeType": "ExpressionStatement",
												"src": "3393:42:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2323,
																"name": "_treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "3454:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3475:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3467:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2324,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3467:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3467:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3454:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616464726573733a205472656173757279",
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3479:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0a14ebe9d2aec3342cb9856dca78fdf82c30e7a18d65c5577933a36661e5282",
																"typeString": "literal_string \"Zero address: Treasury\""
															},
															"value": "Zero address: Treasury"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0a14ebe9d2aec3342cb9856dca78fdf82c30e7a18d65c5577933a36661e5282",
																"typeString": "literal_string \"Zero address: Treasury\""
															}
														],
														"id": 2322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3446:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3446:58:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2331,
												"nodeType": "ExpressionStatement",
												"src": "3446:58:12"
											},
											{
												"expression": {
													"id": 2334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2332,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2184,
														"src": "3514:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2333,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2291,
														"src": "3525:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3514:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2335,
												"nodeType": "ExpressionStatement",
												"src": "3514:20:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307830",
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3567:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3559:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2337,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3559:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3559:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2341,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "3573:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2342,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "3590:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2336,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "3550:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3550:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2344,
												"nodeType": "EmitStatement",
												"src": "3545:58:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2346,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "3644:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2345,
														"name": "LogStakingContractUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2103,
														"src": "3618:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3618:42:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2348,
												"nodeType": "EmitStatement",
												"src": "3613:47:12"
											},
											{
												"expression": {
													"id": 2354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2349,
														"name": "initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "3671:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3693:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3685:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2350,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3685:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3685:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3671:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2355,
												"nodeType": "ExpressionStatement",
												"src": "3671:24:12"
											}
										]
									},
									"functionSelector": "485cc955",
									"id": 2357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "_stakingContract",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "3137:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3137:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "_treasury",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "3163:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3163:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3136:45:12"
									},
									"returnParameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:0:12"
									},
									"scope": 2971,
									"src": "3117:585:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1796
									],
									"body": {
										"id": 2448,
										"nodeType": "Block",
										"src": "4009:735:12",
										"statements": [
											{
												"assignments": [
													2371
												],
												"declarations": [
													{
														"constant": false,
														"id": 2371,
														"mutability": "mutable",
														"name": "rebaseAmount",
														"nodeType": "VariableDeclaration",
														"scope": 2448,
														"src": "4019:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4019:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2372,
												"nodeType": "VariableDeclarationStatement",
												"src": "4019:20:12"
											},
											{
												"assignments": [
													2374
												],
												"declarations": [
													{
														"constant": false,
														"id": 2374,
														"mutability": "mutable",
														"name": "circulatingSupply_",
														"nodeType": "VariableDeclaration",
														"scope": 2448,
														"src": "4049:26:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2373,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4049:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2375,
														"name": "circulatingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2940,
														"src": "4078:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4078:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4049:48:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2378,
														"name": "profit_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2360,
														"src": "4111:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4122:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4111:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2396,
															"name": "circulatingSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "4277:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4298:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4277:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2414,
														"nodeType": "Block",
														"src": "4396:47:12",
														"statements": [
															{
																"expression": {
																	"id": 2412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2410,
																		"name": "rebaseAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2371,
																		"src": "4410:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 2411,
																		"name": "profit_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2360,
																		"src": "4425:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4410:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2413,
																"nodeType": "ExpressionStatement",
																"src": "4410:22:12"
															}
														]
													},
													"id": 2415,
													"nodeType": "IfStatement",
													"src": "4273:170:12",
													"trueBody": {
														"id": 2409,
														"nodeType": "Block",
														"src": "4301:89:12",
														"statements": [
															{
																"expression": {
																	"id": 2407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2399,
																		"name": "rebaseAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2371,
																		"src": "4315:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2405,
																				"name": "circulatingSupply_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2374,
																				"src": "4360:18:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2402,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 926,
																						"src": "4342:12:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2400,
																						"name": "profit_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2360,
																						"src": "4330:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2401,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1955,
																					"src": "4330:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4330:25:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1971,
																			"src": "4330:29:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4330:49:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4315:64:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2408,
																"nodeType": "ExpressionStatement",
																"src": "4315:64:12"
															}
														]
													}
												},
												"id": 2416,
												"nodeType": "IfStatement",
												"src": "4107:336:12",
												"trueBody": {
													"id": 2395,
													"nodeType": "Block",
													"src": "4125:142:12",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2382,
																		"name": "epoch_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2362,
																		"src": "4154:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2383,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "4162:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2381,
																	"name": "LogSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2091,
																	"src": "4144:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4144:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2385,
															"nodeType": "EmitStatement",
															"src": "4139:36:12"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2387,
																		"name": "epoch_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2362,
																		"src": "4204:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4212:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2389,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2951,
																			"src": "4215:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 2390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4215:7:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2386,
																	"name": "LogRebase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "4194:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 2391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4194:29:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2392,
															"nodeType": "EmitStatement",
															"src": "4189:34:12"
														},
														{
															"expression": {
																"id": 2393,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "4244:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2369,
															"id": 2394,
															"nodeType": "Return",
															"src": "4237:19:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2417,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "4453:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2420,
																"name": "rebaseAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "4485:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2418,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "4468:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1878,
															"src": "4468:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4468:30:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4453:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2423,
												"nodeType": "ExpressionStatement",
												"src": "4453:45:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2424,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "4513:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2425,
														"name": "MAX_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2170,
														"src": "4528:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4513:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2432,
												"nodeType": "IfStatement",
												"src": "4509:81:12",
												"trueBody": {
													"id": 2431,
													"nodeType": "Block",
													"src": "4540:50:12",
													"statements": [
														{
															"expression": {
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2427,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "4554:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2428,
																	"name": "MAX_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "4569:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4554:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2430,
															"nodeType": "ExpressionStatement",
															"src": "4554:25:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2433,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2172,
														"src": "4600:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2436,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "4634:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2434,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2163,
																"src": "4619:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1971,
															"src": "4619:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4619:28:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4600:47:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2439,
												"nodeType": "ExpressionStatement",
												"src": "4600:47:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2441,
															"name": "circulatingSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "4671:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2442,
															"name": "profit_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2360,
															"src": "4691:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2443,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2362,
															"src": "4700:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2440,
														"name": "_storeRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2499,
														"src": "4658:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4658:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2445,
												"nodeType": "ExpressionStatement",
												"src": "4658:49:12"
											},
											{
												"expression": {
													"id": 2446,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 926,
													"src": "4725:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2369,
												"id": 2447,
												"nodeType": "Return",
												"src": "4718:19:12"
											}
										]
									},
									"documentation": {
										"id": 2358,
										"nodeType": "StructuredDocumentation",
										"src": "3748:153:12",
										"text": "@notice increases rOHM supply to increase staking balances relative to profit_\n@param profit_ uint256\n@return uint256"
									},
									"functionSelector": "058ecdb4",
									"id": 2449,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2366,
											"modifierName": {
												"id": 2365,
												"name": "onlyStakingContract",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2115,
												"src": "3971:19:12",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3971:19:12"
										}
									],
									"name": "rebase",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2364,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3962:8:12"
									},
									"parameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "profit_",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "3922:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3922:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "3939:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3939:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3921:33:12"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "4000:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4000:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3999:9:12"
									},
									"scope": 2971,
									"src": "3906:838:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "5037:574:12",
										"statements": [
											{
												"assignments": [
													2460
												],
												"declarations": [
													{
														"constant": false,
														"id": 2460,
														"mutability": "mutable",
														"name": "rebasePercent",
														"nodeType": "VariableDeclaration",
														"scope": 2498,
														"src": "5047:21:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5047:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2468,
												"initialValue": {
													"arguments": [
														{
															"id": 2466,
															"name": "previousCirculating_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2452,
															"src": "5093:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 2463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5083:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"id": 2461,
																	"name": "profit_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "5071:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1955,
																"src": "5071:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5071:17:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1971,
														"src": "5071:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5071:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5047:67:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2473,
																	"name": "epoch_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "5182:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2474,
																	"name": "rebasePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2460,
																	"src": "5214:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2475,
																	"name": "previousCirculating_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "5279:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2476,
																		"name": "circulatingSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2940,
																		"src": "5335:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5335:19:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2478,
																	"name": "profit_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "5387:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2479,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2951,
																		"src": "5419:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5419:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2481,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "5464:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "5464:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2472,
																"name": "Rebase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2130,
																"src": "5150:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Rebase_$2130_storage_ptr_$",
																	"typeString": "type(struct sExodus.Rebase storage pointer)"
																}
															},
															"id": 2483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"epoch",
																"rebase",
																"totalStakedBefore",
																"totalStakedAfter",
																"amountRebased",
																"index",
																"blockNumberOccured"
															],
															"nodeType": "FunctionCall",
															"src": "5150:341:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Rebase_$2130_memory_ptr",
																"typeString": "struct sExodus.Rebase memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Rebase_$2130_memory_ptr",
																"typeString": "struct sExodus.Rebase memory"
															}
														],
														"expression": {
															"id": 2469,
															"name": "rebases",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "5124:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Rebase_$2130_storage_$dyn_storage",
																"typeString": "struct sExodus.Rebase storage ref[] storage ref"
															}
														},
														"id": 2471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5124:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Rebase_$2130_storage_$returns$__$",
															"typeString": "function (struct sExodus.Rebase storage ref)"
														}
													},
													"id": 2484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5124:377:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2485,
												"nodeType": "ExpressionStatement",
												"src": "5124:377:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2487,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2456,
															"src": "5527:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2488,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "5535:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2486,
														"name": "LogSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2091,
														"src": "5517:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5517:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2490,
												"nodeType": "EmitStatement",
												"src": "5512:36:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2492,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2456,
															"src": "5573:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2493,
															"name": "rebasePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2460,
															"src": "5581:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2494,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2951,
																"src": "5596:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5596:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2491,
														"name": "LogRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2099,
														"src": "5563:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5563:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2497,
												"nodeType": "EmitStatement",
												"src": "5558:46:12"
											}
										]
									},
									"documentation": {
										"id": 2450,
										"nodeType": "StructuredDocumentation",
										"src": "4750:158:12",
										"text": "@notice emits event with data about rebase\n@param previousCirculating_ uint\n@param profit_ uint\n@param epoch_ uint"
									},
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_storeRebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "previousCirculating_",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "4944:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4944:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "profit_",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "4982:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4982:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "5007:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4934:93:12"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5037:0:12"
									},
									"scope": 2971,
									"src": "4913:698:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1020,
										1567
									],
									"body": {
										"id": 2564,
										"nodeType": "Block",
										"src": "5761:366:12",
										"statements": [
											{
												"assignments": [
													2512
												],
												"declarations": [
													{
														"constant": false,
														"id": 2512,
														"mutability": "mutable",
														"name": "gonValue",
														"nodeType": "VariableDeclaration",
														"scope": 2564,
														"src": "5771:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2511,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5771:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2517,
												"initialValue": {
													"arguments": [
														{
															"id": 2515,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "5800:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2513,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2503,
															"src": "5790:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1955,
														"src": "5790:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5790:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5771:46:12"
											},
											{
												"expression": {
													"id": 2529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2518,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "5828:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2521,
														"indexExpression": {
															"expression": {
																"id": 2519,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5841:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5841:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5828:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2527,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2512,
																"src": "5884:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2522,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "5855:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2525,
																"indexExpression": {
																	"expression": {
																		"id": 2523,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "5868:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5868:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5855:24:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1894,
															"src": "5855:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5855:38:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5828:65:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2530,
												"nodeType": "ExpressionStatement",
												"src": "5828:65:12"
											},
											{
												"expression": {
													"id": 2540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2531,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "5903:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2533,
														"indexExpression": {
															"id": 2532,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2501,
															"src": "5916:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5903:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2538,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2512,
																"src": "5943:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2534,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "5922:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2536,
																"indexExpression": {
																	"id": 2535,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2501,
																	"src": "5935:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5922:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1878,
															"src": "5922:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5922:30:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5903:49:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2541,
												"nodeType": "ExpressionStatement",
												"src": "5903:49:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2544,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "5981:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5981:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 2543,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2850
																	],
																	"referencedDeclaration": 2850,
																	"src": "5971:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5971:21:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"baseExpression": {
																	"id": 2547,
																	"name": "debtBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2189,
																	"src": "5996:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2550,
																"indexExpression": {
																	"expression": {
																		"id": 2548,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "6009:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6009:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5996:24:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5971:49:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446562743a2063616e6e6f74207472616e7366657220616d6f756e74",
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2dee5680331f5734d45765d6fd4b7e1bc619c54187dbcaccfe90b6c172b10e89",
																"typeString": "literal_string \"Debt: cannot transfer amount\""
															},
															"value": "Debt: cannot transfer amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2dee5680331f5734d45765d6fd4b7e1bc619c54187dbcaccfe90b6c172b10e89",
																"typeString": "literal_string \"Debt: cannot transfer amount\""
															}
														],
														"id": 2542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5963:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5963:90:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2554,
												"nodeType": "ExpressionStatement",
												"src": "5963:90:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2556,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "6077:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6077:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2558,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2501,
															"src": "6089:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2559,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2503,
															"src": "6093:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2555,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "6068:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6068:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2561,
												"nodeType": "EmitStatement",
												"src": "6063:36:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6116:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2510,
												"id": 2563,
												"nodeType": "Return",
												"src": "6109:11:12"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 2565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2507,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2505,
												"name": "IERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1613,
												"src": "5731:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1613",
													"typeString": "contract IERC20"
												}
											},
											{
												"id": 2506,
												"name": "ERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1378,
												"src": "5739:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1378",
													"typeString": "contract ERC20"
												}
											}
										],
										"src": "5722:23:12"
									},
									"parameters": {
										"id": 2504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "5688:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5688:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "5700:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5700:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5687:27:12"
									},
									"returnParameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "5755:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5755:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5754:6:12"
									},
									"scope": 2971,
									"src": "5670:457:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1094,
										1596
									],
									"body": {
										"id": 2655,
										"nodeType": "Block",
										"src": "6272:490:12",
										"statements": [
											{
												"expression": {
													"id": 2594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2579,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2182,
																"src": "6282:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2583,
															"indexExpression": {
																"id": 2580,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2567,
																"src": "6296:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6282:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2584,
														"indexExpression": {
															"expression": {
																"id": 2581,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "6302:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6302:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6282:31:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2592,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2571,
																"src": "6352:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2585,
																		"name": "_allowedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2182,
																		"src": "6316:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 2587,
																	"indexExpression": {
																		"id": 2586,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2567,
																		"src": "6330:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6316:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2590,
																"indexExpression": {
																	"expression": {
																		"id": 2588,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "6336:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6336:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6316:31:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1894,
															"src": "6316:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6316:42:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6282:76:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2595,
												"nodeType": "ExpressionStatement",
												"src": "6282:76:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2597,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2567,
															"src": "6382:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2598,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "6388:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6388:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 2600,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2182,
																	"src": "6400:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 2602,
																"indexExpression": {
																	"id": 2601,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2567,
																	"src": "6414:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6400:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2605,
															"indexExpression": {
																"expression": {
																	"id": 2603,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "6420:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6420:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6400:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2596,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "6373:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6373:59:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2607,
												"nodeType": "EmitStatement",
												"src": "6368:64:12"
											},
											{
												"assignments": [
													2609
												],
												"declarations": [
													{
														"constant": false,
														"id": 2609,
														"mutability": "mutable",
														"name": "gonValue",
														"nodeType": "VariableDeclaration",
														"scope": 2655,
														"src": "6443:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6443:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2613,
												"initialValue": {
													"arguments": [
														{
															"id": 2611,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "6477:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2610,
														"name": "gonsForBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2864,
														"src": "6462:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6462:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6443:40:12"
											},
											{
												"expression": {
													"id": 2623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2614,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "6493:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2616,
														"indexExpression": {
															"id": 2615,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2567,
															"src": "6506:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6493:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2621,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "6537:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2617,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "6514:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2619,
																"indexExpression": {
																	"id": 2618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2567,
																	"src": "6527:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6514:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1894,
															"src": "6514:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6514:32:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6493:53:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2624,
												"nodeType": "ExpressionStatement",
												"src": "6493:53:12"
											},
											{
												"expression": {
													"id": 2634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2625,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "6556:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2627,
														"indexExpression": {
															"id": 2626,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "6569:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6556:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2632,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2609,
																"src": "6596:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2628,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "6575:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2630,
																"indexExpression": {
																	"id": 2629,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2569,
																	"src": "6588:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6575:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1878,
															"src": "6575:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6575:30:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6556:49:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2635,
												"nodeType": "ExpressionStatement",
												"src": "6556:49:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2638,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2567,
																		"src": "6634:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2637,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2850
																	],
																	"referencedDeclaration": 2850,
																	"src": "6624:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6624:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"baseExpression": {
																	"id": 2640,
																	"name": "debtBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2189,
																	"src": "6643:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2642,
																"indexExpression": {
																	"id": 2641,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2567,
																	"src": "6656:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6643:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6624:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446562743a2063616e6e6f74207472616e7366657220616d6f756e74",
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6663:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2dee5680331f5734d45765d6fd4b7e1bc619c54187dbcaccfe90b6c172b10e89",
																"typeString": "literal_string \"Debt: cannot transfer amount\""
															},
															"value": "Debt: cannot transfer amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2dee5680331f5734d45765d6fd4b7e1bc619c54187dbcaccfe90b6c172b10e89",
																"typeString": "literal_string \"Debt: cannot transfer amount\""
															}
														],
														"id": 2636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6616:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6616:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2646,
												"nodeType": "ExpressionStatement",
												"src": "6616:78:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2648,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2567,
															"src": "6718:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2649,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "6724:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2650,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "6728:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2647,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "6709:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6709:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2652,
												"nodeType": "EmitStatement",
												"src": "6704:30:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6751:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2578,
												"id": 2654,
												"nodeType": "Return",
												"src": "6744:11:12"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 2656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2575,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2573,
												"name": "IERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1613,
												"src": "6242:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1613",
													"typeString": "contract IERC20"
												}
											},
											{
												"id": 2574,
												"name": "ERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1378,
												"src": "6250:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1378",
													"typeString": "contract ERC20"
												}
											}
										],
										"src": "6233:23:12"
									},
									"parameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "6164:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6164:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "6186:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "6206:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6154:71:12"
									},
									"returnParameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "6266:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6266:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6265:6:12"
									},
									"scope": 2971,
									"src": "6133:629:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057,
										1585
									],
									"body": {
										"id": 2677,
										"nodeType": "Block",
										"src": "6863:74:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2669,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "6882:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6882:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2671,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2658,
															"src": "6894:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2672,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2660,
															"src": "6903:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2668,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2832
														],
														"referencedDeclaration": 2832,
														"src": "6873:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6873:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2674,
												"nodeType": "ExpressionStatement",
												"src": "6873:36:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2675,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6926:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2667,
												"id": 2676,
												"nodeType": "Return",
												"src": "6919:11:12"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 2678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2664,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2662,
												"name": "IERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1613,
												"src": "6833:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1613",
													"typeString": "contract IERC20"
												}
											},
											{
												"id": 2663,
												"name": "ERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1378,
												"src": "6841:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1378",
													"typeString": "contract ERC20"
												}
											}
										],
										"src": "6824:23:12"
									},
									"parameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "6785:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6785:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "6802:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6784:32:12"
									},
									"returnParameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "6857:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2665,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6857:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6856:6:12"
									},
									"scope": 2971,
									"src": "6768:169:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 2705,
										"nodeType": "Block",
										"src": "7038:119:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2689,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7057:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7057:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2691,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2680,
															"src": "7069:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2699,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2682,
																	"src": "7117:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2692,
																			"name": "_allowedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2182,
																			"src": "7078:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2695,
																		"indexExpression": {
																			"expression": {
																				"id": 2693,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "7092:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "7092:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7078:25:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2697,
																	"indexExpression": {
																		"id": 2696,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2680,
																		"src": "7104:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7078:34:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1878,
																"src": "7078:38:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7078:50:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2688,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2832
														],
														"referencedDeclaration": 2832,
														"src": "7048:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7048:81:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2702,
												"nodeType": "ExpressionStatement",
												"src": "7048:81:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7146:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2687,
												"id": 2704,
												"nodeType": "Return",
												"src": "7139:11:12"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 2706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2684,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7014:8:12"
									},
									"parameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "6970:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6970:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "6987:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6987:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6969:37:12"
									},
									"returnParameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "7032:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2685,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7032:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7031:6:12"
									},
									"scope": 2971,
									"src": "6943:214:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1149
									],
									"body": {
										"id": 2750,
										"nodeType": "Block",
										"src": "7263:281:12",
										"statements": [
											{
												"assignments": [
													2717
												],
												"declarations": [
													{
														"constant": false,
														"id": 2717,
														"mutability": "mutable",
														"name": "oldValue",
														"nodeType": "VariableDeclaration",
														"scope": 2750,
														"src": "7273:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2716,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7273:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2724,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2718,
															"name": "_allowedValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2182,
															"src": "7292:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2721,
														"indexExpression": {
															"expression": {
																"id": 2719,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7306:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7306:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7292:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2723,
													"indexExpression": {
														"id": 2722,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2708,
														"src": "7318:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7292:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7273:53:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2725,
														"name": "subtractedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2710,
														"src": "7340:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2726,
														"name": "oldValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2717,
														"src": "7359:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7340:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2746,
													"nodeType": "Block",
													"src": "7432:85:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2737,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "7455:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7455:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 2739,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2708,
																		"src": "7467:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2742,
																				"name": "subtractedValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2710,
																				"src": "7489:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2740,
																				"name": "oldValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2717,
																				"src": "7476:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1894,
																			"src": "7476:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7476:29:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2736,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2832
																	],
																	"referencedDeclaration": 2832,
																	"src": "7446:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7446:60:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2745,
															"nodeType": "ExpressionStatement",
															"src": "7446:60:12"
														}
													]
												},
												"id": 2747,
												"nodeType": "IfStatement",
												"src": "7336:181:12",
												"trueBody": {
													"id": 2735,
													"nodeType": "Block",
													"src": "7369:57:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2729,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "7392:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7392:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 2731,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2708,
																		"src": "7404:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 2732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7413:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2728,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2832
																	],
																	"referencedDeclaration": 2832,
																	"src": "7383:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7383:32:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2734,
															"nodeType": "ExpressionStatement",
															"src": "7383:32:12"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2748,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7533:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2715,
												"id": 2749,
												"nodeType": "Return",
												"src": "7526:11:12"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 2751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2712,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7239:8:12"
									},
									"parameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "7190:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7190:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "7207:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7207:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7189:42:12"
									},
									"returnParameters": {
										"id": 2715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2714,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "7257:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7257:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7256:6:12"
									},
									"scope": 2971,
									"src": "7163:381:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1843
									],
									"body": {
										"id": 2806,
										"nodeType": "Block",
										"src": "7866:339:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2762,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "7884:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7884:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2764,
																"name": "treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2184,
																"src": "7898:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7884:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207472656173757279",
															"id": 2766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7908:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25ce132add56eaa7c2c02acda7b74490e770795edea0b2568c7bafb41b80bb6e",
																"typeString": "literal_string \"Only treasury\""
															},
															"value": "Only treasury"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25ce132add56eaa7c2c02acda7b74490e770795edea0b2568c7bafb41b80bb6e",
																"typeString": "literal_string \"Only treasury\""
															}
														],
														"id": 2761,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7876:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7876:48:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2768,
												"nodeType": "ExpressionStatement",
												"src": "7876:48:12"
											},
											{
												"condition": {
													"id": 2769,
													"name": "add",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2757,
													"src": "7938:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2793,
													"nodeType": "Block",
													"src": "8029:80:12",
													"statements": [
														{
															"expression": {
																"id": 2791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2782,
																		"name": "debtBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2189,
																		"src": "8043:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2784,
																	"indexExpression": {
																		"id": 2783,
																		"name": "debtor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2755,
																		"src": "8056:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8043:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2789,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2753,
																			"src": "8091:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 2785,
																				"name": "debtBalances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2189,
																				"src": "8066:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2787,
																			"indexExpression": {
																				"id": 2786,
																				"name": "debtor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2755,
																				"src": "8079:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8066:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1894,
																		"src": "8066:24:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8066:32:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8043:55:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2792,
															"nodeType": "ExpressionStatement",
															"src": "8043:55:12"
														}
													]
												},
												"id": 2794,
												"nodeType": "IfStatement",
												"src": "7934:175:12",
												"trueBody": {
													"id": 2781,
													"nodeType": "Block",
													"src": "7943:80:12",
													"statements": [
														{
															"expression": {
																"id": 2779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2770,
																		"name": "debtBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2189,
																		"src": "7957:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2772,
																	"indexExpression": {
																		"id": 2771,
																		"name": "debtor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2755,
																		"src": "7970:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7957:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2777,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2753,
																			"src": "8005:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 2773,
																				"name": "debtBalances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2189,
																				"src": "7980:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2775,
																			"indexExpression": {
																				"id": 2774,
																				"name": "debtor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2755,
																				"src": "7993:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7980:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1878,
																		"src": "7980:24:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7980:32:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7957:55:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2780,
															"nodeType": "ExpressionStatement",
															"src": "7957:55:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2796,
																	"name": "debtBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2189,
																	"src": "8126:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2798,
																"indexExpression": {
																	"id": 2797,
																	"name": "debtor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2755,
																	"src": "8139:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8126:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2800,
																		"name": "debtor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2755,
																		"src": "8160:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2799,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2850
																	],
																	"referencedDeclaration": 2850,
																	"src": "8150:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8150:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8126:41:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7345584f3a20696e73756666696369656e742062616c616e6365",
															"id": 2803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8169:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2cdfa8224ab12c9ef17cb98685f87402c1593a97433fd7c2abc6f4dacbee4e41",
																"typeString": "literal_string \"sEXO: insufficient balance\""
															},
															"value": "sEXO: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2cdfa8224ab12c9ef17cb98685f87402c1593a97433fd7c2abc6f4dacbee4e41",
																"typeString": "literal_string \"sEXO: insufficient balance\""
															}
														],
														"id": 2795,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8118:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8118:80:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2805,
												"nodeType": "ExpressionStatement",
												"src": "8118:80:12"
											}
										]
									},
									"functionSelector": "ae5c6cd3",
									"id": 2807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeDebt",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2759,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7857:8:12"
									},
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2753,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2807,
												"src": "7785:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7785:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "debtor",
												"nodeType": "VariableDeclaration",
												"scope": 2807,
												"src": "7809:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7809:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "add",
												"nodeType": "VariableDeclaration",
												"scope": 2807,
												"src": "7833:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7833:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7775:72:12"
									},
									"returnParameters": {
										"id": 2760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7866:0:12"
									},
									"scope": 2971,
									"src": "7756:449:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 2831,
										"nodeType": "Block",
										"src": "8384:100:12",
										"statements": [
											{
												"expression": {
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2817,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2182,
																"src": "8394:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2820,
															"indexExpression": {
																"id": 2818,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2809,
																"src": "8408:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8394:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2821,
														"indexExpression": {
															"id": 2819,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2811,
															"src": "8415:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8394:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2822,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2813,
														"src": "8426:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8394:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2824,
												"nodeType": "ExpressionStatement",
												"src": "8394:37:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2826,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2809,
															"src": "8455:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2827,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2811,
															"src": "8462:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2828,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2813,
															"src": "8471:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2825,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "8446:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8446:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2830,
												"nodeType": "EmitStatement",
												"src": "8441:36:12"
											}
										]
									},
									"id": 2832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2815,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8375:8:12"
									},
									"parameters": {
										"id": 2814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "8290:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8290:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2811,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "8313:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8313:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "8338:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8338:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8280:77:12"
									},
									"returnParameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8384:0:12"
									},
									"scope": 2971,
									"src": "8263:221:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1000,
										1558
									],
									"body": {
										"id": 2849,
										"nodeType": "Block",
										"src": "8624:63:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2846,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "8663:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2842,
																"name": "_gonBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "8641:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2844,
															"indexExpression": {
																"id": 2843,
																"name": "who",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2834,
																"src": "8654:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8641:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1971,
														"src": "8641:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8641:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2841,
												"id": 2848,
												"nodeType": "Return",
												"src": "8634:46:12"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 2850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2838,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2836,
												"name": "IERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1613,
												"src": "8591:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1613",
													"typeString": "contract IERC20"
												}
											},
											{
												"id": 2837,
												"name": "ERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1378,
												"src": "8599:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1378",
													"typeString": "contract ERC20"
												}
											}
										],
										"src": "8582:23:12"
									},
									"parameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "8557:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8557:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:13:12"
									},
									"returnParameters": {
										"id": 2841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "8615:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8615:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8614:9:12"
									},
									"scope": 2971,
									"src": "8538:149:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1808
									],
									"body": {
										"id": 2863,
										"nodeType": "Block",
										"src": "8772:52:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2860,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "8800:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2858,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2852,
															"src": "8789:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1955,
														"src": "8789:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8789:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2857,
												"id": 2862,
												"nodeType": "Return",
												"src": "8782:35:12"
											}
										]
									},
									"functionSelector": "1bd39674",
									"id": 2864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gonsForBalance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2854,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8745:8:12"
									},
									"parameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2864,
												"src": "8717:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8717:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8716:16:12"
									},
									"returnParameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2864,
												"src": "8763:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8763:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8762:9:12"
									},
									"scope": 2971,
									"src": "8693:131:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1815
									],
									"body": {
										"id": 2877,
										"nodeType": "Block",
										"src": "8907:50:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2874,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "8933:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2872,
															"name": "gons",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2866,
															"src": "8924:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1971,
														"src": "8924:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8924:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2871,
												"id": 2876,
												"nodeType": "Return",
												"src": "8917:33:12"
											}
										]
									},
									"functionSelector": "7965d56d",
									"id": 2878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceForGons",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2868,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8880:8:12"
									},
									"parameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "gons",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "8854:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8854:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8853:14:12"
									},
									"returnParameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "8898:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8898:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8897:9:12"
									},
									"scope": 2971,
									"src": "8830:127:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1827
									],
									"body": {
										"id": 2891,
										"nodeType": "Block",
										"src": "9152:46:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2888,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2880,
															"src": "9184:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2886,
															"name": "gEXO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "9169:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IgEXO_$1782",
																"typeString": "contract IgEXO"
															}
														},
														"id": 2887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceTo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1774,
														"src": "9169:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256)"
														}
													},
													"id": 2889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9169:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2885,
												"id": 2890,
												"nodeType": "Return",
												"src": "9162:29:12"
											}
										]
									},
									"functionSelector": "095be818",
									"id": 2892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toG",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2882,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9125:8:12"
									},
									"parameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2892,
												"src": "9095:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9095:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9094:16:12"
									},
									"returnParameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2892,
												"src": "9143:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9143:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9142:9:12"
									},
									"scope": 2971,
									"src": "9082:116:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1834
									],
									"body": {
										"id": 2905,
										"nodeType": "Block",
										"src": "9393:48:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2902,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2894,
															"src": "9427:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2900,
															"name": "gEXO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "9410:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IgEXO_$1782",
																"typeString": "contract IgEXO"
															}
														},
														"id": 2901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1767,
														"src": "9410:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256)"
														}
													},
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9410:24:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2899,
												"id": 2904,
												"nodeType": "Return",
												"src": "9403:31:12"
											}
										]
									},
									"functionSelector": "b8fbd533",
									"id": 2906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fromG",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2896,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9366:8:12"
									},
									"parameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "9336:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9336:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9335:16:12"
									},
									"returnParameters": {
										"id": 2899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "9384:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9384:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9383:9:12"
									},
									"scope": 2971,
									"src": "9321:120:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1801
									],
									"body": {
										"id": 2939,
										"nodeType": "Block",
										"src": "9557:217:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 2933,
																			"name": "stakingContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2136,
																			"src": "9720:15:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2932,
																		"name": "IStaking",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1736,
																		"src": "9711:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IStaking_$1736_$",
																			"typeString": "type(contract IStaking)"
																		}
																	},
																	"id": 2934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9711:25:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IStaking_$1736",
																		"typeString": "contract IStaking"
																	}
																},
																"id": 2935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "supplyInWarmup",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1735,
																"src": "9711:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 2936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9711:42:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"id": 2924,
																									"name": "gEXO",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2138,
																									"src": "9667:4:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IgEXO_$1782",
																										"typeString": "contract IgEXO"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_IgEXO_$1782",
																										"typeString": "contract IgEXO"
																									}
																								],
																								"id": 2923,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "9659:7:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2922,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "9659:7:12",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2925,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "9659:13:12",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2921,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1613,
																						"src": "9652:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$1613_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 2926,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9652:21:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1613",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "totalSupply",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1551,
																				"src": "9652:33:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																					"typeString": "function () view external returns (uint256)"
																				}
																			},
																			"id": 2928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9652:35:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2919,
																			"name": "gEXO",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2138,
																			"src": "9635:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IgEXO_$1782",
																				"typeString": "contract IgEXO"
																			}
																		},
																		"id": 2920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1767,
																		"src": "9635:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view external returns (uint256)"
																		}
																	},
																	"id": 2929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9635:53:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2915,
																					"name": "stakingContract",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2136,
																					"src": "9613:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2914,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					2850
																				],
																				"referencedDeclaration": 2850,
																				"src": "9603:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view returns (uint256)"
																				}
																			},
																			"id": 2916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9603:26:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2912,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "9586:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1894,
																		"src": "9586:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9586:44:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1878,
																"src": "9586:48:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9586:103:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1878,
														"src": "9586:107:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9586:181:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2911,
												"id": 2938,
												"nodeType": "Return",
												"src": "9567:200:12"
											}
										]
									},
									"functionSelector": "9358928b",
									"id": 2940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "circulatingSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2908,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9530:8:12"
									},
									"parameters": {
										"id": 2907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9515:2:12"
									},
									"returnParameters": {
										"id": 2911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2910,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2940,
												"src": "9548:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9548:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9547:9:12"
									},
									"scope": 2971,
									"src": "9489:285:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1820
									],
									"body": {
										"id": 2950,
										"nodeType": "Block",
										"src": "9836:45:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2947,
															"name": "INDEX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "9868:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2946,
														"name": "balanceForGons",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2878,
														"src": "9853:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9853:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2945,
												"id": 2949,
												"nodeType": "Return",
												"src": "9846:28:12"
											}
										]
									},
									"functionSelector": "2986c0e5",
									"id": 2951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2942,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9809:8:12"
									},
									"parameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9794:2:12"
									},
									"returnParameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "9827:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9826:9:12"
									},
									"scope": 2971,
									"src": "9780:101:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1037,
										1576
									],
									"body": {
										"id": 2969,
										"nodeType": "Block",
										"src": "9993:54:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2963,
															"name": "_allowedValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2182,
															"src": "10010:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2965,
														"indexExpression": {
															"id": 2964,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2953,
															"src": "10024:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10010:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2967,
													"indexExpression": {
														"id": 2966,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2955,
														"src": "10032:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10010:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2962,
												"id": 2968,
												"nodeType": "Return",
												"src": "10003:37:12"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 2970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2959,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2957,
												"name": "IERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1613,
												"src": "9960:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1613",
													"typeString": "contract IERC20"
												}
											},
											{
												"id": 2958,
												"name": "ERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1378,
												"src": "9968:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1378",
													"typeString": "contract ERC20"
												}
											}
										],
										"src": "9951:23:12"
									},
									"parameters": {
										"id": 2956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "9906:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9906:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2955,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "9922:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9922:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9905:33:12"
									},
									"returnParameters": {
										"id": 2962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "9984:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9984:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9983:9:12"
									},
									"scope": 2971,
									"src": "9887:160:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2972,
							"src": "211:9838:12"
						}
					],
					"src": "37:10013:12"
				},
				"id": 12
			}
		}
	}
}