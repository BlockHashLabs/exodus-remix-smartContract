{
	"id": "92d07662447c530e597c818fed196bfb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"Distributor/StakingDistributor.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.7.5;\n\nimport \"./SafeERC20.sol\";\nimport \"./SafeMath.sol\";\n\nimport \"./IERC20.sol\";\nimport \"./ITreasury.sol\";\nimport \"./IDistributor.sol\";\n\nimport \"./OlympusAccessControlled.sol\";\n\ncontract Distributor is IDistributor, ExodusAccessControlled {\n    /* ========== DEPENDENCIES ========== */\n\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    /* ====== VARIABLES ====== */\n\n    IERC20 private immutable exo;\n    ITreasury private immutable treasury;\n    address private immutable staking;\n\n    mapping(uint256 => Adjust) public adjustments;\n    uint256 public override bounty;\n\n    uint256 private immutable rateDenominator = 1_000_000;\n\n    /* ====== STRUCTS ====== */\n\n    struct Info {\n        uint256 rate; // in ten-thousandths ( 5000 = 0.5% )\n        address recipient;\n    }\n    Info[] public info;\n\n    struct Adjust {\n        bool add;\n        uint256 rate;\n        uint256 target;\n    }\n\n    /* ====== CONSTRUCTOR ====== */\n\n    constructor(\n        address _treasury,\n        address _exo,\n        address _staking,\n        address _authority\n    ) ExodusAccessControlled(IExodusAuthority(_authority)) {\n        require(_treasury != address(0), \"Zero address: Treasury\");\n        treasury = ITreasury(_treasury);\n        require(_exo != address(0), \"Zero address: EXO\");\n        exo = IERC20(_exo);\n        require(_staking != address(0), \"Zero address: Staking\");\n        staking = _staking;\n    }\n\n    /* ====== PUBLIC FUNCTIONS ====== */\n\n    /**\n        @notice send epoch reward to staking contract\n     */\n    function distribute() external override {\n        require(msg.sender == staking, \"Only staking\");\n        // distribute rewards to each recipient\n        for (uint256 i = 0; i < info.length; i++) {\n            if (info[i].rate > 0) {\n                treasury.mint(info[i].recipient, nextRewardAt(info[i].rate)); // mint and send tokens\n                adjust(i); // check for adjustment\n            }\n        }\n    }\n\n    function retrieveBounty() external override returns (uint256) {\n        require(msg.sender == staking, \"Only staking\");\n        // If the distributor bounty is > 0, mint it for the staking contract.\n        if (bounty > 0) {\n            treasury.mint(address(staking), bounty);\n        }\n\n        return bounty;\n    }\n\n    /* ====== INTERNAL FUNCTIONS ====== */\n\n    /**\n        @notice increment reward rate for collector\n     */\n    function adjust(uint256 _index) internal {\n        Adjust memory adjustment = adjustments[_index];\n        if (adjustment.rate != 0) {\n            if (adjustment.add) {\n                // if rate should increase\n                info[_index].rate = info[_index].rate.add(adjustment.rate); // raise rate\n                if (info[_index].rate >= adjustment.target) {\n                    // if target met\n                    adjustments[_index].rate = 0; // turn off adjustment\n                    info[_index].rate = adjustment.target; // set to target\n                }\n            } else {\n                // if rate should decrease\n                if (info[_index].rate > adjustment.rate) {\n                    // protect from underflow\n                    info[_index].rate = info[_index].rate.sub(adjustment.rate); // lower rate\n                } else {\n                    info[_index].rate = 0;\n                }\n\n                if (info[_index].rate <= adjustment.target) {\n                    // if target met\n                    adjustments[_index].rate = 0; // turn off adjustment\n                    info[_index].rate = adjustment.target; // set to target\n                }\n            }\n        }\n    }\n\n    /* ====== VIEW FUNCTIONS ====== */\n\n    /**\n        @notice view function for next reward at given rate\n        @param _rate uint\n        @return uint\n     */\n    function nextRewardAt(uint256 _rate) public view override returns (uint256) {\n        return exo.totalSupply().mul(_rate).div(rateDenominator);\n    }\n\n    /**\n        @notice view function for next reward for specified address\n        @param _recipient address\n        @return uint\n     */\n    function nextRewardFor(address _recipient) public view override returns (uint256) {\n        uint256 reward;\n        for (uint256 i = 0; i < info.length; i++) {\n            if (info[i].recipient == _recipient) {\n                reward = reward.add(nextRewardAt(info[i].rate));\n            }\n        }\n        return reward;\n    }\n\n    /* ====== POLICY FUNCTIONS ====== */\n\n    /**\n     * @notice set bounty to incentivize keepers\n     * @param _bounty uint256\n     */\n    function setBounty(uint256 _bounty) external override onlyGovernor {\n        require(_bounty <= 2e9, \"Too much\");\n        bounty = _bounty;\n    }\n\n    /**\n        @notice adds recipient for distributions\n        @param _recipient address\n        @param _rewardRate uint\n     */\n    function addRecipient(address _recipient, uint256 _rewardRate) external override onlyGovernor {\n        require(_recipient != address(0), \"Zero address: Recipient\");\n        require(_rewardRate <= rateDenominator, \"Rate cannot exceed denominator\");\n        info.push(Info({recipient: _recipient, rate: _rewardRate}));\n    }\n\n    /**\n        @notice removes recipient for distributions\n        @param _index uint\n     */\n    function removeRecipient(uint256 _index) external override {\n        require(\n            msg.sender == authority.governor() || msg.sender == authority.guardian(),\n            \"Caller is not governor or guardian\"\n        );\n        require(info[_index].recipient != address(0), \"Recipient does not exist\");\n        info[_index].recipient = address(0);\n        info[_index].rate = 0;\n    }\n\n    /**\n        @notice set adjustment info for a collector's reward rate\n        @param _index uint\n        @param _add bool\n        @param _rate uint\n        @param _target uint\n     */\n    function setAdjustment(\n        uint256 _index,\n        bool _add,\n        uint256 _rate,\n        uint256 _target\n    ) external override {\n        require(\n            msg.sender == authority.governor() || msg.sender == authority.guardian(),\n            \"Caller is not governor or guardian\"\n        );\n        require(info[_index].recipient != address(0), \"Recipient does not exist\");\n\n        if (msg.sender == authority.guardian()) {\n            require(_rate <= info[_index].rate.mul(25).div(1000), \"Limiter: cannot adjust by >2.5%\");\n        }\n\n        if (!_add) {\n            require(_rate <= info[_index].rate, \"Cannot decrease rate by more than it already is\");\n        }\n\n        adjustments[_index] = Adjust({add: _add, rate: _rate, target: _target});\n    }\n}\n"
			},
			"Distributor/OlympusAccessControlled.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.7.5;\n\nimport \"./IOlympusAuthority.sol\";\n\nabstract contract ExodusAccessControlled {\n    /* ========== EVENTS ========== */\n\n    event AuthorityUpdated(IExodusAuthority indexed authority);\n\n    string UNAUTHORIZED = \"UNAUTHORIZED\"; // save gas\n\n    /* ========== STATE VARIABLES ========== */\n\n    IExodusAuthority public authority;\n\n    /* ========== Constructor ========== */\n\n    constructor(IExodusAuthority _authority) {\n        authority = _authority;\n        emit AuthorityUpdated(_authority);\n    }\n\n    /* ========== MODIFIERS ========== */\n\n    modifier onlyGovernor() {\n        require(msg.sender == authority.governor(), UNAUTHORIZED);\n        _;\n    }\n\n    modifier onlyGuardian() {\n        require(msg.sender == authority.guardian(), UNAUTHORIZED);\n        _;\n    }\n\n    modifier onlyPolicy() {\n        require(msg.sender == authority.policy(), UNAUTHORIZED);\n        _;\n    }\n\n    modifier onlyVault() {\n        require(msg.sender == authority.vault(), UNAUTHORIZED);\n        _;\n    }\n\n    /* ========== GOV ONLY ========== */\n\n    function setAuthority(IExodusAuthority _newAuthority) external onlyGovernor {\n        authority = _newAuthority;\n        emit AuthorityUpdated(_newAuthority);\n    }\n}\n"
			},
			"Distributor/IDistributor.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\ninterface IDistributor {\n    function distribute() external;\n\n    function bounty() external view returns (uint256);\n\n    function retrieveBounty() external returns (uint256);\n\n    function nextRewardAt(uint256 _rate) external view returns (uint256);\n\n    function nextRewardFor(address _recipient) external view returns (uint256);\n\n    function setBounty(uint256 _bounty) external;\n\n    function addRecipient(address _recipient, uint256 _rewardRate) external;\n\n    function removeRecipient(uint256 _index) external;\n\n    function setAdjustment(\n        uint256 _index,\n        bool _add,\n        uint256 _rate,\n        uint256 _target\n    ) external;\n}\n"
			},
			"Distributor/ITreasury.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\ninterface ITreasury {\n    function deposit(\n        uint256 _amount,\n        address _token,\n        uint256 _profit\n    ) external returns (uint256);\n\n    function withdraw(uint256 _amount, address _token) external;\n\n    function tokenValue(address _token, uint256 _amount) external view returns (uint256 value_);\n\n    function mint(address _recipient, uint256 _amount) external;\n\n    function manage(address _token, uint256 _amount) external;\n\n    function incurDebt(uint256 amount_, address token_) external;\n\n    function repayDebtWithReserve(uint256 amount_, address token_) external;\n\n    function excessReserves() external view returns (uint256);\n\n    function baseSupply() external view returns (uint256);\n}\n"
			},
			"Distributor/IERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"Distributor/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.7.5;\n\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        assert(a == b * c + (a % b)); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    // Only used in the  BondingCalculator.sol\n    function sqrrt(uint256 a) internal pure returns (uint256 c) {\n        if (a > 3) {\n            c = a;\n            uint256 b = add(div(a, 2), 1);\n            while (b < c) {\n                c = b;\n                b = div(add(div(a, b), b), 2);\n            }\n        } else if (a != 0) {\n            c = 1;\n        }\n    }\n}\n"
			},
			"Distributor/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.7.5;\n\nimport {IERC20} from \"./IERC20.sol\";\n\n/// @notice Safe IERC20 and ETH transfer library that safely handles missing return values.\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol)\n/// Taken from Solmate\nlibrary SafeERC20 {\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        (bool success, bytes memory data) = address(token).call(\n            abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, amount)\n        );\n\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"TRANSFER_FROM_FAILED\");\n    }\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        (bool success, bytes memory data) = address(token).call(\n            abi.encodeWithSelector(IERC20.transfer.selector, to, amount)\n        );\n\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"TRANSFER_FAILED\");\n    }\n\n    function safeApprove(\n        IERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        (bool success, bytes memory data) = address(token).call(\n            abi.encodeWithSelector(IERC20.approve.selector, to, amount)\n        );\n\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"APPROVE_FAILED\");\n    }\n\n    function safeTransferETH(address to, uint256 amount) internal {\n        (bool success, ) = to.call{value: amount}(new bytes(0));\n\n        require(success, \"ETH_TRANSFER_FAILED\");\n    }\n}\n"
			},
			"Distributor/IOlympusAuthority.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\ninterface IExodusAuthority {\n    /* ========== EVENTS ========== */\n\n    event GovernorPushed(address indexed from, address indexed to, bool _effectiveImmediately);\n    event GuardianPushed(address indexed from, address indexed to, bool _effectiveImmediately);\n    event PolicyPushed(address indexed from, address indexed to, bool _effectiveImmediately);\n    event VaultPushed(address indexed from, address indexed to, bool _effectiveImmediately);\n\n    event GovernorPulled(address indexed from, address indexed to);\n    event GuardianPulled(address indexed from, address indexed to);\n    event PolicyPulled(address indexed from, address indexed to);\n    event VaultPulled(address indexed from, address indexed to);\n\n    /* ========== VIEW ========== */\n\n    function governor() external view returns (address);\n\n    function guardian() external view returns (address);\n\n    function policy() external view returns (address);\n\n    function vault() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Distributor/IDistributor.sol": {
				"IDistributor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardRate",
									"type": "uint256"
								}
							],
							"name": "addRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bounty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "nextRewardAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "nextRewardFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "removeRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "retrieveBounty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_add",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_target",
									"type": "uint256"
								}
							],
							"name": "setAdjustment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "setBounty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addRecipient(address,uint256)": "f7982243",
							"bounty()": "943dfef1",
							"distribute()": "e4fc6b6d",
							"nextRewardAt(uint256)": "c9fa8b2a",
							"nextRewardFor(address)": "36d33f44",
							"removeRecipient(uint256)": "8e69e255",
							"retrieveBounty()": "e7187e8a",
							"setAdjustment(uint256,bool,uint256,uint256)": "5db854b0",
							"setBounty(uint256)": "5d87d363"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"name\":\"addRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bounty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"nextRewardAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"nextRewardFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"removeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveBounty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_add\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_target\",\"type\":\"uint256\"}],\"name\":\"setAdjustment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"setBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Distributor/IDistributor.sol\":\"IDistributor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"Distributor/IDistributor.sol\":{\"keccak256\":\"0xd6fc7153d8030366c99d408843ea948ba7b79c269f809ddbd31b78d7d71751c8\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e4dd2044e7e3c93eed1b90abae9ed98b11bbf5a3b6503b50d5a902b3431bbdd2\",\"dweb:/ipfs/Qma56BMxif1AFH7ZpcGALFwYWNyiD9X43yezcFtE6Quj3V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Distributor/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Distributor/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"Distributor/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Distributor/IOlympusAuthority.sol": {
				"IExodusAuthority": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "GovernorPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_effectiveImmediately",
									"type": "bool"
								}
							],
							"name": "GovernorPushed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "GuardianPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_effectiveImmediately",
									"type": "bool"
								}
							],
							"name": "GuardianPushed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "PolicyPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_effectiveImmediately",
									"type": "bool"
								}
							],
							"name": "PolicyPushed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "VaultPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_effectiveImmediately",
									"type": "bool"
								}
							],
							"name": "VaultPushed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "governor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "guardian",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "policy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"governor()": "0c340a24",
							"guardian()": "452a9320",
							"policy()": "0505c8c9",
							"vault()": "fbfa77cf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"GovernorPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_effectiveImmediately\",\"type\":\"bool\"}],\"name\":\"GovernorPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"GuardianPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_effectiveImmediately\",\"type\":\"bool\"}],\"name\":\"GuardianPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"PolicyPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_effectiveImmediately\",\"type\":\"bool\"}],\"name\":\"PolicyPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"VaultPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_effectiveImmediately\",\"type\":\"bool\"}],\"name\":\"VaultPushed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Distributor/IOlympusAuthority.sol\":\"IExodusAuthority\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"Distributor/IOlympusAuthority.sol\":{\"keccak256\":\"0x81a1f77da7ddb3bf1defad03673098cc8d01fbb1ea29d9ef4968b205746f041c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://2ae99a51e64ed363058e8b18c33b1f498f84d3588f71c442e427fc0021a79a04\",\"dweb:/ipfs/QmTkMMtvLKnhqEtRWCimY2r3oY5B8FpHqmG5fuhbLQKRJg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Distributor/ITreasury.sol": {
				"ITreasury": {
					"abi": [
						{
							"inputs": [],
							"name": "baseSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_profit",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "excessReserves",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "token_",
									"type": "address"
								}
							],
							"name": "incurDebt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "manage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "token_",
									"type": "address"
								}
							],
							"name": "repayDebtWithReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "tokenValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"baseSupply()": "860f5048",
							"deposit(uint256,address,uint256)": "bc157ac1",
							"excessReserves()": "0c3513a8",
							"incurDebt(uint256,address)": "12422d23",
							"manage(address,uint256)": "0b0eee30",
							"mint(address,uint256)": "40c10f19",
							"repayDebtWithReserve(uint256,address)": "d796ffb8",
							"tokenValue(address,uint256)": "f1821783",
							"withdraw(uint256,address)": "00f714ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"baseSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_profit\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excessReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"incurDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"manage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"repayDebtWithReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"tokenValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Distributor/ITreasury.sol\":\"ITreasury\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"Distributor/ITreasury.sol\":{\"keccak256\":\"0x3a7e171916da6bf9b28904c2adc6ede32896a841e7f7ede0ad60da6804659c56\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://591b853c1ba8b666992cabc4279b1d9bfc32e79c618b14e42026bc4ab5a8b9f3\",\"dweb:/ipfs/QmNMn45JaWKZvMg6Fk8JTuCTVJRcAozFmEAGmLHKr7cZ1b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Distributor/OlympusAccessControlled.sol": {
				"ExodusAccessControlled": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IExodusAuthority",
									"name": "authority",
									"type": "address"
								}
							],
							"name": "AuthorityUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"internalType": "contract IExodusAuthority",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IExodusAuthority",
									"name": "_newAuthority",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"authority()": "bf7e214f",
							"setAuthority(address)": "7a9e5e4b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IExodusAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IExodusAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IExodusAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Distributor/OlympusAccessControlled.sol\":\"ExodusAccessControlled\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"Distributor/IOlympusAuthority.sol\":{\"keccak256\":\"0x81a1f77da7ddb3bf1defad03673098cc8d01fbb1ea29d9ef4968b205746f041c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://2ae99a51e64ed363058e8b18c33b1f498f84d3588f71c442e427fc0021a79a04\",\"dweb:/ipfs/QmTkMMtvLKnhqEtRWCimY2r3oY5B8FpHqmG5fuhbLQKRJg\"]},\"Distributor/OlympusAccessControlled.sol\":{\"keccak256\":\"0xe08e1633d46748f33f8e4bab7cc743f5f427174aa54ad4b9066e8106aad66b69\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://01010d4ba59a88af6b3dd2fe46d06ce141effdf0421dfaa8dc91b8d3cc895654\",\"dweb:/ipfs/QmaPzow7X4CNeCNUd2vgwDpbnqvHxCnQV3L2kfAFu56qAX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 283,
								"contract": "Distributor/OlympusAccessControlled.sol:ExodusAccessControlled",
								"label": "UNAUTHORIZED",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 285,
								"contract": "Distributor/OlympusAccessControlled.sol:ExodusAccessControlled",
								"label": "authority",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IExodusAuthority)205"
							}
						],
						"types": {
							"t_contract(IExodusAuthority)205": {
								"encoding": "inplace",
								"label": "contract IExodusAuthority",
								"numberOfBytes": "20"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Distributor/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"author": "Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol) Taken from Solmate",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Distributor/SafeERC20.sol\":354:1685  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Distributor/SafeERC20.sol\":354:1685  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208ee52050b68de8104bf795b027f90b875efaff87698cb22efe25363f6413b29c64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ee52050b68de8104bf795b027f90b875efaff87698cb22efe25363f6413b29c64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xE5 KECCAK256 POP 0xB6 DUP14 0xE8 LT 0x4B 0xF7 SWAP6 0xB0 0x27 0xF9 SIGNEXTEND DUP8 0x5E STATICCALL SELFDESTRUCT DUP8 PUSH10 0x8CB22EFE25363F6413B2 SWAP13 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "354:1331:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ee52050b68de8104bf795b027f90b875efaff87698cb22efe25363f6413b29c64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xE5 KECCAK256 POP 0xB6 DUP14 0xE8 LT 0x4B 0xF7 SWAP6 0xB0 0x27 0xF9 SIGNEXTEND DUP8 0x5E STATICCALL SELFDESTRUCT DUP8 PUSH10 0x8CB22EFE25363F6413B2 SWAP13 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "354:1331:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ee52050b68de8104bf795b027f90b875efaff87698cb22efe25363f6413b29c64736f6c63430007050033",
									".code": [
										{
											"begin": 354,
											"end": 1685,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol) Taken from Solmate\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Safe IERC20 and ETH transfer library that safely handles missing return values.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Distributor/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"Distributor/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"Distributor/SafeERC20.sol\":{\"keccak256\":\"0x873d82e1f38006c425bcb544d8cca59114ca252f64457e2cc3376ef9a68f2c8e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://de509f28376467145aff3d45a974708c22838fb21c13f036a79d55d7b389078b\",\"dweb:/ipfs/QmTVAVLp2cgCV3MHnFv1YJbH4eYW4xtayLvpmZR5t8CGYc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Safe IERC20 and ETH transfer library that safely handles missing return values.",
						"version": 1
					}
				}
			},
			"Distributor/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Distributor/SafeMath.sol\":132:1759  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Distributor/SafeMath.sol\":132:1759  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220404a16cbd7e0d996539c4e967851f0fe2b90e04e8822c31aa242f13b06094a2164736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220404a16cbd7e0d996539c4e967851f0fe2b90e04e8822c31aa242f13b06094a2164736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x4A AND 0xCB 0xD7 0xE0 0xD9 SWAP7 MSTORE8 SWAP13 0x4E SWAP7 PUSH25 0x51F0FE2B90E04E8822C31AA242F13B06094A2164736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "132:1627:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220404a16cbd7e0d996539c4e967851f0fe2b90e04e8822c31aa242f13b06094a2164736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x4A AND 0xCB 0xD7 0xE0 0xD9 SWAP7 MSTORE8 SWAP13 0x4E SWAP7 PUSH25 0x51F0FE2B90E04E8822C31AA242F13B06094A2164736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "132:1627:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sqrrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220404a16cbd7e0d996539c4e967851f0fe2b90e04e8822c31aa242f13b06094a2164736f6c63430007050033",
									".code": [
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Distributor/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"Distributor/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Distributor/StakingDistributor.sol": {
				"Distributor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_exo",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_staking",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_authority",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IExodusAuthority",
									"name": "authority",
									"type": "address"
								}
							],
							"name": "AuthorityUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardRate",
									"type": "uint256"
								}
							],
							"name": "addRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "adjustments",
							"outputs": [
								{
									"internalType": "bool",
									"name": "add",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "rate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "target",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"internalType": "contract IExodusAuthority",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bounty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "info",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rate",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "nextRewardAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "nextRewardFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "removeRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "retrieveBounty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_add",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_target",
									"type": "uint256"
								}
							],
							"name": "setAdjustment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IExodusAuthority",
									"name": "_newAuthority",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "setBounty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addRecipient(address,uint256)": {
								"params": {
									"_recipient": "address",
									"_rewardRate": "uint"
								}
							},
							"nextRewardAt(uint256)": {
								"params": {
									"_rate": "uint"
								},
								"returns": {
									"_0": "uint"
								}
							},
							"nextRewardFor(address)": {
								"params": {
									"_recipient": "address"
								},
								"returns": {
									"_0": "uint"
								}
							},
							"removeRecipient(uint256)": {
								"params": {
									"_index": "uint"
								}
							},
							"setAdjustment(uint256,bool,uint256,uint256)": {
								"params": {
									"_add": "bool",
									"_index": "uint",
									"_rate": "uint",
									"_target": "uint"
								}
							},
							"setBounty(uint256)": {
								"params": {
									"_bounty": "uint256"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Distributor/OlympusAccessControlled.sol\":255:291  string UNAUTHORIZED = \"UNAUTHORIZED\" */\n  0x0140\n    /* \"Distributor/StakingDistributor.sol\":234:6658  contract Distributor is IDistributor, ExodusAccessControlled {... */\n  0x40\n    /* \"Distributor/OlympusAccessControlled.sol\":255:291  string UNAUTHORIZED = \"UNAUTHORIZED\" */\n  mstore\n  0x0c\n    /* \"Distributor/StakingDistributor.sol\":234:6658  contract Distributor is IDistributor, ExodusAccessControlled {... */\n  0x0100\n    /* \"Distributor/OlympusAccessControlled.sol\":255:291  string UNAUTHORIZED = \"UNAUTHORIZED\" */\n  dup2\n  swap1\n  mstore\n  shl(0xa2, 0x15539055551213d492569151)\n  0x0120\n  swap1\n  dup2\n  mstore\n  tag_1\n  swap2\n  0x00\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"Distributor/StakingDistributor.sol\":695:704  1_000_000 */\n  0x0f4240\n    /* \"Distributor/StakingDistributor.sol\":651:704  uint256 private immutable rateDenominator = 1_000_000 */\n  0xe0\n  mstore\n    /* \"Distributor/StakingDistributor.sol\":1008:1478  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n  dup1\n  mload\n  0x20\n  dup3\n  add\n  mload\n  0x40\n  dup1\n  dup5\n  add\n  mload\n  0x60\n  swap1\n  swap5\n  add\n  mload\n    /* \"Distributor/OlympusAccessControlled.sol\":495:504  authority */\n  0x01\n    /* \"Distributor/OlympusAccessControlled.sol\":495:517  authority = _authority */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Distributor/OlympusAccessControlled.sol\":532:560  AuthorityUpdated(_authority) */\n  swap2\n  mload\n    /* \"Distributor/StakingDistributor.sol\":1008:1478  constructor(... */\n  swap4\n  swap5\n  swap3\n  swap4\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"Distributor/OlympusAccessControlled.sol\":532:560  AuthorityUpdated(_authority) */\n  0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad\n  swap1\n  0x00\n  swap1\n  log2\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Distributor/StakingDistributor.sol\":1200:1223  _treasury != address(0) */\n  dup5\n  and\n    /* \"Distributor/StakingDistributor.sol\":1192:1250  require(_treasury != address(0), \"Zero address: Treasury\") */\n  tag_9\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x16\n  0x24\n  dup3\n  add\n  mstore\n  0x5a65726f20616464726573733a20547265617375727900000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_9:\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"Distributor/StakingDistributor.sol\":1260:1291  treasury = ITreasury(_treasury) */\n  0x60\n  dup6\n  swap1\n  shl\n  and\n  0xa0\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Distributor/StakingDistributor.sol\":1309:1327  _exo != address(0) */\n  dup4\n  and\n    /* \"Distributor/StakingDistributor.sol\":1301:1349  require(_exo != address(0), \"Zero address: EXO\") */\n  tag_10\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x11\n  0x24\n  dup3\n  add\n  mstore\n  shl(0x78, 0x5a65726f20616464726573733a2045584f)\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_10:\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"Distributor/StakingDistributor.sol\":1359:1377  exo = IERC20(_exo) */\n  0x60\n  dup5\n  swap1\n  shl\n  and\n  0x80\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Distributor/StakingDistributor.sol\":1395:1417  _staking != address(0) */\n  dup3\n  and\n    /* \"Distributor/StakingDistributor.sol\":1387:1443  require(_staking != address(0), \"Zero address: Staking\") */\n  tag_11\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x15\n  0x24\n  dup3\n  add\n  mstore\n  0x5a65726f20616464726573733a205374616b696e670000000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_11:\n  pop\n    /* \"Distributor/StakingDistributor.sol\":1453:1471  staking = _staking */\n  0x60\n  shl\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n  0xc0\n  mstore\n  pop\n    /* \"Distributor/StakingDistributor.sol\":234:6658  contract Distributor is IDistributor, ExodusAccessControlled {... */\n  tag_12\n  swap1\n  pop\n  jump\ntag_2:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_14\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_17)\ntag_14:\n  dup3\n  0x1f\n  lt\n  tag_15\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_17)\ntag_15:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_17\n  jumpi\n  swap2\n  dup3\n  add\ntag_16:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_16)\ntag_17:\n  pop\n  tag_18\n  swap3\n  swap2\n  pop\n  tag_19\n  jump\t// in\ntag_18:\n  pop\n  swap1\n  jump\t// out\ntag_19:\ntag_20:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_18\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_20)\ntag_12:\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  shr(0x60, mload(0xc0))\n  mload(0xe0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n  assignImmutable(\"0xe216240695da412145d9df04d3b0c5fca4d43b99b7d0d5386b61bbf0097f7efd\")\n  assignImmutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n  assignImmutable(\"0x97798a7ce1eedb778fe135ba4f72c5cd61b1904f61f817965236ff22acf6c32a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Distributor/StakingDistributor.sol\":234:6658  contract Distributor is IDistributor, ExodusAccessControlled {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x943dfef1\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xc9fa8b2a\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xc9fa8b2a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe4fc6b6d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe7187e8a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf7982243\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x943dfef1\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbc3b2b12\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xbf7e214f\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x5db854b0\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x5db854b0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7a9e5e4b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8e69e255\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x2e340599\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x36d33f44\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5d87d363\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Distributor/StakingDistributor.sol\":855:873  Info[] public info */\n    tag_3:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      calldataload\n      tag_21\n      jump\t// in\n    tag_19:\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"Distributor/StakingDistributor.sol\":4129:4457  function nextRewardFor(address _recipient) public view override returns (uint256) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_24\n      jump\t// in\n    tag_22:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Distributor/StakingDistributor.sol\":4600:4745  function setBounty(uint256 _bounty) external override onlyGovernor {... */\n    tag_5:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      calldataload\n      tag_27\n      jump\t// in\n    tag_25:\n      stop\n        /* \"Distributor/StakingDistributor.sol\":5888:6656  function setAdjustment(... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      add\n      calldataload\n      tag_30\n      jump\t// in\n        /* \"Distributor/OlympusAccessControlled.sol\":1108:1272  function setAuthority(IExodusAuthority _newAuthority) external onlyGovernor {... */\n    tag_7:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_33\n      jump\t// in\n        /* \"Distributor/StakingDistributor.sol\":5306:5694  function removeRecipient(uint256 _index) external override {... */\n    tag_8:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      calldataload\n      tag_36\n      jump\t// in\n        /* \"Distributor/StakingDistributor.sol\":614:644  uint256 public override bounty */\n    tag_9:\n      tag_22\n      tag_38\n      jump\t// in\n        /* \"Distributor/StakingDistributor.sol\":563:608  mapping(uint256 => Adjust) public adjustments */\n    tag_10:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      calldataload\n      tag_41\n      jump\t// in\n    tag_39:\n      0x40\n      dup1\n      mload\n      swap4\n      iszero\n      iszero\n      dup5\n      mstore\n      0x20\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      dup3\n      dup3\n      add\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x60\n      add\n      swap1\n      return\n        /* \"Distributor/OlympusAccessControlled.sol\":359:392  IExodusAuthority public authority */\n    tag_11:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Distributor/StakingDistributor.sol\":3835:3984  function nextRewardAt(uint256 _rate) public view override returns (uint256) {... */\n    tag_12:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      calldataload\n      tag_46\n      jump\t// in\n        /* \"Distributor/StakingDistributor.sol\":1596:2012  function distribute() external override {... */\n    tag_13:\n      tag_25\n      tag_48\n      jump\t// in\n        /* \"Distributor/StakingDistributor.sol\":2018:2335  function retrieveBounty() external override returns (uint256) {... */\n    tag_14:\n      tag_22\n      tag_50\n      jump\t// in\n        /* \"Distributor/StakingDistributor.sol\":4882:5205  function addRecipient(address _recipient, uint256 _rewardRate) external override onlyGovernor {... */\n    tag_15:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_53\n      jump\t// in\n        /* \"Distributor/StakingDistributor.sol\":855:873  Info[] public info */\n    tag_21:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup3\n      jump\t// out\n        /* \"Distributor/StakingDistributor.sol\":4129:4457  function nextRewardFor(address _recipient) public view override returns (uint256) {... */\n    tag_24:\n        /* \"Distributor/StakingDistributor.sol\":4202:4209  uint256 */\n      0x00\n        /* \"Distributor/StakingDistributor.sol\":4221:4235  uint256 reward */\n      dup1\n        /* \"Distributor/StakingDistributor.sol\":4250:4259  uint256 i */\n      0x00\n        /* \"Distributor/StakingDistributor.sol\":4245:4428  for (uint256 i = 0; i < info.length; i++) {... */\n    tag_57:\n        /* \"Distributor/StakingDistributor.sol\":4269:4273  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":4269:4280  info.length */\n      sload\n        /* \"Distributor/StakingDistributor.sol\":4265:4280  i < info.length */\n      dup2\n      lt\n        /* \"Distributor/StakingDistributor.sol\":4245:4428  for (uint256 i = 0; i < info.length; i++) {... */\n      iszero\n      tag_58\n      jumpi\n        /* \"Distributor/StakingDistributor.sol\":4326:4336  _recipient */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":4305:4336  info[i].recipient == _recipient */\n      and\n        /* \"Distributor/StakingDistributor.sol\":4305:4309  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":4310:4311  i */\n      dup3\n        /* \"Distributor/StakingDistributor.sol\":4305:4312  info[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_60\n      jumpi\n      invalid\n    tag_60:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"Distributor/StakingDistributor.sol\":4305:4322  info[i].recipient */\n      0x01\n        /* \"Distributor/StakingDistributor.sol\":4305:4312  info[i] */\n      0x02\n      swap1\n      swap3\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":4305:4322  info[i].recipient */\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Distributor/StakingDistributor.sol\":4305:4336  info[i].recipient == _recipient */\n      eq\n        /* \"Distributor/StakingDistributor.sol\":4301:4418  if (info[i].recipient == _recipient) {... */\n      iszero\n      tag_62\n      jumpi\n        /* \"Distributor/StakingDistributor.sol\":4365:4403  reward.add(nextRewardAt(info[i].rate)) */\n      tag_63\n        /* \"Distributor/StakingDistributor.sol\":4376:4402  nextRewardAt(info[i].rate) */\n      tag_64\n        /* \"Distributor/StakingDistributor.sol\":4389:4393  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":4394:4395  i */\n      dup4\n        /* \"Distributor/StakingDistributor.sol\":4389:4396  info[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_65\n      jumpi\n      invalid\n    tag_65:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":4389:4401  info[i].rate */\n      0x00\n      add\n      sload\n        /* \"Distributor/StakingDistributor.sol\":4376:4388  nextRewardAt */\n      tag_46\n        /* \"Distributor/StakingDistributor.sol\":4376:4402  nextRewardAt(info[i].rate) */\n      jump\t// in\n    tag_64:\n        /* \"Distributor/StakingDistributor.sol\":4365:4371  reward */\n      dup4\n      swap1\n        /* \"Distributor/StakingDistributor.sol\":4365:4375  reward.add */\n      tag_67\n        /* \"Distributor/StakingDistributor.sol\":4365:4403  reward.add(nextRewardAt(info[i].rate)) */\n      jump\t// in\n    tag_63:\n        /* \"Distributor/StakingDistributor.sol\":4356:4403  reward = reward.add(nextRewardAt(info[i].rate)) */\n      swap2\n      pop\n        /* \"Distributor/StakingDistributor.sol\":4301:4418  if (info[i].recipient == _recipient) {... */\n    tag_62:\n        /* \"Distributor/StakingDistributor.sol\":4282:4285  i++ */\n      0x01\n      add\n        /* \"Distributor/StakingDistributor.sol\":4245:4428  for (uint256 i = 0; i < info.length; i++) {... */\n      jump(tag_57)\n    tag_58:\n      pop\n        /* \"Distributor/StakingDistributor.sol\":4444:4450  reward */\n      swap3\n        /* \"Distributor/StakingDistributor.sol\":4129:4457  function nextRewardFor(address _recipient) public view override returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Distributor/StakingDistributor.sol\":4600:4745  function setBounty(uint256 _bounty) external override onlyGovernor {... */\n    tag_27:\n        /* \"Distributor/OlympusAccessControlled.sol\":672:681  authority */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/OlympusAccessControlled.sol\":672:690  authority.governor */\n      and\n      0x0c340a24\n        /* \"Distributor/OlympusAccessControlled.sol\":672:692  authority.governor() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      mload\n        /* \"Distributor/OlympusAccessControlled.sol\":694:706  UNAUTHORIZED */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/OlympusAccessControlled.sol\":658:692  msg.sender == authority.governor() */\n      and\n        /* \"Distributor/OlympusAccessControlled.sol\":658:668  msg.sender */\n      caller\n        /* \"Distributor/OlympusAccessControlled.sol\":658:692  msg.sender == authority.governor() */\n      eq\n        /* \"Distributor/OlympusAccessControlled.sol\":650:707  require(msg.sender == authority.governor(), UNAUTHORIZED) */\n      tag_73\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup3\n      sload\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup5\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap2\n      and\n      div\n      0x24\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap2\n      dup3\n      swap2\n      0x44\n      swap1\n      swap2\n      add\n      swap1\n      dup5\n      swap1\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_74)\n    tag_75:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_76:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_76\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_74:\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n      pop\n        /* \"Distributor/StakingDistributor.sol\":4696:4699  2e9 */\n      0x77359400\n        /* \"Distributor/StakingDistributor.sol\":4685:4692  _bounty */\n      dup2\n        /* \"Distributor/StakingDistributor.sol\":4685:4699  _bounty <= 2e9 */\n      gt\n      iszero\n        /* \"Distributor/StakingDistributor.sol\":4677:4712  require(_bounty <= 2e9, \"Too much\") */\n      tag_78\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x08\n      0x24\n      dup3\n      add\n      mstore\n      0x546f6f206d756368000000000000000000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_78:\n        /* \"Distributor/StakingDistributor.sol\":4722:4728  bounty */\n      0x03\n        /* \"Distributor/StakingDistributor.sol\":4722:4738  bounty = _bounty */\n      sstore\n        /* \"Distributor/StakingDistributor.sol\":4600:4745  function setBounty(uint256 _bounty) external override onlyGovernor {... */\n      jump\t// out\n        /* \"Distributor/StakingDistributor.sol\":5888:6656  function setAdjustment(... */\n    tag_30:\n        /* \"Distributor/StakingDistributor.sol\":6071:6080  authority */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":6071:6089  authority.governor */\n      and\n      0x0c340a24\n        /* \"Distributor/StakingDistributor.sol\":6071:6091  authority.governor() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":6057:6091  msg.sender == authority.governor() */\n      and\n        /* \"Distributor/StakingDistributor.sol\":6057:6067  msg.sender */\n      caller\n        /* \"Distributor/StakingDistributor.sol\":6057:6091  msg.sender == authority.governor() */\n      eq\n      dup1\n        /* \"Distributor/StakingDistributor.sol\":6057:6129  msg.sender == authority.governor() || msg.sender == authority.guardian() */\n      tag_84\n      jumpi\n      pop\n        /* \"Distributor/StakingDistributor.sol\":6109:6118  authority */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":6109:6127  authority.guardian */\n      and\n      0x452a9320\n        /* \"Distributor/StakingDistributor.sol\":6109:6129  authority.guardian() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":6095:6129  msg.sender == authority.guardian() */\n      and\n        /* \"Distributor/StakingDistributor.sol\":6095:6105  msg.sender */\n      caller\n        /* \"Distributor/StakingDistributor.sol\":6095:6129  msg.sender == authority.guardian() */\n      eq\n        /* \"Distributor/StakingDistributor.sol\":6057:6129  msg.sender == authority.governor() || msg.sender == authority.guardian() */\n    tag_84:\n        /* \"Distributor/StakingDistributor.sol\":6036:6189  require(... */\n      tag_89\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_69f7f70959a4e39a44e5c1e9758516dc060c05af9d2514644d1e8fb784f16900\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"Distributor/StakingDistributor.sol\":6241:6242  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":6207:6243  info[_index].recipient != address(0) */\n      and\n        /* \"Distributor/StakingDistributor.sol\":6207:6211  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":6212:6218  _index */\n      dup6\n        /* \"Distributor/StakingDistributor.sol\":6207:6219  info[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_90\n      jumpi\n      invalid\n    tag_90:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"Distributor/StakingDistributor.sol\":6207:6229  info[_index].recipient */\n      0x01\n        /* \"Distributor/StakingDistributor.sol\":6207:6219  info[_index] */\n      0x02\n      swap1\n      swap3\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":6207:6229  info[_index].recipient */\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Distributor/StakingDistributor.sol\":6207:6243  info[_index].recipient != address(0) */\n      eq\n      iszero\n        /* \"Distributor/StakingDistributor.sol\":6199:6272  require(info[_index].recipient != address(0), \"Recipient does not exist\") */\n      tag_92\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x526563697069656e7420646f6573206e6f742065786973740000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_92:\n        /* \"Distributor/StakingDistributor.sol\":6301:6310  authority */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":6301:6319  authority.guardian */\n      and\n      0x452a9320\n        /* \"Distributor/StakingDistributor.sol\":6301:6321  authority.guardian() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":6287:6321  msg.sender == authority.guardian() */\n      and\n        /* \"Distributor/StakingDistributor.sol\":6287:6297  msg.sender */\n      caller\n        /* \"Distributor/StakingDistributor.sol\":6287:6321  msg.sender == authority.guardian() */\n      eq\n        /* \"Distributor/StakingDistributor.sol\":6283:6436  if (msg.sender == authority.guardian()) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"Distributor/StakingDistributor.sol\":6354:6389  info[_index].rate.mul(25).div(1000) */\n      tag_98\n        /* \"Distributor/StakingDistributor.sol\":6384:6388  1000 */\n      0x03e8\n        /* \"Distributor/StakingDistributor.sol\":6354:6379  info[_index].rate.mul(25) */\n      tag_99\n        /* \"Distributor/StakingDistributor.sol\":6376:6378  25 */\n      0x19\n        /* \"Distributor/StakingDistributor.sol\":6354:6358  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":6359:6365  _index */\n      dup9\n        /* \"Distributor/StakingDistributor.sol\":6354:6366  info[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_100\n      jumpi\n      invalid\n    tag_100:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":6354:6371  info[_index].rate */\n      sload\n      swap1\n        /* \"Distributor/StakingDistributor.sol\":6354:6375  info[_index].rate.mul */\n      tag_102\n        /* \"Distributor/StakingDistributor.sol\":6354:6379  info[_index].rate.mul(25) */\n      jump\t// in\n    tag_99:\n        /* \"Distributor/StakingDistributor.sol\":6354:6383  info[_index].rate.mul(25).div */\n      swap1\n      tag_103\n        /* \"Distributor/StakingDistributor.sol\":6354:6389  info[_index].rate.mul(25).div(1000) */\n      jump\t// in\n    tag_98:\n        /* \"Distributor/StakingDistributor.sol\":6345:6350  _rate */\n      dup3\n        /* \"Distributor/StakingDistributor.sol\":6345:6389  _rate <= info[_index].rate.mul(25).div(1000) */\n      gt\n      iszero\n        /* \"Distributor/StakingDistributor.sol\":6337:6425  require(_rate <= info[_index].rate.mul(25).div(1000), \"Limiter: cannot adjust by >2.5%\") */\n      tag_104\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x4c696d697465723a2063616e6e6f742061646a757374206279203e322e352500\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_104:\n        /* \"Distributor/StakingDistributor.sol\":6451:6455  _add */\n      dup3\n        /* \"Distributor/StakingDistributor.sol\":6446:6568  if (!_add) {... */\n      tag_108\n      jumpi\n        /* \"Distributor/StakingDistributor.sol\":6488:6492  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":6493:6499  _index */\n      dup5\n        /* \"Distributor/StakingDistributor.sol\":6488:6500  info[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":6488:6505  info[_index].rate */\n      0x00\n      add\n      sload\n        /* \"Distributor/StakingDistributor.sol\":6479:6484  _rate */\n      dup3\n        /* \"Distributor/StakingDistributor.sol\":6479:6505  _rate <= info[_index].rate */\n      gt\n      iszero\n        /* \"Distributor/StakingDistributor.sol\":6471:6557  require(_rate <= info[_index].rate, \"Cannot decrease rate by more than it already is\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ed69d779fa32807a0ab0c062194b492cf21fe3fb9f699c4cb98fdb2693ab648a\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"Distributor/StakingDistributor.sol\":6600:6649  Adjust({add: _add, rate: _rate, target: _target}) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      swap4\n      iszero\n      iszero\n      dup5\n      mstore\n      0x20\n      dup1\n      dup6\n      add\n      swap4\n      dup5\n      mstore\n      dup5\n      dup3\n      add\n      swap3\n      dup4\n      mstore\n      0x00\n        /* \"Distributor/StakingDistributor.sol\":6578:6597  adjustments[_index] */\n      swap6\n      dup7\n      mstore\n        /* \"Distributor/StakingDistributor.sol\":6578:6589  adjustments */\n      0x02\n        /* \"Distributor/StakingDistributor.sol\":6578:6597  adjustments[_index] */\n      swap1\n      dup2\n      swap1\n      mstore\n      swap5\n      keccak256\n        /* \"Distributor/StakingDistributor.sol\":6578:6649  adjustments[_index] = Adjust({add: _add, rate: _rate, target: _target}) */\n      swap3\n      mload\n      dup4\n      sload\n      not(0xff)\n      and\n      swap1\n      iszero\n      iszero\n      or\n      dup4\n      sstore\n      swap1\n      mload\n      0x01\n      dup4\n      add\n      sstore\n      mload\n      swap2\n      add\n      sstore\n        /* \"Distributor/StakingDistributor.sol\":5888:6656  function setAdjustment(... */\n      jump\t// out\n        /* \"Distributor/OlympusAccessControlled.sol\":1108:1272  function setAuthority(IExodusAuthority _newAuthority) external onlyGovernor {... */\n    tag_33:\n        /* \"Distributor/OlympusAccessControlled.sol\":672:681  authority */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/OlympusAccessControlled.sol\":672:690  authority.governor */\n      and\n      0x0c340a24\n        /* \"Distributor/OlympusAccessControlled.sol\":672:692  authority.governor() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      mload\n        /* \"Distributor/OlympusAccessControlled.sol\":694:706  UNAUTHORIZED */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/OlympusAccessControlled.sol\":658:692  msg.sender == authority.governor() */\n      and\n        /* \"Distributor/OlympusAccessControlled.sol\":658:668  msg.sender */\n      caller\n        /* \"Distributor/OlympusAccessControlled.sol\":658:692  msg.sender == authority.governor() */\n      eq\n        /* \"Distributor/OlympusAccessControlled.sol\":650:707  require(msg.sender == authority.governor(), UNAUTHORIZED) */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup3\n      sload\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup5\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap2\n      and\n      div\n      0x24\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap2\n      dup3\n      swap2\n      0x44\n      swap1\n      swap2\n      add\n      swap1\n      dup5\n      swap1\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_74)\n    tag_114:\n      pop\n        /* \"Distributor/OlympusAccessControlled.sol\":1194:1203  authority */\n      0x01\n        /* \"Distributor/OlympusAccessControlled.sol\":1194:1219  authority = _newAuthority */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Distributor/OlympusAccessControlled.sol\":1234:1265  AuthorityUpdated(_newAuthority) */\n      mload(0x40)\n      0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"Distributor/OlympusAccessControlled.sol\":1108:1272  function setAuthority(IExodusAuthority _newAuthority) external onlyGovernor {... */\n      pop\n      jump\t// out\n        /* \"Distributor/StakingDistributor.sol\":5306:5694  function removeRecipient(uint256 _index) external override {... */\n    tag_36:\n        /* \"Distributor/StakingDistributor.sol\":5410:5419  authority */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":5410:5428  authority.governor */\n      and\n      0x0c340a24\n        /* \"Distributor/StakingDistributor.sol\":5410:5430  authority.governor() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":5396:5430  msg.sender == authority.governor() */\n      and\n        /* \"Distributor/StakingDistributor.sol\":5396:5406  msg.sender */\n      caller\n        /* \"Distributor/StakingDistributor.sol\":5396:5430  msg.sender == authority.governor() */\n      eq\n      dup1\n        /* \"Distributor/StakingDistributor.sol\":5396:5468  msg.sender == authority.governor() || msg.sender == authority.guardian() */\n      tag_124\n      jumpi\n      pop\n        /* \"Distributor/StakingDistributor.sol\":5448:5457  authority */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":5448:5466  authority.guardian */\n      and\n      0x452a9320\n        /* \"Distributor/StakingDistributor.sol\":5448:5468  authority.guardian() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":5434:5468  msg.sender == authority.guardian() */\n      and\n        /* \"Distributor/StakingDistributor.sol\":5434:5444  msg.sender */\n      caller\n        /* \"Distributor/StakingDistributor.sol\":5434:5468  msg.sender == authority.guardian() */\n      eq\n        /* \"Distributor/StakingDistributor.sol\":5396:5468  msg.sender == authority.governor() || msg.sender == authority.guardian() */\n    tag_124:\n        /* \"Distributor/StakingDistributor.sol\":5375:5528  require(... */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_69f7f70959a4e39a44e5c1e9758516dc060c05af9d2514644d1e8fb784f16900\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"Distributor/StakingDistributor.sol\":5580:5581  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":5546:5582  info[_index].recipient != address(0) */\n      and\n        /* \"Distributor/StakingDistributor.sol\":5546:5550  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":5551:5557  _index */\n      dup3\n        /* \"Distributor/StakingDistributor.sol\":5546:5558  info[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_130\n      jumpi\n      invalid\n    tag_130:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"Distributor/StakingDistributor.sol\":5546:5568  info[_index].recipient */\n      0x01\n        /* \"Distributor/StakingDistributor.sol\":5546:5558  info[_index] */\n      0x02\n      swap1\n      swap3\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":5546:5568  info[_index].recipient */\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Distributor/StakingDistributor.sol\":5546:5582  info[_index].recipient != address(0) */\n      eq\n      iszero\n        /* \"Distributor/StakingDistributor.sol\":5538:5611  require(info[_index].recipient != address(0), \"Recipient does not exist\") */\n      tag_132\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x526563697069656e7420646f6573206e6f742065786973740000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_132:\n        /* \"Distributor/StakingDistributor.sol\":5654:5655  0 */\n      0x00\n        /* \"Distributor/StakingDistributor.sol\":5621:5625  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":5626:5632  _index */\n      dup3\n        /* \"Distributor/StakingDistributor.sol\":5621:5633  info[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_133\n      jumpi\n      invalid\n    tag_133:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":5621:5643  info[_index].recipient */\n      0x01\n      add\n      0x00\n        /* \"Distributor/StakingDistributor.sol\":5621:5656  info[_index].recipient = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Distributor/StakingDistributor.sol\":5686:5687  0 */\n      0x00\n        /* \"Distributor/StakingDistributor.sol\":5666:5670  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":5671:5677  _index */\n      dup3\n        /* \"Distributor/StakingDistributor.sol\":5666:5678  info[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_135\n      jumpi\n      invalid\n    tag_135:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":5666:5687  info[_index].rate = 0 */\n      sstore\n      pop\n        /* \"Distributor/StakingDistributor.sol\":5306:5694  function removeRecipient(uint256 _index) external override {... */\n      jump\t// out\n        /* \"Distributor/StakingDistributor.sol\":614:644  uint256 public override bounty */\n    tag_38:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"Distributor/StakingDistributor.sol\":563:608  mapping(uint256 => Adjust) public adjustments */\n    tag_41:\n      0x02\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap2\n      swap1\n      swap3\n      add\n      sload\n      0xff\n      swap1\n      swap3\n      and\n      swap2\n      dup4\n      jump\t// out\n        /* \"Distributor/OlympusAccessControlled.sol\":359:392  IExodusAuthority public authority */\n    tag_43:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"Distributor/StakingDistributor.sol\":3835:3984  function nextRewardAt(uint256 _rate) public view override returns (uint256) {... */\n    tag_46:\n        /* \"Distributor/StakingDistributor.sol\":3902:3909  uint256 */\n      0x00\n        /* \"Distributor/StakingDistributor.sol\":3928:3977  exo.totalSupply().mul(_rate).div(rateDenominator) */\n      tag_138\n        /* \"Distributor/StakingDistributor.sol\":3961:3976  rateDenominator */\n      immutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n        /* \"Distributor/StakingDistributor.sol\":3928:3956  exo.totalSupply().mul(_rate) */\n      tag_99\n        /* \"Distributor/StakingDistributor.sol\":3950:3955  _rate */\n      dup5\n        /* \"Distributor/StakingDistributor.sol\":3928:3931  exo */\n      immutable(\"0x97798a7ce1eedb778fe135ba4f72c5cd61b1904f61f817965236ff22acf6c32a\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":3928:3943  exo.totalSupply */\n      and\n      0x18160ddd\n        /* \"Distributor/StakingDistributor.sol\":3928:3945  exo.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      mload\n      swap1\n        /* \"Distributor/StakingDistributor.sol\":3928:3949  exo.totalSupply().mul */\n      tag_102\n        /* \"Distributor/StakingDistributor.sol\":3928:3956  exo.totalSupply().mul(_rate) */\n      jump\t// in\n        /* \"Distributor/StakingDistributor.sol\":3928:3977  exo.totalSupply().mul(_rate).div(rateDenominator) */\n    tag_138:\n        /* \"Distributor/StakingDistributor.sol\":3921:3977  return exo.totalSupply().mul(_rate).div(rateDenominator) */\n      swap3\n        /* \"Distributor/StakingDistributor.sol\":3835:3984  function nextRewardAt(uint256 _rate) public view override returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Distributor/StakingDistributor.sol\":1596:2012  function distribute() external override {... */\n    tag_48:\n        /* \"Distributor/StakingDistributor.sol\":1654:1664  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":1668:1675  staking */\n      immutable(\"0xe216240695da412145d9df04d3b0c5fca4d43b99b7d0d5386b61bbf0097f7efd\")\n        /* \"Distributor/StakingDistributor.sol\":1654:1675  msg.sender == staking */\n      and\n      eq\n        /* \"Distributor/StakingDistributor.sol\":1646:1692  require(msg.sender == staking, \"Only staking\") */\n      tag_145\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa0, 0x4f6e6c79207374616b696e67)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_145:\n        /* \"Distributor/StakingDistributor.sol\":1755:1764  uint256 i */\n      0x00\n        /* \"Distributor/StakingDistributor.sol\":1750:2006  for (uint256 i = 0; i < info.length; i++) {... */\n    tag_146:\n        /* \"Distributor/StakingDistributor.sol\":1774:1778  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":1774:1785  info.length */\n      sload\n        /* \"Distributor/StakingDistributor.sol\":1770:1785  i < info.length */\n      dup2\n      lt\n        /* \"Distributor/StakingDistributor.sol\":1750:2006  for (uint256 i = 0; i < info.length; i++) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"Distributor/StakingDistributor.sol\":1825:1826  0 */\n      0x00\n        /* \"Distributor/StakingDistributor.sol\":1810:1814  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":1815:1816  i */\n      dup3\n        /* \"Distributor/StakingDistributor.sol\":1810:1817  info[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_149\n      jumpi\n      invalid\n    tag_149:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":1810:1822  info[i].rate */\n      0x00\n      add\n      sload\n        /* \"Distributor/StakingDistributor.sol\":1810:1826  info[i].rate > 0 */\n      gt\n        /* \"Distributor/StakingDistributor.sol\":1806:1996  if (info[i].rate > 0) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"Distributor/StakingDistributor.sol\":1846:1854  treasury */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":1846:1859  treasury.mint */\n      and\n      0x40c10f19\n        /* \"Distributor/StakingDistributor.sol\":1860:1864  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":1865:1866  i */\n      dup4\n        /* \"Distributor/StakingDistributor.sol\":1860:1867  info[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_152\n      jumpi\n      invalid\n    tag_152:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":1860:1877  info[i].recipient */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Distributor/StakingDistributor.sol\":1879:1905  nextRewardAt(info[i].rate) */\n      tag_154\n        /* \"Distributor/StakingDistributor.sol\":1892:1896  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":1897:1898  i */\n      dup6\n        /* \"Distributor/StakingDistributor.sol\":1892:1899  info[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_65\n      jumpi\n      invalid\n        /* \"Distributor/StakingDistributor.sol\":1879:1905  nextRewardAt(info[i].rate) */\n    tag_154:\n        /* \"Distributor/StakingDistributor.sol\":1846:1906  treasury.mint(info[i].recipient, nextRewardAt(info[i].rate)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n        /* \"Distributor/StakingDistributor.sol\":1948:1957  adjust(i) */\n      tag_160\n        /* \"Distributor/StakingDistributor.sol\":1955:1956  i */\n      dup2\n        /* \"Distributor/StakingDistributor.sol\":1948:1954  adjust */\n      tag_161\n        /* \"Distributor/StakingDistributor.sol\":1948:1957  adjust(i) */\n      jump\t// in\n    tag_160:\n        /* \"Distributor/StakingDistributor.sol\":1787:1790  i++ */\n      0x01\n      add\n        /* \"Distributor/StakingDistributor.sol\":1750:2006  for (uint256 i = 0; i < info.length; i++) {... */\n      jump(tag_146)\n    tag_147:\n      pop\n        /* \"Distributor/StakingDistributor.sol\":1596:2012  function distribute() external override {... */\n      jump\t// out\n        /* \"Distributor/StakingDistributor.sol\":2018:2335  function retrieveBounty() external override returns (uint256) {... */\n    tag_50:\n        /* \"Distributor/StakingDistributor.sol\":2071:2078  uint256 */\n      0x00\n        /* \"Distributor/StakingDistributor.sol\":2098:2108  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":2112:2119  staking */\n      immutable(\"0xe216240695da412145d9df04d3b0c5fca4d43b99b7d0d5386b61bbf0097f7efd\")\n        /* \"Distributor/StakingDistributor.sol\":2098:2119  msg.sender == staking */\n      and\n      eq\n        /* \"Distributor/StakingDistributor.sol\":2090:2136  require(msg.sender == staking, \"Only staking\") */\n      tag_163\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa0, 0x4f6e6c79207374616b696e67)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_163:\n        /* \"Distributor/StakingDistributor.sol\":2229:2235  bounty */\n      sload(0x03)\n        /* \"Distributor/StakingDistributor.sol\":2229:2239  bounty > 0 */\n      iszero\n        /* \"Distributor/StakingDistributor.sol\":2225:2305  if (bounty > 0) {... */\n      tag_164\n      jumpi\n        /* \"Distributor/StakingDistributor.sol\":2255:2263  treasury */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":2255:2268  treasury.mint */\n      and\n      0x40c10f19\n        /* \"Distributor/StakingDistributor.sol\":2277:2284  staking */\n      immutable(\"0xe216240695da412145d9df04d3b0c5fca4d43b99b7d0d5386b61bbf0097f7efd\")\n        /* \"Distributor/StakingDistributor.sol\":2287:2293  bounty */\n      sload(0x03)\n        /* \"Distributor/StakingDistributor.sol\":2255:2294  treasury.mint(address(staking), bounty) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n        /* \"Distributor/StakingDistributor.sol\":2225:2305  if (bounty > 0) {... */\n    tag_164:\n      pop\n        /* \"Distributor/StakingDistributor.sol\":2322:2328  bounty */\n      sload(0x03)\n        /* \"Distributor/StakingDistributor.sol\":2018:2335  function retrieveBounty() external override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Distributor/StakingDistributor.sol\":4882:5205  function addRecipient(address _recipient, uint256 _rewardRate) external override onlyGovernor {... */\n    tag_53:\n        /* \"Distributor/OlympusAccessControlled.sol\":672:681  authority */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/OlympusAccessControlled.sol\":672:690  authority.governor */\n      and\n      0x0c340a24\n        /* \"Distributor/OlympusAccessControlled.sol\":672:692  authority.governor() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      mload\n        /* \"Distributor/OlympusAccessControlled.sol\":694:706  UNAUTHORIZED */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/OlympusAccessControlled.sol\":658:692  msg.sender == authority.governor() */\n      and\n        /* \"Distributor/OlympusAccessControlled.sol\":658:668  msg.sender */\n      caller\n        /* \"Distributor/OlympusAccessControlled.sol\":658:692  msg.sender == authority.governor() */\n      eq\n        /* \"Distributor/OlympusAccessControlled.sol\":650:707  require(msg.sender == authority.governor(), UNAUTHORIZED) */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup3\n      sload\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup5\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap2\n      and\n      div\n      0x24\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap2\n      dup3\n      swap2\n      0x44\n      swap1\n      swap2\n      add\n      swap1\n      dup5\n      swap1\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_74)\n    tag_173:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Distributor/StakingDistributor.sol\":4994:5018  _recipient != address(0) */\n      dup3\n      and\n        /* \"Distributor/StakingDistributor.sol\":4986:5046  require(_recipient != address(0), \"Zero address: Recipient\") */\n      tag_178\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x5a65726f20616464726573733a20526563697069656e74000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_178:\n        /* \"Distributor/StakingDistributor.sol\":5079:5094  rateDenominator */\n      immutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n        /* \"Distributor/StakingDistributor.sol\":5064:5075  _rewardRate */\n      dup2\n        /* \"Distributor/StakingDistributor.sol\":5064:5094  _rewardRate <= rateDenominator */\n      gt\n      iszero\n        /* \"Distributor/StakingDistributor.sol\":5056:5129  require(_rewardRate <= rateDenominator, \"Rate cannot exceed denominator\") */\n      tag_179\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x526174652063616e6e6f74206578636565642064656e6f6d696e61746f720000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_179:\n        /* \"Distributor/StakingDistributor.sol\":5149:5197  Info({recipient: _recipient, rate: _rewardRate}) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      0x20\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n        /* \"Distributor/StakingDistributor.sol\":5139:5143  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":5139:5198  info.push(Info({recipient: _recipient, rate: _rewardRate})) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      mload\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n      0x02\n      swap1\n      swap4\n      mul\n      swap3\n      dup4\n      add\n      sstore\n      mload\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"Distributor/StakingDistributor.sol\":4882:5205  function addRecipient(address _recipient, uint256 _rewardRate) external override onlyGovernor {... */\n      jump\t// out\n        /* \"Distributor/SafeMath.sol\":155:331  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_67:\n        /* \"Distributor/SafeMath.sol\":213:220  uint256 */\n      0x00\n        /* \"Distributor/SafeMath.sol\":244:249  a + b */\n      dup3\n      dup3\n      add\n        /* \"Distributor/SafeMath.sol\":267:273  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"Distributor/SafeMath.sol\":259:305  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_182\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_182:\n        /* \"Distributor/SafeMath.sol\":323:324  c */\n      swap4\n        /* \"Distributor/SafeMath.sol\":155:331  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Distributor/SafeMath.sol\":700:941  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_102:\n        /* \"Distributor/SafeMath.sol\":758:765  uint256 */\n      0x00\n        /* \"Distributor/SafeMath.sol\":781:787  a == 0 */\n      dup3\n        /* \"Distributor/SafeMath.sol\":777:822  if (a == 0) {... */\n      tag_184\n      jumpi\n      pop\n        /* \"Distributor/SafeMath.sol\":810:811  0 */\n      0x00\n        /* \"Distributor/SafeMath.sol\":803:811  return 0 */\n      jump(tag_138)\n        /* \"Distributor/SafeMath.sol\":777:822  if (a == 0) {... */\n    tag_184:\n        /* \"Distributor/SafeMath.sol\":844:849  a * b */\n      dup3\n      dup3\n      mul\n        /* \"Distributor/SafeMath.sol\":848:849  b */\n      dup3\n        /* \"Distributor/SafeMath.sol\":844:845  a */\n      dup5\n        /* \"Distributor/SafeMath.sol\":844:849  a * b */\n      dup3\n        /* \"Distributor/SafeMath.sol\":844:845  a */\n      dup2\n        /* \"Distributor/SafeMath.sol\":867:872  c / a */\n      tag_185\n      jumpi\n      invalid\n    tag_185:\n      div\n        /* \"Distributor/SafeMath.sol\":867:877  c / a == b */\n      eq\n        /* \"Distributor/SafeMath.sol\":859:915  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Distributor/SafeMath.sol\":947:1077  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_103:\n        /* \"Distributor/SafeMath.sol\":1005:1012  uint256 */\n      0x00\n        /* \"Distributor/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n      tag_182\n        /* \"Distributor/SafeMath.sol\":1035:1036  a */\n      dup4\n        /* \"Distributor/SafeMath.sol\":1038:1039  b */\n      dup4\n        /* \"Distributor/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"Distributor/SafeMath.sol\":1031:1034  div */\n      tag_189\n        /* \"Distributor/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"Distributor/StakingDistributor.sol\":2453:3666  function adjust(uint256 _index) internal {... */\n    tag_161:\n        /* \"Distributor/StakingDistributor.sol\":2504:2528  Adjust memory adjustment */\n      tag_191\n      tag_192\n      jump\t// in\n    tag_191:\n      pop\n        /* \"Distributor/StakingDistributor.sol\":2531:2550  adjustments[_index] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Distributor/StakingDistributor.sol\":2531:2542  adjustments */\n      0x02\n        /* \"Distributor/StakingDistributor.sol\":2531:2550  adjustments[_index] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"Distributor/StakingDistributor.sol\":2504:2550  Adjust memory adjustment = adjustments[_index] */\n      dup4\n      mload\n      0x60\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      swap3\n      add\n      sload\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      swap1\n        /* \"Distributor/StakingDistributor.sol\":2564:2584  adjustment.rate != 0 */\n      iszero\n        /* \"Distributor/StakingDistributor.sol\":2560:3660  if (adjustment.rate != 0) {... */\n      tag_220\n      jumpi\n        /* \"Distributor/StakingDistributor.sol\":2604:2618  adjustment.add */\n      dup1\n      mload\n        /* \"Distributor/StakingDistributor.sol\":2600:3650  if (adjustment.add) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"Distributor/StakingDistributor.sol\":2701:2739  info[_index].rate.add(adjustment.rate) */\n      tag_195\n        /* \"Distributor/StakingDistributor.sol\":2723:2733  adjustment */\n      dup2\n        /* \"Distributor/StakingDistributor.sol\":2723:2738  adjustment.rate */\n      0x20\n      add\n      mload\n        /* \"Distributor/StakingDistributor.sol\":2701:2705  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":2706:2712  _index */\n      dup5\n        /* \"Distributor/StakingDistributor.sol\":2701:2713  info[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_196\n      jumpi\n      invalid\n    tag_196:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":2701:2718  info[_index].rate */\n      sload\n      swap1\n        /* \"Distributor/StakingDistributor.sol\":2701:2722  info[_index].rate.add */\n      tag_67\n        /* \"Distributor/StakingDistributor.sol\":2701:2739  info[_index].rate.add(adjustment.rate) */\n      jump\t// in\n    tag_195:\n        /* \"Distributor/StakingDistributor.sol\":2681:2685  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":2686:2692  _index */\n      dup4\n        /* \"Distributor/StakingDistributor.sol\":2681:2693  info[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_198\n      jumpi\n      invalid\n    tag_198:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":2681:2739  info[_index].rate = info[_index].rate.add(adjustment.rate) */\n      sstore\n        /* \"Distributor/StakingDistributor.sol\":2796:2813  adjustment.target */\n      0x40\n      dup2\n      add\n      mload\n        /* \"Distributor/StakingDistributor.sol\":2775:2779  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":2775:2787  info[_index] */\n      dup1\n      sload\n        /* \"Distributor/StakingDistributor.sol\":2780:2786  _index */\n      dup5\n      swap1\n        /* \"Distributor/StakingDistributor.sol\":2775:2787  info[_index] */\n      dup2\n      lt\n      tag_200\n      jumpi\n      invalid\n    tag_200:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":2775:2792  info[_index].rate */\n      0x00\n      add\n      sload\n        /* \"Distributor/StakingDistributor.sol\":2775:2813  info[_index].rate >= adjustment.target */\n      lt\n        /* \"Distributor/StakingDistributor.sol\":2771:3020  if (info[_index].rate >= adjustment.target) {... */\n      tag_202\n      jumpi\n        /* \"Distributor/StakingDistributor.sol\":2901:2902  0 */\n      0x00\n        /* \"Distributor/StakingDistributor.sol\":2874:2893  adjustments[_index] */\n      dup3\n      dup2\n      mstore\n        /* \"Distributor/StakingDistributor.sol\":2874:2885  adjustments */\n      0x02\n        /* \"Distributor/StakingDistributor.sol\":2874:2893  adjustments[_index] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Distributor/StakingDistributor.sol\":2874:2898  adjustments[_index].rate */\n      0x01\n      add\n        /* \"Distributor/StakingDistributor.sol\":2874:2902  adjustments[_index].rate = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Distributor/StakingDistributor.sol\":2967:2984  adjustment.target */\n      dup2\n      add\n      mload\n        /* \"Distributor/StakingDistributor.sol\":2947:2951  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":2947:2959  info[_index] */\n      dup1\n      sload\n        /* \"Distributor/StakingDistributor.sol\":2886:2892  _index */\n      dup5\n      swap1\n        /* \"Distributor/StakingDistributor.sol\":2947:2959  info[_index] */\n      dup2\n      lt\n      tag_203\n      jumpi\n      invalid\n    tag_203:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":2947:2984  info[_index].rate = adjustment.target */\n      sstore\n        /* \"Distributor/StakingDistributor.sol\":2771:3020  if (info[_index].rate >= adjustment.target) {... */\n    tag_202:\n        /* \"Distributor/StakingDistributor.sol\":2600:3650  if (adjustment.add) {... */\n      jump(tag_220)\n    tag_194:\n        /* \"Distributor/StakingDistributor.sol\":3125:3135  adjustment */\n      dup1\n        /* \"Distributor/StakingDistributor.sol\":3125:3140  adjustment.rate */\n      0x20\n      add\n      mload\n        /* \"Distributor/StakingDistributor.sol\":3105:3109  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":3110:3116  _index */\n      dup4\n        /* \"Distributor/StakingDistributor.sol\":3105:3117  info[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_206\n      jumpi\n      invalid\n    tag_206:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":3105:3122  info[_index].rate */\n      0x00\n      add\n      sload\n        /* \"Distributor/StakingDistributor.sol\":3105:3140  info[_index].rate > adjustment.rate */\n      gt\n        /* \"Distributor/StakingDistributor.sol\":3101:3369  if (info[_index].rate > adjustment.rate) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"Distributor/StakingDistributor.sol\":3230:3268  info[_index].rate.sub(adjustment.rate) */\n      tag_209\n        /* \"Distributor/StakingDistributor.sol\":3252:3262  adjustment */\n      dup2\n        /* \"Distributor/StakingDistributor.sol\":3252:3267  adjustment.rate */\n      0x20\n      add\n      mload\n        /* \"Distributor/StakingDistributor.sol\":3230:3234  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":3235:3241  _index */\n      dup5\n        /* \"Distributor/StakingDistributor.sol\":3230:3242  info[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_210\n      jumpi\n      invalid\n    tag_210:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":3230:3247  info[_index].rate */\n      sload\n      swap1\n        /* \"Distributor/StakingDistributor.sol\":3230:3251  info[_index].rate.sub */\n      tag_212\n        /* \"Distributor/StakingDistributor.sol\":3230:3268  info[_index].rate.sub(adjustment.rate) */\n      jump\t// in\n    tag_209:\n        /* \"Distributor/StakingDistributor.sol\":3210:3214  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":3215:3221  _index */\n      dup4\n        /* \"Distributor/StakingDistributor.sol\":3210:3222  info[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_213\n      jumpi\n      invalid\n    tag_213:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":3210:3268  info[_index].rate = info[_index].rate.sub(adjustment.rate) */\n      sstore\n        /* \"Distributor/StakingDistributor.sol\":3101:3369  if (info[_index].rate > adjustment.rate) {... */\n      jump(tag_215)\n    tag_208:\n        /* \"Distributor/StakingDistributor.sol\":3349:3350  0 */\n      0x00\n        /* \"Distributor/StakingDistributor.sol\":3329:3333  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":3334:3340  _index */\n      dup4\n        /* \"Distributor/StakingDistributor.sol\":3329:3341  info[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_216\n      jumpi\n      invalid\n    tag_216:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":3329:3350  info[_index].rate = 0 */\n      sstore\n        /* \"Distributor/StakingDistributor.sol\":3101:3369  if (info[_index].rate > adjustment.rate) {... */\n    tag_215:\n        /* \"Distributor/StakingDistributor.sol\":3412:3422  adjustment */\n      dup1\n        /* \"Distributor/StakingDistributor.sol\":3412:3429  adjustment.target */\n      0x40\n      add\n      mload\n        /* \"Distributor/StakingDistributor.sol\":3391:3395  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":3396:3402  _index */\n      dup4\n        /* \"Distributor/StakingDistributor.sol\":3391:3403  info[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_218\n      jumpi\n      invalid\n    tag_218:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":3391:3408  info[_index].rate */\n      0x00\n      add\n      sload\n        /* \"Distributor/StakingDistributor.sol\":3391:3429  info[_index].rate <= adjustment.target */\n      gt\n        /* \"Distributor/StakingDistributor.sol\":3387:3636  if (info[_index].rate <= adjustment.target) {... */\n      tag_220\n      jumpi\n        /* \"Distributor/StakingDistributor.sol\":3517:3518  0 */\n      0x00\n        /* \"Distributor/StakingDistributor.sol\":3490:3509  adjustments[_index] */\n      dup3\n      dup2\n      mstore\n        /* \"Distributor/StakingDistributor.sol\":3490:3501  adjustments */\n      0x02\n        /* \"Distributor/StakingDistributor.sol\":3490:3509  adjustments[_index] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Distributor/StakingDistributor.sol\":3490:3514  adjustments[_index].rate */\n      0x01\n      add\n        /* \"Distributor/StakingDistributor.sol\":3490:3518  adjustments[_index].rate = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Distributor/StakingDistributor.sol\":3583:3600  adjustment.target */\n      dup2\n      add\n      mload\n        /* \"Distributor/StakingDistributor.sol\":3563:3567  info */\n      0x04\n        /* \"Distributor/StakingDistributor.sol\":3563:3575  info[_index] */\n      dup1\n      sload\n        /* \"Distributor/StakingDistributor.sol\":3502:3508  _index */\n      dup5\n      swap1\n        /* \"Distributor/StakingDistributor.sol\":3563:3575  info[_index] */\n      dup2\n      lt\n      tag_221\n      jumpi\n      invalid\n    tag_221:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n        /* \"Distributor/StakingDistributor.sol\":3563:3600  info[_index].rate = adjustment.target */\n      sstore\n        /* \"Distributor/StakingDistributor.sol\":3387:3636  if (info[_index].rate <= adjustment.target) {... */\n    tag_220:\n        /* \"Distributor/StakingDistributor.sol\":2453:3666  function adjust(uint256 _index) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Distributor/SafeMath.sol\":1083:1384  function div(... */\n    tag_189:\n        /* \"Distributor/SafeMath.sol\":1199:1206  uint256 */\n      0x00\n        /* \"Distributor/SafeMath.sol\":1233:1245  errorMessage */\n      dup2\n        /* \"Distributor/SafeMath.sol\":1226:1231  b > 0 */\n      dup4\n        /* \"Distributor/SafeMath.sol\":1218:1246  require(b > 0, errorMessage) */\n      tag_224\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_225:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_227\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_225)\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_228\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_228:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n      pop\n        /* \"Distributor/SafeMath.sol\":1256:1265  uint256 c */\n      0x00\n        /* \"Distributor/SafeMath.sol\":1272:1273  b */\n      dup4\n        /* \"Distributor/SafeMath.sol\":1268:1269  a */\n      dup6\n        /* \"Distributor/SafeMath.sol\":1268:1273  a / b */\n      dup2\n      tag_229\n      jumpi\n      invalid\n    tag_229:\n      div\n        /* \"Distributor/SafeMath.sol\":1256:1273  uint256 c = a / b */\n      swap1\n      pop\n        /* \"Distributor/SafeMath.sol\":1308:1309  b */\n      dup4\n        /* \"Distributor/SafeMath.sol\":1304:1305  a */\n      dup6\n        /* \"Distributor/SafeMath.sol\":1304:1309  a % b */\n      dup2\n      tag_230\n      jumpi\n      invalid\n    tag_230:\n      mod\n        /* \"Distributor/SafeMath.sol\":1299:1300  c */\n      dup2\n        /* \"Distributor/SafeMath.sol\":1295:1296  b */\n      dup6\n        /* \"Distributor/SafeMath.sol\":1295:1300  b * c */\n      mul\n        /* \"Distributor/SafeMath.sol\":1295:1310  b * c + (a % b) */\n      add\n        /* \"Distributor/SafeMath.sol\":1290:1291  a */\n      dup6\n        /* \"Distributor/SafeMath.sol\":1290:1310  a == b * c + (a % b) */\n      eq\n        /* \"Distributor/SafeMath.sol\":1283:1311  assert(a == b * c + (a % b)) */\n      tag_231\n      jumpi\n      invalid\n    tag_231:\n        /* \"Distributor/SafeMath.sol\":1376:1377  c */\n      swap5\n        /* \"Distributor/SafeMath.sol\":1083:1384  function div(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Distributor/SafeMath.sol\":337:471  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_212:\n        /* \"Distributor/SafeMath.sol\":395:402  uint256 */\n      0x00\n        /* \"Distributor/SafeMath.sol\":421:464  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_182\n        /* \"Distributor/SafeMath.sol\":425:426  a */\n      dup4\n        /* \"Distributor/SafeMath.sol\":428:429  b */\n      dup4\n        /* \"Distributor/SafeMath.sol\":421:464  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"Distributor/SafeMath.sol\":593:600  uint256 */\n      0x00\n        /* \"Distributor/SafeMath.sol\":628:640  errorMessage */\n      dup2\n        /* \"Distributor/SafeMath.sol\":620:626  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"Distributor/SafeMath.sol\":612:641  require(b <= a, errorMessage) */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_227\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_225)\n    tag_236:\n      pop\n      pop\n      pop\n        /* \"Distributor/SafeMath.sol\":663:668  a - b */\n      swap1\n      sub\n      swap1\n        /* \"Distributor/SafeMath.sol\":477:694  function sub(... */\n      jump\t// out\n    tag_192:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_69f7f70959a4e39a44e5c1e9758516dc060c05af9d2514644d1e8fb784f16900 43616c6c6572206973206e6f7420676f7665726e6f72206f7220677561726469616e\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_ed69d779fa32807a0ab0c062194b492cf21fe3fb9f699c4cb98fdb2693ab648a 43616e6e6f742064656372656173652072617465206279206d6f7265207468616e20697420616c7265616479206973\n\n    auxdata: 0xa2646970667358221220cc6084561fc6c672c74678b3159c4638c3b8f9e92625c360469c8030583d74ca64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "610140604052600c6101008190526b15539055551213d49256915160a21b61012090815262000032916000919062000216565b50620f424060e0523480156200004757600080fd5b5060405162001a3538038062001a35833981810160405260808110156200006d57600080fd5b5080516020820151604080840151606090940151600180546001600160a01b0319166001600160a01b038316908117909155915193949293909182917f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a2506001600160a01b0384166200012c576040805162461bcd60e51b815260206004820152601660248201527f5a65726f20616464726573733a20547265617375727900000000000000000000604482015290519081900360640190fd5b6001600160601b0319606085901b1660a0526001600160a01b0383166200018e576040805162461bcd60e51b81526020600482015260116024820152705a65726f20616464726573733a2045584f60781b604482015290519081900360640190fd5b6001600160601b0319606084901b166080526001600160a01b038216620001fc576040805162461bcd60e51b815260206004820152601560248201527f5a65726f20616464726573733a205374616b696e670000000000000000000000604482015290519081900360640190fd5b5060601b6001600160601b03191660c05250620002c29050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200024e576000855562000299565b82601f106200026957805160ff191683800117855562000299565b8280016001018555821562000299579182015b82811115620002995782518255916020019190600101906200027c565b50620002a7929150620002ab565b5090565b5b80821115620002a75760008155600101620002ac565b60805160601c60a05160601c60c05160601c60e0516117206200031560003980610c4552806110f4525080610d045280610e895280610f23525080610d9b5280610ef4525080610c6a52506117206000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063943dfef11161008c578063c9fa8b2a11610066578063c9fa8b2a14610256578063e4fc6b6d14610273578063e7187e8a1461027b578063f798224314610283576100df565b8063943dfef1146101ed578063bc3b2b12146101f5578063bf7e214f14610232576100df565b80635db854b0116100bd5780635db854b0146101795780637a9e5e4b146101aa5780638e69e255146101d0576100df565b80632e340599146100e457806336d33f44146101225780635d87d3631461015a575b600080fd5b610101600480360360208110156100fa57600080fd5b50356102af565b604080519283526001600160a01b0390911660208301528051918290030190f35b6101486004803603602081101561013857600080fd5b50356001600160a01b03166102e6565b60408051918252519081900360200190f35b6101776004803603602081101561017057600080fd5b5035610373565b005b6101776004803603608081101561018f57600080fd5b508035906020810135151590604081013590606001356104f7565b610177600480360360208110156101c057600080fd5b50356001600160a01b0316610885565b610177600480360360208110156101e657600080fd5b50356109c8565b610148610c03565b6102126004803603602081101561020b57600080fd5b5035610c09565b604080519315158452602084019290925282820152519081900360600190f35b61023a610c2f565b604080516001600160a01b039092168252519081900360200190f35b6101486004803603602081101561026c57600080fd5b5035610c3e565b610177610cf9565b610148610e7c565b6101776004803603604081101561029957600080fd5b506001600160a01b038135169060200135610fab565b600481815481106102bf57600080fd5b6000918252602090912060029091020180546001909101549091506001600160a01b031682565b60008060005b60045481101561036c57836001600160a01b03166004828154811061030d57fe5b60009182526020909120600160029092020101546001600160a01b031614156103645761036161035a6004838154811061034357fe5b906000526020600020906002020160000154610c3e565b8390611209565b91505b6001016102ec565b5092915050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b1580156103c157600080fd5b505afa1580156103d5573d6000803e3d6000fd5b505050506040513d60208110156103eb57600080fd5b50516000906001600160a01b031633146104985760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104895780601f1061045e57610100808354040283529160200191610489565b820191906000526020600020905b81548152906001019060200180831161046c57829003601f168201915b50509250505060405180910390fd5b5063773594008111156104f2576040805162461bcd60e51b815260206004820152600860248201527f546f6f206d756368000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600355565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561054557600080fd5b505afa158015610559573d6000803e3d6000fd5b505050506040513d602081101561056f57600080fd5b50516001600160a01b03163314806106085750600160009054906101000a90046001600160a01b03166001600160a01b031663452a93206040518163ffffffff1660e01b815260040160206040518083038186803b1580156105d057600080fd5b505afa1580156105e4573d6000803e3d6000fd5b505050506040513d60208110156105fa57600080fd5b50516001600160a01b031633145b6106435760405162461bcd60e51b81526004018080602001828103825260228152602001806116796022913960400191505060405180910390fd5b60006001600160a01b03166004858154811061065b57fe5b60009182526020909120600160029092020101546001600160a01b031614156106cb576040805162461bcd60e51b815260206004820152601860248201527f526563697069656e7420646f6573206e6f742065786973740000000000000000604482015290519081900360640190fd5b600160009054906101000a90046001600160a01b03166001600160a01b031663452a93206040518163ffffffff1660e01b815260040160206040518083038186803b15801561071957600080fd5b505afa15801561072d573d6000803e3d6000fd5b505050506040513d602081101561074357600080fd5b50516001600160a01b03163314156107de5761078a6103e861078460196004888154811061076d57fe5b60009182526020909120600290910201549061126a565b906112c3565b8211156107de576040805162461bcd60e51b815260206004820152601f60248201527f4c696d697465723a2063616e6e6f742061646a757374206279203e322e352500604482015290519081900360640190fd5b8261084057600484815481106107f057fe5b9060005260206000209060020201600001548211156108405760405162461bcd60e51b815260040180806020018281038252602f8152602001806116bc602f913960400191505060405180910390fd5b6040805160608101825293151584526020808501938452848201928352600095865260029081905294209251835460ff19169015151783559051600183015551910155565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b1580156108d357600080fd5b505afa1580156108e7573d6000803e3d6000fd5b505050506040513d60208110156108fd57600080fd5b50516000906001600160a01b031633146109705760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104895780601f1061045e57610100808354040283529160200191610489565b506001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610a1657600080fd5b505afa158015610a2a573d6000803e3d6000fd5b505050506040513d6020811015610a4057600080fd5b50516001600160a01b0316331480610ad95750600160009054906101000a90046001600160a01b03166001600160a01b031663452a93206040518163ffffffff1660e01b815260040160206040518083038186803b158015610aa157600080fd5b505afa158015610ab5573d6000803e3d6000fd5b505050506040513d6020811015610acb57600080fd5b50516001600160a01b031633145b610b145760405162461bcd60e51b81526004018080602001828103825260228152602001806116796022913960400191505060405180910390fd5b60006001600160a01b031660048281548110610b2c57fe5b60009182526020909120600160029092020101546001600160a01b03161415610b9c576040805162461bcd60e51b815260206004820152601860248201527f526563697069656e7420646f6573206e6f742065786973740000000000000000604482015290519081900360640190fd5b600060048281548110610bab57fe5b906000526020600020906002020160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600060048281548110610bef57fe5b600091825260209091206002909102015550565b60035481565b600260208190526000918252604090912080546001820154919092015460ff9092169183565b6001546001600160a01b031681565b6000610cf37f0000000000000000000000000000000000000000000000000000000000000000610784847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610cc157600080fd5b505afa158015610cd5573d6000803e3d6000fd5b505050506040513d6020811015610ceb57600080fd5b50519061126a565b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d65576040805162461bcd60e51b815260206004820152600c60248201526b4f6e6c79207374616b696e6760a01b604482015290519081900360640190fd5b60005b600454811015610e7957600060048281548110610d8157fe5b9060005260206000209060020201600001541115610e71577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340c10f1960048381548110610dd557fe5b906000526020600020906002020160010160009054906101000a90046001600160a01b0316610e0a6004858154811061034357fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610e5057600080fd5b505af1158015610e64573d6000803e3d6000fd5b50505050610e7181611305565b600101610d68565b50565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610eea576040805162461bcd60e51b815260206004820152600c60248201526b4f6e6c79207374616b696e6760a01b604482015290519081900360640190fd5b60035415610fa4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340c10f197f00000000000000000000000000000000000000000000000000000000000000006003546040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610f8b57600080fd5b505af1158015610f9f573d6000803e3d6000fd5b505050505b5060035490565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610ff957600080fd5b505afa15801561100d573d6000803e3d6000fd5b505050506040513d602081101561102357600080fd5b50516000906001600160a01b031633146110965760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104895780601f1061045e57610100808354040283529160200191610489565b506001600160a01b0382166110f2576040805162461bcd60e51b815260206004820152601760248201527f5a65726f20616464726573733a20526563697069656e74000000000000000000604482015290519081900360640190fd5b7f0000000000000000000000000000000000000000000000000000000000000000811115611167576040805162461bcd60e51b815260206004820152601e60248201527f526174652063616e6e6f74206578636565642064656e6f6d696e61746f720000604482015290519081900360640190fd5b604080518082019091529081526001600160a01b03918216602082019081526004805460018101825560009190915291517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b600290930292830155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c909101805473ffffffffffffffffffffffffffffffffffffffff191691909216179055565b600082820183811015611263576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60008261127957506000610cf3565b8282028284828161128657fe5b04146112635760405162461bcd60e51b815260040180806020018281038252602181526020018061169b6021913960400191505060405180910390fd5b600061126383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611505565b61130d611655565b506000818152600260208181526040928390208351606081018552815460ff16151581526001820154928101839052920154928201929092529015611501578051156114055761137f81602001516004848154811061136857fe5b600091825260209091206002909102015490611209565b6004838154811061138c57fe5b6000918252602090912060029091020155604081015160048054849081106113b057fe5b90600052602060002090600202016000015410611400576000828152600260205260408082206001019190915581015160048054849081106113ee57fe5b60009182526020909120600290910201555b611501565b80602001516004838154811061141757fe5b906000526020600020906002020160000154111561147e5761145b81602001516004848154811061144457fe5b6000918252602090912060029091020154906115be565b6004838154811061146857fe5b600091825260209091206002909102015561149f565b60006004838154811061148d57fe5b60009182526020909120600290910201555b8060400151600483815481106114b157fe5b90600052602060002090600202016000015411611501576000828152600260205260408082206001019190915581015160048054849081106114ef57fe5b60009182526020909120600290910201555b5050565b600081836115915760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561155657818101518382015260200161153e565b50505050905090810190601f1680156115835780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161159d57fe5b0490508385816115a957fe5b068185020185146115b657fe5b949350505050565b600061126383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506000818484111561164d5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561155657818101518382015260200161153e565b505050900390565b60405180606001604052806000151581526020016000815260200160008152509056fe43616c6c6572206973206e6f7420676f7665726e6f72206f7220677561726469616e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616e6e6f742064656372656173652072617465206279206d6f7265207468616e20697420616c7265616479206973a2646970667358221220cc6084561fc6c672c74678b3159c4638c3b8f9e92625c360469c8030583d74ca64736f6c63430007050033",
							"opcodes": "PUSH2 0x140 PUSH1 0x40 MSTORE PUSH1 0xC PUSH2 0x100 DUP2 SWAP1 MSTORE PUSH12 0x15539055551213D492569151 PUSH1 0xA2 SHL PUSH2 0x120 SWAP1 DUP2 MSTORE PUSH3 0x32 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH3 0x216 JUMP JUMPDEST POP PUSH3 0xF4240 PUSH1 0xE0 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A35 CODESIZE SUB DUP1 PUSH3 0x1A35 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x60 SWAP1 SWAP5 ADD MLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP3 SWAP4 SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x12C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F20616464726573733A20547265617375727900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0xA0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x18E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x5A65726F20616464726573733A2045584F PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F20616464726573733A205374616B696E670000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0xC0 MSTORE POP PUSH3 0x2C2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x24E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x299 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x269 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x299 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x299 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x299 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x27C JUMP JUMPDEST POP PUSH3 0x2A7 SWAP3 SWAP2 POP PUSH3 0x2AB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2A7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2AC JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH2 0x1720 PUSH3 0x315 PUSH1 0x0 CODECOPY DUP1 PUSH2 0xC45 MSTORE DUP1 PUSH2 0x10F4 MSTORE POP DUP1 PUSH2 0xD04 MSTORE DUP1 PUSH2 0xE89 MSTORE DUP1 PUSH2 0xF23 MSTORE POP DUP1 PUSH2 0xD9B MSTORE DUP1 PUSH2 0xEF4 MSTORE POP DUP1 PUSH2 0xC6A MSTORE POP PUSH2 0x1720 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x943DFEF1 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC9FA8B2A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC9FA8B2A EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xE4FC6B6D EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xE7187E8A EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xF7982243 EQ PUSH2 0x283 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x943DFEF1 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xBC3B2B12 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x232 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x5DB854B0 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x5DB854B0 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x8E69E255 EQ PUSH2 0x1D0 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x2E340599 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x36D33F44 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x5D87D363 EQ PUSH2 0x15A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x885 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x148 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x177 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x148 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x36C JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x30D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x364 JUMPI PUSH2 0x361 PUSH2 0x35A PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x343 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0xC3E JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x1209 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2EC JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC340A24 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD SWAP1 DUP2 MSTORE DUP3 SLOAD PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x489 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x489 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH4 0x77359400 DUP2 GT ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6F206D756368000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC340A24 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x559 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x608 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x452A9320 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1679 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x65B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x6CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526563697069656E7420646F6573206E6F742065786973740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x452A9320 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x7DE JUMPI PUSH2 0x78A PUSH2 0x3E8 PUSH2 0x784 PUSH1 0x19 PUSH1 0x4 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x76D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD SWAP1 PUSH2 0x126A JUMP JUMPDEST SWAP1 PUSH2 0x12C3 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x7DE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C696D697465723A2063616E6E6F742061646A757374206279203E322E352500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x840 JUMPI PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7F0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 GT ISZERO PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16BC PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 DUP5 MSTORE DUP5 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x2 SWAP1 DUP2 SWAP1 MSTORE SWAP5 KECCAK256 SWAP3 MLOAD DUP4 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP4 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC340A24 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x970 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD SWAP1 DUP2 MSTORE DUP3 SLOAD PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x489 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x489 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC340A24 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xAD9 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x452A9320 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xB14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1679 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB2C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB9C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526563697069656E7420646F6573206E6F742065786973740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBAB JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBEF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SSTORE POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 DUP4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF3 PUSH32 0x0 PUSH2 0x784 DUP5 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x126A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xD65 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4F6E6C79207374616B696E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xE79 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD81 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xE71 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xDD5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE0A PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x343 JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xE71 DUP2 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xD68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xEEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4F6E6C79207374616B696E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD ISZERO PUSH2 0xFA4 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 PUSH32 0x0 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC340A24 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x100D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1023 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD SWAP1 DUP2 MSTORE DUP3 SLOAD PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x489 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x489 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F20616464726573733A20526563697069656E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x1167 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526174652063616E6E6F74206578636565642064656E6F6D696E61746F720000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x2 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD SSTORE MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1263 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1279 JUMPI POP PUSH1 0x0 PUSH2 0xCF3 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1286 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x169B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1263 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x130D PUSH2 0x1655 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x60 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 ISZERO PUSH2 0x1501 JUMPI DUP1 MLOAD ISZERO PUSH2 0x1405 JUMPI PUSH2 0x137F DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1368 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x138C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x4 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x13B0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD LT PUSH2 0x1400 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP2 ADD MLOAD PUSH1 0x4 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x13EE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SSTORE JUMPDEST PUSH2 0x1501 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1417 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x147E JUMPI PUSH2 0x145B DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1444 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1468 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SSTORE PUSH2 0x149F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x148D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SSTORE JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x14B1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD GT PUSH2 0x1501 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP2 ADD MLOAD PUSH1 0x4 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x14EF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1591 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1556 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x153E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1583 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x159D JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x15A9 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x15B6 JUMPI INVALID JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1263 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x164D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1556 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x153E JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID NUMBER PUSH2 0x6C6C PUSH6 0x72206973206E PUSH16 0x7420676F7665726E6F72206F72206775 PUSH2 0x7264 PUSH10 0x616E536166654D617468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7743616E6E6F74206465 PUSH4 0x72656173 PUSH6 0x207261746520 PUSH3 0x79206D PUSH16 0x7265207468616E20697420616C726561 PUSH5 0x79206973A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH1 0x84 JUMP 0x1F 0xC6 0xC6 PUSH19 0xC74678B3159C4638C3B8F9E92625C360469C80 ADDRESS PC RETURNDATASIZE PUSH21 0xCA64736F6C63430007050033000000000000000000 ",
							"sourceMap": "255:36:4:-:0;234:6424:7;255:36:4;;234:6424:7;255:36:4;;;-1:-1:-1;;;255:36:4;;;;;;-1:-1:-1;;255:36:4;;:::i;:::-;-1:-1:-1;695:9:7;651:53;;1008:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1008:470:7;;;;;;;;;;;;;;;;495:9:4;:22;;-1:-1:-1;;;;;;495:22:4;-1:-1:-1;;;;;495:22:4;;;;;;;;532:28;;1008:470:7;;;;;;;;532:28:4;;-1:-1:-1;;532:28:4;-1:-1:-1;;;;;;1200:23:7;::::1;1192:58;;;::::0;;-1:-1:-1;;;1192:58:7;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;;1260:31:7::1;::::0;;;;::::1;::::0;-1:-1:-1;;;;;1309:18:7;::::1;1301:48;;;::::0;;-1:-1:-1;;;1301:48:7;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1301:48:7;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;;1359:18:7::1;::::0;;;;::::1;::::0;-1:-1:-1;;;;;1395:22:7;::::1;1387:56;;;::::0;;-1:-1:-1;;;1387:56:7;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;1453:18:7::1;::::0;-1:-1:-1;;;;;;1453:18:7;::::1;::::0;-1:-1:-1;234:6424:7;;-1:-1:-1;234:6424:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;234:6424:7;;;-1:-1:-1;234:6424:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {
								"789": [
									{
										"length": 32,
										"start": 3178
									}
								],
								"791": [
									{
										"length": 32,
										"start": 3483
									},
									{
										"length": 32,
										"start": 3828
									}
								],
								"793": [
									{
										"length": 32,
										"start": 3332
									},
									{
										"length": 32,
										"start": 3721
									},
									{
										"length": 32,
										"start": 3875
									}
								],
								"803": [
									{
										"length": 32,
										"start": 3141
									},
									{
										"length": 32,
										"start": 4340
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x943DFEF1 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC9FA8B2A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC9FA8B2A EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xE4FC6B6D EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xE7187E8A EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xF7982243 EQ PUSH2 0x283 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x943DFEF1 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xBC3B2B12 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x232 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x5DB854B0 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x5DB854B0 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x8E69E255 EQ PUSH2 0x1D0 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x2E340599 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x36D33F44 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x5D87D363 EQ PUSH2 0x15A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x885 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x148 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x177 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x148 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x36C JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x30D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x364 JUMPI PUSH2 0x361 PUSH2 0x35A PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x343 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0xC3E JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x1209 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2EC JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC340A24 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD SWAP1 DUP2 MSTORE DUP3 SLOAD PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x489 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x489 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH4 0x77359400 DUP2 GT ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6F206D756368000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC340A24 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x559 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x608 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x452A9320 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1679 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x65B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x6CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526563697069656E7420646F6573206E6F742065786973740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x452A9320 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x7DE JUMPI PUSH2 0x78A PUSH2 0x3E8 PUSH2 0x784 PUSH1 0x19 PUSH1 0x4 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x76D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD SWAP1 PUSH2 0x126A JUMP JUMPDEST SWAP1 PUSH2 0x12C3 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x7DE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C696D697465723A2063616E6E6F742061646A757374206279203E322E352500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x840 JUMPI PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7F0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 GT ISZERO PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16BC PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 DUP5 MSTORE DUP5 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x2 SWAP1 DUP2 SWAP1 MSTORE SWAP5 KECCAK256 SWAP3 MLOAD DUP4 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP4 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC340A24 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x970 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD SWAP1 DUP2 MSTORE DUP3 SLOAD PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x489 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x489 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC340A24 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xAD9 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x452A9320 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xB14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1679 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB2C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB9C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526563697069656E7420646F6573206E6F742065786973740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBAB JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBEF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SSTORE POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 DUP4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF3 PUSH32 0x0 PUSH2 0x784 DUP5 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x126A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xD65 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4F6E6C79207374616B696E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xE79 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD81 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xE71 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xDD5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE0A PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x343 JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xE71 DUP2 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xD68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xEEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4F6E6C79207374616B696E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD ISZERO PUSH2 0xFA4 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 PUSH32 0x0 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC340A24 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x100D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1023 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD SWAP1 DUP2 MSTORE DUP3 SLOAD PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x489 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x489 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F20616464726573733A20526563697069656E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x1167 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526174652063616E6E6F74206578636565642064656E6F6D696E61746F720000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x2 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD SSTORE MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1263 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1279 JUMPI POP PUSH1 0x0 PUSH2 0xCF3 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1286 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x169B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1263 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x130D PUSH2 0x1655 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x60 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 ISZERO PUSH2 0x1501 JUMPI DUP1 MLOAD ISZERO PUSH2 0x1405 JUMPI PUSH2 0x137F DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1368 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x138C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x4 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x13B0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD LT PUSH2 0x1400 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP2 ADD MLOAD PUSH1 0x4 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x13EE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SSTORE JUMPDEST PUSH2 0x1501 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1417 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x147E JUMPI PUSH2 0x145B DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1444 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1468 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SSTORE PUSH2 0x149F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x148D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SSTORE JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x14B1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD GT PUSH2 0x1501 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP2 ADD MLOAD PUSH1 0x4 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x14EF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1591 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1556 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x153E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1583 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x159D JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x15A9 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x15B6 JUMPI INVALID JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1263 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x164D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1556 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x153E JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID NUMBER PUSH2 0x6C6C PUSH6 0x72206973206E PUSH16 0x7420676F7665726E6F72206F72206775 PUSH2 0x7264 PUSH10 0x616E536166654D617468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7743616E6E6F74206465 PUSH4 0x72656173 PUSH6 0x207261746520 PUSH3 0x79206D PUSH16 0x7265207468616E20697420616C726561 PUSH5 0x79206973A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH1 0x84 JUMP 0x1F 0xC6 0xC6 PUSH19 0xC74678B3159C4638C3B8F9E92625C360469C80 ADDRESS PC RETURNDATASIZE PUSH21 0xCA64736F6C63430007050033000000000000000000 ",
							"sourceMap": "234:6424:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;855:18;;;;;;;;;;;;;;;;-1:-1:-1;855:18:7;;:::i;:::-;;;;;;;-1:-1:-1;;;;;855:18:7;;;;;;;;;;;;;;;;4129:328;;;;;;;;;;;;;;;;-1:-1:-1;4129:328:7;-1:-1:-1;;;;;4129:328:7;;:::i;:::-;;;;;;;;;;;;;;;;4600:145;;;;;;;;;;;;;;;;-1:-1:-1;4600:145:7;;:::i;:::-;;5888:768;;;;;;;;;;;;;;;;-1:-1:-1;5888:768:7;;;;;;;;;;;;;;;;;;;:::i;1108:164:4:-;;;;;;;;;;;;;;;;-1:-1:-1;1108:164:4;-1:-1:-1;;;;;1108:164:4;;:::i;5306:388:7:-;;;;;;;;;;;;;;;;-1:-1:-1;5306:388:7;;:::i;614:30::-;;;:::i;563:45::-;;;;;;;;;;;;;;;;-1:-1:-1;563:45:7;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;359:33:4;;;:::i;:::-;;;;-1:-1:-1;;;;;359:33:4;;;;;;;;;;;;;;3835:149:7;;;;;;;;;;;;;;;;-1:-1:-1;3835:149:7;;:::i;1596:416::-;;;:::i;2018:317::-;;;:::i;4882:323::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4882:323:7;;;;;;;;:::i;855:18::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;855:18:7;;:::o;4129:328::-;4202:7;4221:14;4250:9;4245:183;4269:4;:11;4265:15;;4245:183;;;4326:10;-1:-1:-1;;;;;4305:31:7;:4;4310:1;4305:7;;;;;;;;;;;;;;;;:17;:7;;;;;:17;;-1:-1:-1;;;;;4305:17:7;:31;4301:117;;;4365:38;4376:26;4389:4;4394:1;4389:7;;;;;;;;;;;;;;;;;;:12;;;4376;:26::i;:::-;4365:6;;:10;:38::i;:::-;4356:47;;4301:117;4282:3;;4245:183;;;-1:-1:-1;4444:6:7;4129:328;-1:-1:-1;;4129:328:7:o;4600:145::-;672:9:4;;;;;;;;;-1:-1:-1;;;;;672:9:4;-1:-1:-1;;;;;672:18:4;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;672:20:4;694:12;;-1:-1:-1;;;;;658:34:4;:10;:34;650:57;;;;-1:-1:-1;;;650:57:4;;;;;;;;;;;;-1:-1:-1;;650:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4696:3:7::1;4685:7;:14;;4677:35;;;::::0;;-1:-1:-1;;;4677:35:7;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;4722:6;:16:::0;4600:145::o;5888:768::-;6071:9;;;;;;;;;-1:-1:-1;;;;;6071:9:7;-1:-1:-1;;;;;6071:18:7;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6071:20:7;-1:-1:-1;;;;;6057:34:7;:10;:34;;:72;;;6109:9;;;;;;;;;-1:-1:-1;;;;;6109:9:7;-1:-1:-1;;;;;6109:18:7;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6109:20:7;-1:-1:-1;;;;;6095:34:7;:10;:34;6057:72;6036:153;;;;-1:-1:-1;;;6036:153:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6241:1;-1:-1:-1;;;;;6207:36:7;:4;6212:6;6207:12;;;;;;;;;;;;;;;;:22;:12;;;;;:22;;-1:-1:-1;;;;;6207:22:7;:36;;6199:73;;;;;-1:-1:-1;;;6199:73:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;6301:9;;;;;;;;;-1:-1:-1;;;;;6301:9:7;-1:-1:-1;;;;;6301:18:7;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6301:20:7;-1:-1:-1;;;;;6287:34:7;:10;:34;6283:153;;;6354:35;6384:4;6354:25;6376:2;6354:4;6359:6;6354:12;;;;;;;;;;;;;;;;;;;;;:17;;:21;:25::i;:::-;:29;;:35::i;:::-;6345:5;:44;;6337:88;;;;;-1:-1:-1;;;6337:88:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;6451:4;6446:122;;6488:4;6493:6;6488:12;;;;;;;;;;;;;;;;;;:17;;;6479:5;:26;;6471:86;;;;-1:-1:-1;;;6471:86:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6600:49;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6578:19:7;;;:11;:19;;;;;;:71;;;;-1:-1:-1;;6578:71:7;;;;;;;;;-1:-1:-1;6578:71:7;;;;;;;5888:768::o;1108:164:4:-;672:9;;;;;;;;;-1:-1:-1;;;;;672:9:4;-1:-1:-1;;;;;672:18:4;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;672:20:4;694:12;;-1:-1:-1;;;;;658:34:4;:10;:34;650:57;;;;-1:-1:-1;;;650:57:4;;;;;;;;;;;;-1:-1:-1;;650:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1194:9:4::1;:25:::0;;-1:-1:-1;;1194:25:4::1;-1:-1:-1::0;;;;;1194:25:4;::::1;::::0;;::::1;::::0;;;1234:31:::1;::::0;::::1;::::0;-1:-1:-1;;1234:31:4::1;1108:164:::0;:::o;5306:388:7:-;5410:9;;;;;;;;;-1:-1:-1;;;;;5410:9:7;-1:-1:-1;;;;;5410:18:7;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5410:20:7;-1:-1:-1;;;;;5396:34:7;:10;:34;;:72;;;5448:9;;;;;;;;;-1:-1:-1;;;;;5448:9:7;-1:-1:-1;;;;;5448:18:7;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5448:20:7;-1:-1:-1;;;;;5434:34:7;:10;:34;5396:72;5375:153;;;;-1:-1:-1;;;5375:153:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5580:1;-1:-1:-1;;;;;5546:36:7;:4;5551:6;5546:12;;;;;;;;;;;;;;;;:22;:12;;;;;:22;;-1:-1:-1;;;;;5546:22:7;:36;;5538:73;;;;;-1:-1:-1;;;5538:73:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;5654:1;5621:4;5626:6;5621:12;;;;;;;;;;;;;;;;;;:22;;;:35;;;;;-1:-1:-1;;;;;5621:35:7;;;;;-1:-1:-1;;;;;5621:35:7;;;;;;5686:1;5666:4;5671:6;5666:12;;;;;;;;;;;;;;;;;;;;;:21;-1:-1:-1;5306:388:7:o;614:30::-;;;;:::o;563:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;359:33:4:-;;;-1:-1:-1;;;;;359:33:4;;:::o;3835:149:7:-;3902:7;3928:49;3961:15;3928:28;3950:5;3928:3;-1:-1:-1;;;;;3928:15:7;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3928:17:7;;:21;:28::i;:49::-;3921:56;3835:149;-1:-1:-1;;3835:149:7:o;1596:416::-;1654:10;-1:-1:-1;;;;;1668:7:7;1654:21;;1646:46;;;;;-1:-1:-1;;;1646:46:7;;;;;;;;;;;;-1:-1:-1;;;1646:46:7;;;;;;;;;;;;;;;1755:9;1750:256;1774:4;:11;1770:15;;1750:256;;;1825:1;1810:4;1815:1;1810:7;;;;;;;;;;;;;;;;;;:12;;;:16;1806:190;;;1846:8;-1:-1:-1;;;;;1846:13:7;;1860:4;1865:1;1860:7;;;;;;;;;;;;;;;;;;:17;;;;;;;;;;-1:-1:-1;;;;;1860:17:7;1879:26;1892:4;1897:1;1892:7;;;;;;;1879:26;1846:60;;;;;;;;;;;;;-1:-1:-1;;;;;1846:60:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1948:9;1955:1;1948:6;:9::i;:::-;1787:3;;1750:256;;;;1596:416::o;2018:317::-;2071:7;2098:10;-1:-1:-1;;;;;2112:7:7;2098:21;;2090:46;;;;;-1:-1:-1;;;2090:46:7;;;;;;;;;;;;-1:-1:-1;;;2090:46:7;;;;;;;;;;;;;;;2229:6;;:10;2225:80;;2255:8;-1:-1:-1;;;;;2255:13:7;;2277:7;2287:6;;2255:39;;;;;;;;;;;;;-1:-1:-1;;;;;2255:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2225:80;-1:-1:-1;2322:6:7;;2018:317;:::o;4882:323::-;672:9:4;;;;;;;;;-1:-1:-1;;;;;672:9:4;-1:-1:-1;;;;;672:18:4;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;672:20:4;694:12;;-1:-1:-1;;;;;658:34:4;:10;:34;650:57;;;;-1:-1:-1;;;650:57:4;;;;;;;;;;;;-1:-1:-1;;650:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4994:24:7;::::1;4986:60;;;::::0;;-1:-1:-1;;;4986:60:7;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;5079:15;5064:11;:30;;5056:73;;;::::0;;-1:-1:-1;;;5056:73:7;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;5149:48;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;;;5149:48:7;;::::1;;::::0;::::1;::::0;;;5139:4:::1;:59:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;5139:59:7;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;5139:59:7::1;::::0;;;::::1;;::::0;;4882:323::o;155:176:6:-;213:7;244:5;;;267:6;;;;259:46;;;;;-1:-1:-1;;;259:46:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;323:1;155:176;-1:-1:-1;;;155:176:6:o;700:241::-;758:7;781:6;777:45;;-1:-1:-1;810:1:6;803:8;;777:45;844:5;;;848:1;844;:5;:1;867:5;;;;;:10;859:56;;;;-1:-1:-1;;;859:56:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:130;1005:7;1031:39;1035:1;1038;1031:39;;;;;;;;;;;;;;;;;:3;:39::i;2453:1213:7:-;2504:24;;:::i;:::-;-1:-1:-1;2531:19:7;;;;:11;:19;;;;;;;;;2504:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2564:20;2560:1100;;2604:14;;2600:1050;;;2701:38;2723:10;:15;;;2701:4;2706:6;2701:12;;;;;;;;;;;;;;;;;;;;;:17;;:21;:38::i;:::-;2681:4;2686:6;2681:12;;;;;;;;;;;;;;;;;;;;;:58;2796:17;;;;2775:4;:12;;2780:6;;2775:12;;;;;;;;;;;;;;;;:17;;;:38;2771:249;;2901:1;2874:19;;;:11;:19;;;;;;:24;;:28;;;;2967:17;;;2947:4;:12;;2886:6;;2947:12;;;;;;;;;;;;;;;;;;;:37;2771:249;2600:1050;;;3125:10;:15;;;3105:4;3110:6;3105:12;;;;;;;;;;;;;;;;;;:17;;;:35;3101:268;;;3230:38;3252:10;:15;;;3230:4;3235:6;3230:12;;;;;;;;;;;;;;;;;;;;;:17;;:21;:38::i;:::-;3210:4;3215:6;3210:12;;;;;;;;;;;;;;;;;;;;;:58;3101:268;;;3349:1;3329:4;3334:6;3329:12;;;;;;;;;;;;;;;;;;;;;:21;3101:268;3412:10;:17;;;3391:4;3396:6;3391:12;;;;;;;;;;;;;;;;;;:17;;;:38;3387:249;;3517:1;3490:19;;;:11;:19;;;;;;:24;;:28;;;;3583:17;;;3563:4;:12;;3502:6;;3563:12;;;;;;;;;;;;;;;;;;;:37;3387:249;2453:1213;;:::o;1083:301:6:-;1199:7;1233:12;1226:5;1218:28;;;;-1:-1:-1;;;1218:28:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1256:9;1272:1;1268;:5;;;;;;1256:17;;1308:1;1304;:5;;;;;;1299:1;1295;:5;:15;1290:1;:20;1283:28;;;;1376:1;1083:301;-1:-1:-1;;;;1083:301:6:o;337:134::-;395:7;421:43;425:1;428;421:43;;;;;;;;;;;;;;;;;593:7;628:12;620:6;;;;612:29;;;;-1:-1:-1;;;612:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;663:5:6;;;477:217::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1184000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addRecipient(address,uint256)": "infinite",
								"adjustments(uint256)": "2844",
								"authority()": "1104",
								"bounty()": "1021",
								"distribute()": "infinite",
								"info(uint256)": "2844",
								"nextRewardAt(uint256)": "infinite",
								"nextRewardFor(address)": "infinite",
								"removeRecipient(uint256)": "infinite",
								"retrieveBounty()": "infinite",
								"setAdjustment(uint256,bool,uint256,uint256)": "infinite",
								"setAuthority(address)": "infinite",
								"setBounty(uint256)": "infinite"
							},
							"internal": {
								"adjust(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 255,
									"end": 291,
									"name": "PUSH",
									"source": 4,
									"value": "140"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 291,
									"name": "PUSH",
									"source": 4,
									"value": "C"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 255,
									"end": 291,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 291,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "15539055551213D492569151"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 255,
									"end": 291,
									"name": "PUSH",
									"source": 4,
									"value": "120"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 291,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 255,
									"end": 291,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 255,
									"end": 291,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 255,
									"end": 291,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 255,
									"end": 291,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 291,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 695,
									"end": 704,
									"name": "PUSH",
									"source": 7,
									"value": "F4240"
								},
								{
									"begin": 651,
									"end": 704,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 651,
									"end": 704,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 495,
									"end": 517,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 495,
									"end": 517,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 495,
									"end": 517,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 495,
									"end": 517,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 495,
									"end": 517,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 495,
									"end": 517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 495,
									"end": 517,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 495,
									"end": 517,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 495,
									"end": 517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 495,
									"end": 517,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 495,
									"end": 517,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 532,
									"end": 560,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 532,
									"end": 560,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1478,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 532,
									"end": 560,
									"name": "PUSH",
									"source": 4,
									"value": "2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD"
								},
								{
									"begin": 532,
									"end": 560,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 532,
									"end": 560,
									"name": "LOG2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1200,
									"end": 1223,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1223,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "PUSH",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "PUSH",
									"source": 7,
									"value": "5A65726F20616464726573733A20547265617375727900000000000000000000"
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1192,
									"end": 1250,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1260,
									"end": 1291,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1260,
									"end": 1291,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 1291,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 1291,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 1291,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 1291,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 1260,
									"end": 1291,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1309,
									"end": 1327,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1327,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5A65726F20616464726573733A2045584F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "78"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1301,
									"end": 1349,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1395,
									"end": 1417,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1395,
									"end": 1417,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "PUSH",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "PUSH",
									"source": 7,
									"value": "5A65726F20616464726573733A205374616B696E670000000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1387,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1453,
									"end": 1471,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1453,
									"end": 1471,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1453,
									"end": 1471,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1453,
									"end": 1471,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 1453,
									"end": 1471,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "803"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "793"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "791"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "789"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 6658,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc6084561fc6c672c74678b3159c4638c3b8f9e92625c360469c8030583d74ca64736f6c63430007050033",
									".code": [
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "943DFEF1"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "C9FA8B2A"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "C9FA8B2A"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "E4FC6B6D"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "E7187E8A"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "F7982243"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "943DFEF1"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "BC3B2B12"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "BF7E214F"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "5DB854B0"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "5DB854B0"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "7A9E5E4B"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "8E69E255"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "2E340599"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "36D33F44"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "5D87D363"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 234,
											"end": 6658,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 873,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 614,
											"end": 644,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 614,
											"end": 644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 614,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 614,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 614,
											"end": 644,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 563,
											"end": 608,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 359,
											"end": 392,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 359,
											"end": 392,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1596,
											"end": 2012,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1596,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1596,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1596,
											"end": 2012,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2018,
											"end": 2335,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 2018,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2018,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2018,
											"end": 2335,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 855,
											"end": 873,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 855,
											"end": 873,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4202,
											"end": 4209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4221,
											"end": 4235,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4428,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4245,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4273,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4269,
											"end": 4280,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4280,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4280,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4245,
											"end": 4428,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4245,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4245,
											"end": 4428,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4336,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4305,
											"end": 4336,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4309,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4310,
											"end": 4311,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4322,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4322,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4322,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4305,
											"end": 4322,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4336,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4301,
											"end": 4418,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4301,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4301,
											"end": 4418,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4376,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4389,
											"end": 4393,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4394,
											"end": 4395,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4401,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4401,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4376,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 4376,
											"end": 4402,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4376,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4376,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4365,
											"end": 4403,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4365,
											"end": 4403,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4365,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4403,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4301,
											"end": 4418,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4301,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4285,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4282,
											"end": 4285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4245,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4245,
											"end": 4428,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4245,
											"end": 4428,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4245,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4129,
											"end": 4457,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 672,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 672,
											"end": 681,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 672,
											"end": 681,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 672,
											"end": 690,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 672,
											"end": 690,
											"name": "PUSH",
											"source": 4,
											"value": "C340A24"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 694,
											"end": 706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 706,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 658,
											"end": 692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 658,
											"end": 668,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 658,
											"end": 692,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4696,
											"end": 4699,
											"name": "PUSH",
											"source": 7,
											"value": "77359400"
										},
										{
											"begin": 4685,
											"end": 4692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4685,
											"end": 4699,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4685,
											"end": 4699,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "PUSH",
											"source": 7,
											"value": "546F6F206D756368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 4677,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4722,
											"end": 4738,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4745,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6080,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6071,
											"end": 6080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6080,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6080,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6071,
											"end": 6080,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6080,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6071,
											"end": 6080,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6071,
											"end": 6089,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6089,
											"name": "PUSH",
											"source": 7,
											"value": "C340A24"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6057,
											"end": 6091,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6067,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6091,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6091,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6057,
											"end": 6129,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "PUSH",
											"source": 7,
											"value": "452A9320"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6129,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6095,
											"end": 6129,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6095,
											"end": 6105,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6095,
											"end": 6129,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6129,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6057,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "PUSH data",
											"source": 7,
											"value": "69F7F70959A4E39A44E5C1E9758516DC060C05AF9D2514644D1E8FB784F16900"
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 6036,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6241,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6207,
											"end": 6243,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6211,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6212,
											"end": 6218,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6229,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6229,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6207,
											"end": 6229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6243,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6243,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "PUSH",
											"source": 7,
											"value": "526563697069656E7420646F6573206E6F742065786973740000000000000000"
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "PUSH",
											"source": 7,
											"value": "452A9320"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6301,
											"end": 6321,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6287,
											"end": 6321,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6297,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6321,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6283,
											"end": 6436,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6283,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 6283,
											"end": 6436,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 6354,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 6376,
											"end": 6378,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 6354,
											"end": 6358,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6359,
											"end": 6365,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6371,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6354,
											"end": 6379,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6354,
											"end": 6379,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 6354,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 6354,
											"end": 6389,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6354,
											"end": 6389,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6354,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6350,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6389,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6389,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "PUSH",
											"source": 7,
											"value": "4C696D697465723A2063616E6E6F742061646A757374206279203E322E352500"
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6451,
											"end": 6455,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6446,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 6446,
											"end": 6568,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6492,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6493,
											"end": 6499,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6500,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6488,
											"end": 6505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6505,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6505,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6505,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "PUSH",
											"source": 7,
											"value": "2F"
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "PUSH data",
											"source": 7,
											"value": "ED69D779FA32807A0AB0C062194B492CF21FE3FB9F699C4CB98FDB2693AB648A"
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "PUSH",
											"source": 7,
											"value": "2F"
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 6471,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6649,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6578,
											"end": 6597,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6597,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6597,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6589,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6578,
											"end": 6597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6597,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6597,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6597,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6597,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6649,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 6656,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 672,
											"end": 681,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 672,
											"end": 681,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 672,
											"end": 690,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 672,
											"end": 690,
											"name": "PUSH",
											"source": 4,
											"value": "C340A24"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 694,
											"end": 706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 706,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 658,
											"end": 692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 658,
											"end": 668,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 658,
											"end": 692,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1194,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "PUSH",
											"source": 4,
											"value": "2F658B440C35314F52658EA8A740E05B284CDC84DC9AE01E891F21B8933E7CAD"
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1272,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5410,
											"end": 5428,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5428,
											"name": "PUSH",
											"source": 7,
											"value": "C340A24"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5396,
											"end": 5430,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5396,
											"end": 5406,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5396,
											"end": 5430,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5396,
											"end": 5430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5396,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5396,
											"end": 5468,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5396,
											"end": 5468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5457,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5448,
											"end": 5457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5457,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5457,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5448,
											"end": 5457,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5457,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5457,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5466,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5466,
											"name": "PUSH",
											"source": 7,
											"value": "452A9320"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5468,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5434,
											"end": 5468,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5444,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5468,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5396,
											"end": 5468,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5396,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "PUSH data",
											"source": 7,
											"value": "69F7F70959A4E39A44E5C1E9758516DC060C05AF9D2514644D1E8FB784F16900"
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5375,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5546,
											"end": 5582,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5550,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5551,
											"end": 5557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5568,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5568,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5568,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5546,
											"end": 5568,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5582,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5546,
											"end": 5582,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "PUSH",
											"source": 7,
											"value": "526563697069656E7420646F6573206E6F742065786973740000000000000000"
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 5538,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5654,
											"end": 5655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5626,
											"end": 5632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5643,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5621,
											"end": 5643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 5687,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5670,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5671,
											"end": 5677,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5687,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5306,
											"end": 5694,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 614,
											"end": 644,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 614,
											"end": 644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 614,
											"end": 644,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 614,
											"end": 644,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 614,
											"end": 644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 614,
											"end": 644,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 563,
											"end": 608,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 359,
											"end": 392,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 359,
											"end": 392,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 359,
											"end": 392,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 3909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3961,
											"end": 3976,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "803"
										},
										{
											"begin": 3928,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 3950,
											"end": 3955,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3931,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "789"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 3943,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3943,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3928,
											"end": 3956,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3928,
											"end": 3977,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3928,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3977,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3835,
											"end": 3984,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1596,
											"end": 2012,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1596,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1654,
											"end": 1664,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "793"
										},
										{
											"begin": 1654,
											"end": 1675,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1654,
											"end": 1675,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F6E6C79207374616B696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1646,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 2006,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1750,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1774,
											"end": 1785,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2006,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1750,
											"end": 2006,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1826,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1814,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1822,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1826,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1806,
											"end": 1996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1806,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1806,
											"end": 1996,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1854,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "791"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 1860,
											"end": 1864,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1865,
											"end": 1866,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1879,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1892,
											"end": 1896,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1897,
											"end": 1898,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1899,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1899,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1892,
											"end": 1899,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1899,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 1879,
											"end": 1905,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1879,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1948,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1955,
											"end": 1956,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1948,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1948,
											"end": 1957,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1948,
											"end": 1957,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1948,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1790,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1787,
											"end": 1790,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1750,
											"end": 2006,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2006,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1750,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 2012,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2018,
											"end": 2335,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2018,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2108,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "793"
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2119,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F6E6C79207374616B696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2090,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2229,
											"end": 2235,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2229,
											"end": 2235,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2229,
											"end": 2239,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2225,
											"end": 2305,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2263,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "791"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2255,
											"end": 2268,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2268,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "793"
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2305,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2225,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2335,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 672,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 672,
											"end": 681,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 681,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 672,
											"end": 681,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 672,
											"end": 690,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 672,
											"end": 690,
											"name": "PUSH",
											"source": 4,
											"value": "C340A24"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 672,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 672,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 672,
											"end": 692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 694,
											"end": 706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 706,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 658,
											"end": 692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 658,
											"end": 668,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 658,
											"end": 692,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 650,
											"end": 707,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 650,
											"end": 707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 5018,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5018,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "PUSH",
											"source": 7,
											"value": "5A65726F20616464726573733A20526563697069656E74000000000000000000"
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 4986,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5079,
											"end": 5094,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "803"
										},
										{
											"begin": 5064,
											"end": 5075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5094,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5094,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "PUSH",
											"source": 7,
											"value": "526174652063616E6E6F74206578636565642064656E6F6D696E61746F720000"
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 5056,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "PUSH",
											"source": 7,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "PUSH",
											"source": 7,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C"
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5198,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5205,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 155,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 155,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 213,
											"end": 220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 244,
											"end": 249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 244,
											"end": 249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 267,
											"end": 273,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 267,
											"end": 273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 267,
											"end": 273,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 267,
											"end": 273,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 6,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 259,
											"end": 305,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 324,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 155,
											"end": 331,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 155,
											"end": 331,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 700,
											"end": 941,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 700,
											"end": 941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 777,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 777,
											"end": 822,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 803,
											"end": 811,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 777,
											"end": 822,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 777,
											"end": 822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 844,
											"end": 849,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 844,
											"end": 845,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 844,
											"end": 845,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 867,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 867,
											"end": 872,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 867,
											"end": 872,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 867,
											"end": 872,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 867,
											"end": 872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 867,
											"end": 872,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 867,
											"end": 877,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH data",
											"source": 6,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 859,
											"end": 915,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 947,
											"end": 1077,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 947,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1005,
											"end": 1012,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1035,
											"end": 1036,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1039,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2453,
											"end": 3666,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2453,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2504,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 2504,
											"end": 2528,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2504,
											"end": 2528,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2504,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2531,
											"end": 2550,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2542,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2531,
											"end": 2550,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2531,
											"end": 2550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2550,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2550,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2550,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2584,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2560,
											"end": 3660,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2618,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2618,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 3650,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2600,
											"end": 3650,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2723,
											"end": 2733,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2705,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2701,
											"end": 2739,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2701,
											"end": 2739,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2701,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2685,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2739,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2796,
											"end": 2813,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2796,
											"end": 2813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2796,
											"end": 2813,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2779,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2792,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2792,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2792,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2813,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2771,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2771,
											"end": 3020,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2885,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2898,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2874,
											"end": 2898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2902,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2951,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2892,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2984,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2771,
											"end": 3020,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2771,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2600,
											"end": 3650,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 3650,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2600,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3140,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3109,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3110,
											"end": 3116,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3122,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3122,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3122,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3140,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3369,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3101,
											"end": 3369,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3252,
											"end": 3262,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3267,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3267,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3267,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3234,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3247,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3230,
											"end": 3268,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3230,
											"end": 3268,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3230,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3268,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3101,
											"end": 3369,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3369,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3101,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3333,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3334,
											"end": 3340,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3350,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3369,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3101,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3412,
											"end": 3422,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3395,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3396,
											"end": 3402,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3408,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3408,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3429,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3387,
											"end": 3636,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3501,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3509,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3514,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3490,
											"end": 3514,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3518,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3600,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3567,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3508,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3508,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3600,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3636,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3387,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 3666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 3666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 3666,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1206,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1256,
											"end": 1273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1256,
											"end": 1273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1300,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1310,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1310,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 337,
											"end": 471,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 337,
											"end": 471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 395,
											"end": 402,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 425,
											"end": 426,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 428,
											"end": 429,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 6,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 421,
											"end": 464,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 593,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 640,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 620,
											"end": 626,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 620,
											"end": 626,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 612,
											"end": 641,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 477,
											"end": 694,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "192"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"69F7F70959A4E39A44E5C1E9758516DC060C05AF9D2514644D1E8FB784F16900": "43616c6c6572206973206e6f7420676f7665726e6f72206f7220677561726469616e",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"ED69D779FA32807A0AB0C062194B492CF21FE3FB9F699C4CB98FDB2693AB648A": "43616e6e6f742064656372656173652072617465206279206d6f7265207468616e20697420616c7265616479206973"
									}
								}
							}
						},
						"methodIdentifiers": {
							"addRecipient(address,uint256)": "f7982243",
							"adjustments(uint256)": "bc3b2b12",
							"authority()": "bf7e214f",
							"bounty()": "943dfef1",
							"distribute()": "e4fc6b6d",
							"info(uint256)": "2e340599",
							"nextRewardAt(uint256)": "c9fa8b2a",
							"nextRewardFor(address)": "36d33f44",
							"removeRecipient(uint256)": "8e69e255",
							"retrieveBounty()": "e7187e8a",
							"setAdjustment(uint256,bool,uint256,uint256)": "5db854b0",
							"setAuthority(address)": "7a9e5e4b",
							"setBounty(uint256)": "5d87d363"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_exo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_staking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IExodusAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"name\":\"addRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"adjustments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IExodusAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bounty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"info\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"nextRewardAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"nextRewardFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"removeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveBounty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_add\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_target\",\"type\":\"uint256\"}],\"name\":\"setAdjustment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IExodusAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"setBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addRecipient(address,uint256)\":{\"params\":{\"_recipient\":\"address\",\"_rewardRate\":\"uint\"}},\"nextRewardAt(uint256)\":{\"params\":{\"_rate\":\"uint\"},\"returns\":{\"_0\":\"uint\"}},\"nextRewardFor(address)\":{\"params\":{\"_recipient\":\"address\"},\"returns\":{\"_0\":\"uint\"}},\"removeRecipient(uint256)\":{\"params\":{\"_index\":\"uint\"}},\"setAdjustment(uint256,bool,uint256,uint256)\":{\"params\":{\"_add\":\"bool\",\"_index\":\"uint\",\"_rate\":\"uint\",\"_target\":\"uint\"}},\"setBounty(uint256)\":{\"params\":{\"_bounty\":\"uint256\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addRecipient(address,uint256)\":{\"notice\":\"adds recipient for distributions\"},\"distribute()\":{\"notice\":\"send epoch reward to staking contract\"},\"nextRewardAt(uint256)\":{\"notice\":\"view function for next reward at given rate\"},\"nextRewardFor(address)\":{\"notice\":\"view function for next reward for specified address\"},\"removeRecipient(uint256)\":{\"notice\":\"removes recipient for distributions\"},\"setAdjustment(uint256,bool,uint256,uint256)\":{\"notice\":\"set adjustment info for a collector's reward rate\"},\"setBounty(uint256)\":{\"notice\":\"set bounty to incentivize keepers\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Distributor/StakingDistributor.sol\":\"Distributor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"Distributor/IDistributor.sol\":{\"keccak256\":\"0xd6fc7153d8030366c99d408843ea948ba7b79c269f809ddbd31b78d7d71751c8\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e4dd2044e7e3c93eed1b90abae9ed98b11bbf5a3b6503b50d5a902b3431bbdd2\",\"dweb:/ipfs/Qma56BMxif1AFH7ZpcGALFwYWNyiD9X43yezcFtE6Quj3V\"]},\"Distributor/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"Distributor/IOlympusAuthority.sol\":{\"keccak256\":\"0x81a1f77da7ddb3bf1defad03673098cc8d01fbb1ea29d9ef4968b205746f041c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://2ae99a51e64ed363058e8b18c33b1f498f84d3588f71c442e427fc0021a79a04\",\"dweb:/ipfs/QmTkMMtvLKnhqEtRWCimY2r3oY5B8FpHqmG5fuhbLQKRJg\"]},\"Distributor/ITreasury.sol\":{\"keccak256\":\"0x3a7e171916da6bf9b28904c2adc6ede32896a841e7f7ede0ad60da6804659c56\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://591b853c1ba8b666992cabc4279b1d9bfc32e79c618b14e42026bc4ab5a8b9f3\",\"dweb:/ipfs/QmNMn45JaWKZvMg6Fk8JTuCTVJRcAozFmEAGmLHKr7cZ1b\"]},\"Distributor/OlympusAccessControlled.sol\":{\"keccak256\":\"0xe08e1633d46748f33f8e4bab7cc743f5f427174aa54ad4b9066e8106aad66b69\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://01010d4ba59a88af6b3dd2fe46d06ce141effdf0421dfaa8dc91b8d3cc895654\",\"dweb:/ipfs/QmaPzow7X4CNeCNUd2vgwDpbnqvHxCnQV3L2kfAFu56qAX\"]},\"Distributor/SafeERC20.sol\":{\"keccak256\":\"0x873d82e1f38006c425bcb544d8cca59114ca252f64457e2cc3376ef9a68f2c8e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://de509f28376467145aff3d45a974708c22838fb21c13f036a79d55d7b389078b\",\"dweb:/ipfs/QmTVAVLp2cgCV3MHnFv1YJbH4eYW4xtayLvpmZR5t8CGYc\"]},\"Distributor/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]},\"Distributor/StakingDistributor.sol\":{\"keccak256\":\"0x4500755b450fff6a61ceea08201e69e88ae0e03e7b23d75ed74fbcecd67e3c12\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://4d96af4ad95a9cd4e4070a625b4aea228b95761d066b15648614d2755fb6646f\",\"dweb:/ipfs/Qmek5FEPvmcsynKDtiY4g2BLgyBkceZBnJXxaUpSAriRA6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 283,
								"contract": "Distributor/StakingDistributor.sol:Distributor",
								"label": "UNAUTHORIZED",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 285,
								"contract": "Distributor/StakingDistributor.sol:Distributor",
								"label": "authority",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IExodusAuthority)205"
							},
							{
								"astId": 797,
								"contract": "Distributor/StakingDistributor.sol:Distributor",
								"label": "adjustments",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(Adjust)818_storage)"
							},
							{
								"astId": 800,
								"contract": "Distributor/StakingDistributor.sol:Distributor",
								"label": "bounty",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 811,
								"contract": "Distributor/StakingDistributor.sol:Distributor",
								"label": "info",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_struct(Info)808_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Info)808_storage)dyn_storage": {
								"base": "t_struct(Info)808_storage",
								"encoding": "dynamic_array",
								"label": "struct Distributor.Info[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IExodusAuthority)205": {
								"encoding": "inplace",
								"label": "contract IExodusAuthority",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(Adjust)818_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Distributor.Adjust)",
								"numberOfBytes": "32",
								"value": "t_struct(Adjust)818_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Adjust)818_storage": {
								"encoding": "inplace",
								"label": "struct Distributor.Adjust",
								"members": [
									{
										"astId": 813,
										"contract": "Distributor/StakingDistributor.sol:Distributor",
										"label": "add",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 815,
										"contract": "Distributor/StakingDistributor.sol:Distributor",
										"label": "rate",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 817,
										"contract": "Distributor/StakingDistributor.sol:Distributor",
										"label": "target",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Info)808_storage": {
								"encoding": "inplace",
								"label": "struct Distributor.Info",
								"members": [
									{
										"astId": 805,
										"contract": "Distributor/StakingDistributor.sol:Distributor",
										"label": "rate",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 807,
										"contract": "Distributor/StakingDistributor.sol:Distributor",
										"label": "recipient",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addRecipient(address,uint256)": {
								"notice": "adds recipient for distributions"
							},
							"distribute()": {
								"notice": "send epoch reward to staking contract"
							},
							"nextRewardAt(uint256)": {
								"notice": "view function for next reward at given rate"
							},
							"nextRewardFor(address)": {
								"notice": "view function for next reward for specified address"
							},
							"removeRecipient(uint256)": {
								"notice": "removes recipient for distributions"
							},
							"setAdjustment(uint256,bool,uint256,uint256)": {
								"notice": "set adjustment info for a collector's reward rate"
							},
							"setBounty(uint256)": {
								"notice": "set bounty to incentivize keepers"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Distributor/IDistributor.sol": {
				"ast": {
					"absolutePath": "Distributor/IDistributor.sol",
					"exportedSymbols": {
						"IDistributor": [
							57
						]
					},
					"id": 58,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 57,
							"linearizedBaseContracts": [
								57
							],
							"name": "IDistributor",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e4fc6b6d",
									"id": 4,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "122:0:0"
									},
									"scope": 57,
									"src": "92:31:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "943dfef1",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bounty",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "144:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "170:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "169:9:0"
									},
									"scope": 57,
									"src": "129:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e7187e8a",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "retrieveBounty",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "208:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "229:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:9:0"
									},
									"scope": 57,
									"src": "185:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9fa8b2a",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nextRewardAt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_rate",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "266:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "265:15:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "304:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "303:9:0"
									},
									"scope": 57,
									"src": "244:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "36d33f44",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nextRewardFor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "342:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:20:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "385:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:9:0"
									},
									"scope": 57,
									"src": "319:75:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5d87d363",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBounty",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "_bounty",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "419:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:0:0"
									},
									"scope": 57,
									"src": "400:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f7982243",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addRecipient",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "473:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "493:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:41:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:0:0"
									},
									"scope": 57,
									"src": "451:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8e69e255",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeRecipient",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "_index",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "554:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:16:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "578:0:0"
									},
									"scope": 57,
									"src": "529:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5db854b0",
									"id": 56,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAdjustment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "_index",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "617:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "_add",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "641:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "641:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "_rate",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "660:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "_target",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:97:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "713:0:0"
									},
									"scope": 57,
									"src": "585:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 58,
							"src": "63:653:0"
						}
					],
					"src": "37:680:0"
				},
				"id": 0
			},
			"Distributor/IERC20.sol": {
				"ast": {
					"absolutePath": "Distributor/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							126
						]
					},
					"id": 127,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 59,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "106:2:1"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "132:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:9:1"
									},
									"scope": 126,
									"src": "86:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "166:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "166:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:17:1"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "206:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:1"
									},
									"scope": 126,
									"src": "147:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "239:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "258:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:35:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "292:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "292:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:6:1"
									},
									"scope": 126,
									"src": "221:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "323:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:32:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "378:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:9:1"
									},
									"scope": 126,
									"src": "304:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "410:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "427:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:33:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "461:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 95,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "461:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:6:1"
									},
									"scope": 126,
									"src": "393:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "504:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "555:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:81:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "594:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "594:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:6:1"
									},
									"scope": 126,
									"src": "473:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 117,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "621:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "643:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:57:1"
									},
									"src": "606:72:1"
								},
								{
									"anonymous": false,
									"id": 125,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "699:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "722:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "747:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:63:1"
									},
									"src": "684:78:1"
								}
							],
							"scope": 127,
							"src": "63:701:1"
						}
					],
					"src": "37:728:1"
				},
				"id": 1
			},
			"Distributor/IOlympusAuthority.sol": {
				"ast": {
					"absolutePath": "Distributor/IOlympusAuthority.sol",
					"exportedSymbols": {
						"IExodusAuthority": [
							205
						]
					},
					"id": 206,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 205,
							"linearizedBaseContracts": [
								205
							],
							"name": "IExodusAuthority",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 136,
									"name": "GovernorPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "157:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "157:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "179:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"indexed": false,
												"mutability": "mutable",
												"name": "_effectiveImmediately",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "199:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "199:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "156:70:2"
									},
									"src": "136:91:2"
								},
								{
									"anonymous": false,
									"id": 144,
									"name": "GuardianPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "253:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "253:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "275:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "275:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"indexed": false,
												"mutability": "mutable",
												"name": "_effectiveImmediately",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "295:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "295:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "252:70:2"
									},
									"src": "232:91:2"
								},
								{
									"anonymous": false,
									"id": 152,
									"name": "PolicyPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "347:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "369:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"indexed": false,
												"mutability": "mutable",
												"name": "_effectiveImmediately",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "389:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "389:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:70:2"
									},
									"src": "328:89:2"
								},
								{
									"anonymous": false,
									"id": 160,
									"name": "VaultPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "440:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "462:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"indexed": false,
												"mutability": "mutable",
												"name": "_effectiveImmediately",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "482:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:70:2"
									},
									"src": "422:88:2"
								},
								{
									"anonymous": false,
									"id": 166,
									"name": "GovernorPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "537:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "559:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "536:42:2"
									},
									"src": "516:63:2"
								},
								{
									"anonymous": false,
									"id": 172,
									"name": "GuardianPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "605:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "627:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:42:2"
									},
									"src": "584:63:2"
								},
								{
									"anonymous": false,
									"id": 178,
									"name": "PolicyPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "671:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "693:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:42:2"
									},
									"src": "652:61:2"
								},
								{
									"anonymous": false,
									"id": 184,
									"name": "VaultPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "736:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "758:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:42:2"
									},
									"src": "718:60:2"
								},
								{
									"functionSelector": "0c340a24",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "865:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:9:2"
									},
									"scope": 205,
									"src": "822:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "452a9320",
									"id": 194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "guardian",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "897:2:2"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "923:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:9:2"
									},
									"scope": 205,
									"src": "880:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0505c8c9",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "policy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "953:2:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "979:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:9:2"
									},
									"scope": 205,
									"src": "938:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbfa77cf",
									"id": 204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vault",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:2:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1034:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:9:2"
									},
									"scope": 205,
									"src": "994:49:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 206,
							"src": "63:982:2"
						}
					],
					"src": "37:1009:2"
				},
				"id": 2
			},
			"Distributor/ITreasury.sol": {
				"ast": {
					"absolutePath": "Distributor/ITreasury.sol",
					"exportedSymbols": {
						"ITreasury": [
							273
						]
					},
					"id": 274,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 207,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 273,
							"linearizedBaseContracts": [
								273
							],
							"name": "ITreasury",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "bc157ac1",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "115:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "140:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "_profit",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "164:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "105:80:3"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "204:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:3"
									},
									"scope": 273,
									"src": "89:124:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "00f714ce",
									"id": 225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "237:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "254:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:33:3"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:0:3"
									},
									"scope": 273,
									"src": "219:60:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f1821783",
									"id": 234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "305:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "321:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "304:33:3"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "value_",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "361:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:16:3"
									},
									"scope": 273,
									"src": "285:92:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "397:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "417:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:37:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:0:3"
									},
									"scope": 273,
									"src": "383:60:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0b0eee30",
									"id": 248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "manage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "465:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "481:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:33:3"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "506:0:3"
									},
									"scope": 273,
									"src": "449:58:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "12422d23",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "incurDebt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "532:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "token_",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "549:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "531:33:3"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "573:0:3"
									},
									"scope": 273,
									"src": "513:61:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d796ffb8",
									"id": 262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repayDebtWithReserve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "610:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "610:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "token_",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "627:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:33:3"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "651:0:3"
									},
									"scope": 273,
									"src": "580:72:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0c3513a8",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "excessReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:2:3"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "707:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:9:3"
									},
									"scope": 273,
									"src": "658:58:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "860f5048",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "baseSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "741:2:3"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "767:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:9:3"
									},
									"scope": 273,
									"src": "722:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 274,
							"src": "63:715:3"
						}
					],
					"src": "37:742:3"
				},
				"id": 3
			},
			"Distributor/OlympusAccessControlled.sol": {
				"ast": {
					"absolutePath": "Distributor/OlympusAccessControlled.sol",
					"exportedSymbols": {
						"ExodusAccessControlled": [
							372
						],
						"IExodusAuthority": [
							205
						]
					},
					"id": 373,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 275,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:4"
						},
						{
							"absolutePath": "Distributor/IOlympusAuthority.sol",
							"file": "./IOlympusAuthority.sol",
							"id": 276,
							"nodeType": "ImportDirective",
							"scope": 373,
							"sourceUnit": 206,
							"src": "68:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 372,
							"linearizedBaseContracts": [
								372
							],
							"name": "ExodusAccessControlled",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 280,
									"name": "AuthorityUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"indexed": true,
												"mutability": "mutable",
												"name": "authority",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "213:34:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IExodusAuthority_$205",
													"typeString": "contract IExodusAuthority"
												},
												"typeName": {
													"id": 277,
													"name": "IExodusAuthority",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 205,
													"src": "213:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IExodusAuthority_$205",
														"typeString": "contract IExodusAuthority"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:36:4"
									},
									"src": "190:59:4"
								},
								{
									"constant": false,
									"id": 283,
									"mutability": "mutable",
									"name": "UNAUTHORIZED",
									"nodeType": "VariableDeclaration",
									"scope": 372,
									"src": "255:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 281,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "255:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "554e415554484f52495a4544",
										"id": 282,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "277:14:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
											"typeString": "literal_string \"UNAUTHORIZED\""
										},
										"value": "UNAUTHORIZED"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "bf7e214f",
									"id": 285,
									"mutability": "mutable",
									"name": "authority",
									"nodeType": "VariableDeclaration",
									"scope": 372,
									"src": "359:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IExodusAuthority_$205",
										"typeString": "contract IExodusAuthority"
									},
									"typeName": {
										"id": 284,
										"name": "IExodusAuthority",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 205,
										"src": "359:16:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IExodusAuthority_$205",
											"typeString": "contract IExodusAuthority"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "485:82:4",
										"statements": [
											{
												"expression": {
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 290,
														"name": "authority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "495:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IExodusAuthority_$205",
															"typeString": "contract IExodusAuthority"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 291,
														"name": "_authority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "507:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IExodusAuthority_$205",
															"typeString": "contract IExodusAuthority"
														}
													},
													"src": "495:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IExodusAuthority_$205",
														"typeString": "contract IExodusAuthority"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "495:22:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 295,
															"name": "_authority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "549:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IExodusAuthority_$205",
																"typeString": "contract IExodusAuthority"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IExodusAuthority_$205",
																"typeString": "contract IExodusAuthority"
															}
														],
														"id": 294,
														"name": "AuthorityUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "532:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IExodusAuthority_$205_$returns$__$",
															"typeString": "function (contract IExodusAuthority)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "532:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "EmitStatement",
												"src": "527:33:4"
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "_authority",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "456:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IExodusAuthority_$205",
													"typeString": "contract IExodusAuthority"
												},
												"typeName": {
													"id": 286,
													"name": "IExodusAuthority",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 205,
													"src": "456:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IExodusAuthority_$205",
														"typeString": "contract IExodusAuthority"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:29:4"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:0:4"
									},
									"scope": 372,
									"src": "444:123:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "640:85:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 302,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "658:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "658:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 304,
																		"name": "authority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "672:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IExodusAuthority_$205",
																			"typeString": "contract IExodusAuthority"
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "governor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 189,
																	"src": "672:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "672:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "658:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 308,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "694:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "650:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "650:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "650:57:4"
											},
											{
												"id": 311,
												"nodeType": "PlaceholderStatement",
												"src": "717:1:4"
											}
										]
									},
									"id": 313,
									"name": "onlyGovernor",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "637:2:4"
									},
									"src": "616:109:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "755:85:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 316,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "773:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "773:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 318,
																		"name": "authority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "787:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IExodusAuthority_$205",
																			"typeString": "contract IExodusAuthority"
																		}
																	},
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "guardian",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 194,
																	"src": "787:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "787:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "773:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 322,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "809:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "765:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "765:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "765:57:4"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "832:1:4"
											}
										]
									},
									"id": 327,
									"name": "onlyGuardian",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "752:2:4"
									},
									"src": "731:109:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "868:83:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 330,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "886:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "886:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 332,
																		"name": "authority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "900:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IExodusAuthority_$205",
																			"typeString": "contract IExodusAuthority"
																		}
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "policy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "900:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "900:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "886:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 336,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "920:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "878:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "878:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "878:55:4"
											},
											{
												"id": 339,
												"nodeType": "PlaceholderStatement",
												"src": "943:1:4"
											}
										]
									},
									"id": 341,
									"name": "onlyPolicy",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:4"
									},
									"src": "846:105:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "978:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 344,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "996:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "996:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 346,
																		"name": "authority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "1010:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IExodusAuthority_$205",
																			"typeString": "contract IExodusAuthority"
																		}
																	},
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "vault",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "1010:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1010:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "996:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 350,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1029:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "988:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "988:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "988:54:4"
											},
											{
												"id": 353,
												"nodeType": "PlaceholderStatement",
												"src": "1052:1:4"
											}
										]
									},
									"id": 355,
									"name": "onlyVault",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:2:4"
									},
									"src": "957:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "1184:88:4",
										"statements": [
											{
												"expression": {
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 362,
														"name": "authority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "1194:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IExodusAuthority_$205",
															"typeString": "contract IExodusAuthority"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 363,
														"name": "_newAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "1206:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IExodusAuthority_$205",
															"typeString": "contract IExodusAuthority"
														}
													},
													"src": "1194:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IExodusAuthority_$205",
														"typeString": "contract IExodusAuthority"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "1194:25:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 367,
															"name": "_newAuthority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "1251:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IExodusAuthority_$205",
																"typeString": "contract IExodusAuthority"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IExodusAuthority_$205",
																"typeString": "contract IExodusAuthority"
															}
														],
														"id": 366,
														"name": "AuthorityUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "1234:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IExodusAuthority_$205_$returns$__$",
															"typeString": "function (contract IExodusAuthority)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1234:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "EmitStatement",
												"src": "1229:36:4"
											}
										]
									},
									"functionSelector": "7a9e5e4b",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 360,
											"modifierName": {
												"id": 359,
												"name": "onlyGovernor",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 313,
												"src": "1171:12:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1171:12:4"
										}
									],
									"name": "setAuthority",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "_newAuthority",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1130:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IExodusAuthority_$205",
													"typeString": "contract IExodusAuthority"
												},
												"typeName": {
													"id": 356,
													"name": "IExodusAuthority",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 205,
													"src": "1130:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IExodusAuthority_$205",
														"typeString": "contract IExodusAuthority"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:32:4"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1184:0:4"
									},
									"scope": 372,
									"src": "1108:164:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 373,
							"src": "103:1171:4"
						}
					],
					"src": "42:1233:4"
				},
				"id": 4
			},
			"Distributor/SafeERC20.sol": {
				"ast": {
					"absolutePath": "Distributor/SafeERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							126
						],
						"SafeERC20": [
							550
						]
					},
					"id": 551,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 374,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:5"
						},
						{
							"absolutePath": "Distributor/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 376,
							"nodeType": "ImportDirective",
							"scope": 551,
							"sourceUnit": 127,
							"src": "68:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 375,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "76:6:5",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 377,
								"nodeType": "StructuredDocumentation",
								"src": "106:248:5",
								"text": "@notice Safe IERC20 and ETH transfer library that safely handles missing return values.\n @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol)\n Taken from Solmate"
							},
							"fullyImplemented": true,
							"id": 550,
							"linearizedBaseContracts": [
								550
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "507:267:5",
										"statements": [
											{
												"assignments": [
													389,
													391
												],
												"declarations": [
													{
														"constant": false,
														"id": 389,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 427,
														"src": "518:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 388,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "518:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 391,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 427,
														"src": "532:17:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 390,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "532:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 407,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 399,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 126,
																			"src": "609:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$126_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 109,
																		"src": "609:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "609:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 402,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "639:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 403,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "645:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 404,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "649:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 397,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "586:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "586:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "586:70:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 394,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "561:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$126",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$126",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "553:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 392,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "553:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "553:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "553:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "553:113:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "517:149:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 409,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "685:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 410,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 391,
																					"src": "697:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "697:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "712:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "697:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 416,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 391,
																					"src": "728:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 418,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "735:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 417,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "735:4:5",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 419,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "734:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 414,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -1,
																					"src": "717:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "717:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "717:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "697:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 422,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "696:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "685:57:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5452414e534645525f46524f4d5f4641494c4544",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "744:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77631768048ee92f9dcf4b9b9d762877d6b9723214862c733f0596708fc219b7",
																"typeString": "literal_string \"TRANSFER_FROM_FAILED\""
															},
															"value": "TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77631768048ee92f9dcf4b9b9d762877d6b9723214862c733f0596708fc219b7",
																"typeString": "literal_string \"TRANSFER_FROM_FAILED\""
															}
														],
														"id": 408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "677:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "677:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "677:90:5"
											}
										]
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "413:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$126",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 378,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 126,
													"src": "413:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$126",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "435:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "457:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "477:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:94:5"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "507:0:5"
									},
									"scope": 550,
									"src": "378:396:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "883:252:5",
										"statements": [
											{
												"assignments": [
													438,
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 438,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "894:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 437,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "894:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "908:17:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 439,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "908:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 455,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 448,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 126,
																			"src": "985:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$126_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 80,
																		"src": "985:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "985:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 451,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "1011:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 452,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "1015:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 446,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "962:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "962:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "962:60:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 443,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "937:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$126",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$126",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "929:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 441,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "929:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "929:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "929:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "929:103:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "893:139:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 457,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "1051:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 458,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 440,
																					"src": "1063:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1063:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1078:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1063:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 464,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 440,
																					"src": "1094:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 466,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1101:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 465,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1101:4:5",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 467,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1100:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 462,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -1,
																					"src": "1083:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1083:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1083:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1063:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 470,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1062:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1051:57:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5452414e534645525f4641494c4544",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1110:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72",
																"typeString": "literal_string \"TRANSFER_FAILED\""
															},
															"value": "TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72",
																"typeString": "literal_string \"TRANSFER_FAILED\""
															}
														],
														"id": 456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1043:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1043:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "1043:85:5"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "811:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$126",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 429,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 126,
													"src": "811:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$126",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "833:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "853:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:72:5"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "883:0:5"
									},
									"scope": 550,
									"src": "780:355:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "1243:250:5",
										"statements": [
											{
												"assignments": [
													486,
													488
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "1254:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 485,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1254:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 488,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "1268:17:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 487,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1268:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 496,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 126,
																			"src": "1345:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$126_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 98,
																		"src": "1345:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1345:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 499,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "1370:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 500,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "1374:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 494,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1322:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1322:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1322:59:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "1297:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$126",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$126",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1289:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1289:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1289:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1289:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:102:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1253:138:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 505,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "1410:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 506,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 488,
																					"src": "1422:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1422:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1437:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1422:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 512,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 488,
																					"src": "1453:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 514,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1460:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 513,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1460:4:5",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 515,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1459:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 510,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -1,
																					"src": "1442:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 511,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1442:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1442:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1422:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 518,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1421:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1410:57:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "415050524f56455f4641494c4544",
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1469:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd400c5237ae346977ee020ef8d0d26a880c07edf7eba69a8848f0d31e9a88f2",
																"typeString": "literal_string \"APPROVE_FAILED\""
															},
															"value": "APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd400c5237ae346977ee020ef8d0d26a880c07edf7eba69a8848f0d31e9a88f2",
																"typeString": "literal_string \"APPROVE_FAILED\""
															}
														],
														"id": 504,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1402:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1402:84:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "1402:84:5"
											}
										]
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1171:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$126",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 477,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 126,
													"src": "1171:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$126",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1193:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1213:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:72:5"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1243:0:5"
									},
									"scope": 550,
									"src": "1141:352:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "1561:122:5",
										"statements": [
											{
												"assignments": [
													532,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "1572:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 531,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1572:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 542,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1623:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1613:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 537,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1617:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1613:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 533,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "1590:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1590:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 535,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "1605:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1590:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1590:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1571:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "1645:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4554485f5452414e534645525f4641494c4544",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1654:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29",
																"typeString": "literal_string \"ETH_TRANSFER_FAILED\""
															},
															"value": "ETH_TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29",
																"typeString": "literal_string \"ETH_TRANSFER_FAILED\""
															}
														],
														"id": 543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1637:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1637:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "1637:39:5"
											}
										]
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1524:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1536:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1523:28:5"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1561:0:5"
									},
									"scope": 550,
									"src": "1499:184:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 551,
							"src": "354:1331:5"
						}
					],
					"src": "42:1644:5"
				},
				"id": 5
			},
			"Distributor/SafeMath.sol": {
				"ast": {
					"absolutePath": "Distributor/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							769
						]
					},
					"id": 770,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 552,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 769,
							"linearizedBaseContracts": [
								769
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "222:109:6",
										"statements": [
											{
												"assignments": [
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "232:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 561,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "232:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 566,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 563,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "244:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 564,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "248:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "244:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "232:17:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 568,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "267:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 569,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "272:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "267:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "275:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "259:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "259:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "259:46:6"
											},
											{
												"expression": {
													"id": 574,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 562,
													"src": "323:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 560,
												"id": 575,
												"nodeType": "Return",
												"src": "316:8:6"
											}
										]
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "168:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "179:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:22:6"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "213:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:9:6"
									},
									"scope": 769,
									"src": "155:176:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "404:67:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "425:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 588,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "428:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "431:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 586,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															593,
															620
														],
														"referencedDeclaration": 620,
														"src": "421:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "421:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 585,
												"id": 591,
												"nodeType": "Return",
												"src": "414:50:6"
											}
										]
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "350:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "361:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:22:6"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "395:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:9:6"
									},
									"scope": 769,
									"src": "337:134:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "602:92:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 605,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "620:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 606,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "625:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "620:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 608,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "628:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 604,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "612:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "612:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "612:29:6"
											},
											{
												"assignments": [
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 619,
														"src": "651:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 611,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "651:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 616,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 613,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "663:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 614,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "667:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "663:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "651:17:6"
											},
											{
												"expression": {
													"id": 617,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 612,
													"src": "686:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 603,
												"id": 618,
												"nodeType": "Return",
												"src": "679:8:6"
											}
										]
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "499:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "518:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "537:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:80:6"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "593:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:9:6"
									},
									"scope": 769,
									"src": "477:217:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "767:174:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 629,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "781:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "786:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "781:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "777:45:6",
												"trueBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "789:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "810:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 628,
															"id": 633,
															"nodeType": "Return",
															"src": "803:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													637
												],
												"declarations": [
													{
														"constant": false,
														"id": 637,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "832:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 636,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "832:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 641,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 638,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "844:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 639,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "848:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "844:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "832:17:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 643,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "867:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 644,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "871:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "867:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 646,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "876:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "867:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "879:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "859:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "859:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "859:56:6"
											},
											{
												"expression": {
													"id": 651,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 637,
													"src": "933:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 628,
												"id": 652,
												"nodeType": "Return",
												"src": "926:8:6"
											}
										]
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "713:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "724:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:22:6"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "758:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:9:6"
									},
									"scope": 769,
									"src": "700:241:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "1014:63:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "1035:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 665,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "1038:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1041:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 663,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															670,
															710
														],
														"referencedDeclaration": 710,
														"src": "1031:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 662,
												"id": 668,
												"nodeType": "Return",
												"src": "1024:46:6"
											}
										]
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "960:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "971:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "959:22:6"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1005:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1004:9:6"
									},
									"scope": 769,
									"src": "947:130:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "1208:176:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 682,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "1226:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1230:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1226:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 685,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "1233:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 681,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1218:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "1218:28:6"
											},
											{
												"assignments": [
													689
												],
												"declarations": [
													{
														"constant": false,
														"id": 689,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "1256:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 688,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1256:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 690,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1268:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 691,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "1272:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1268:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1256:17:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 695,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "1290:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 696,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "1295:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 697,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 689,
																		"src": "1299:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1295:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 699,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 672,
																				"src": "1304:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 700,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "1308:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1304:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 702,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1303:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1295:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1290:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 694,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1283:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1283:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "1283:28:6"
											},
											{
												"expression": {
													"id": 707,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 689,
													"src": "1376:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 680,
												"id": 708,
												"nodeType": "Return",
												"src": "1369:8:6"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1105:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1124:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1143:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1143:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:80:6"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1199:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1198:9:6"
									},
									"scope": 769,
									"src": "1083:301:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "1497:260:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "1511:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1515:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1511:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 757,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "1713:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1718:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1713:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 765,
													"nodeType": "IfStatement",
													"src": "1709:42:6",
													"trueBody": {
														"id": 764,
														"nodeType": "Block",
														"src": "1721:30:6",
														"statements": [
															{
																"expression": {
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 760,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 715,
																		"src": "1735:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1739:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1735:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 763,
																"nodeType": "ExpressionStatement",
																"src": "1735:5:6"
															}
														]
													}
												},
												"id": 766,
												"nodeType": "IfStatement",
												"src": "1507:244:6",
												"trueBody": {
													"id": 756,
													"nodeType": "Block",
													"src": "1518:185:6",
													"statements": [
														{
															"expression": {
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 720,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "1532:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 721,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "1536:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1532:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 723,
															"nodeType": "ExpressionStatement",
															"src": "1532:5:6"
														},
														{
															"assignments": [
																725
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 725,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 756,
																	"src": "1551:9:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 724,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1551:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 733,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 728,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 712,
																				"src": "1571:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1574:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 727,
																			"name": "div",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				670,
																				710
																			],
																			"referencedDeclaration": 670,
																			"src": "1567:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1567:9:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1578:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 726,
																	"name": "add",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "1563:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1563:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1551:29:6"
														},
														{
															"body": {
																"id": 754,
																"nodeType": "Block",
																"src": "1608:85:6",
																"statements": [
																	{
																		"expression": {
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 737,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 715,
																				"src": "1626:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 738,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "1630:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1626:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 740,
																		"nodeType": "ExpressionStatement",
																		"src": "1626:5:6"
																	},
																	{
																		"expression": {
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 741,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "1649:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 745,
																										"name": "a",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 712,
																										"src": "1665:1:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 746,
																										"name": "b",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 725,
																										"src": "1668:1:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 744,
																									"name": "div",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										670,
																										710
																									],
																									"referencedDeclaration": 670,
																									"src": "1661:3:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 747,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1661:9:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 748,
																								"name": "b",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 725,
																								"src": "1672:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 743,
																							"name": "add",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 577,
																							"src": "1657:3:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 749,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1657:17:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "32",
																						"id": 750,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1676:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						}
																					],
																					"id": 742,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						670,
																						710
																					],
																					"referencedDeclaration": 670,
																					"src": "1653:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1653:25:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1649:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 753,
																		"nodeType": "ExpressionStatement",
																		"src": "1649:29:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 734,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "1601:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 735,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "1605:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1601:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 755,
															"nodeType": "WhileStatement",
															"src": "1594:99:6"
														}
													]
												}
											}
										]
									},
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "1452:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:11:6"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "1486:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:11:6"
									},
									"scope": 769,
									"src": "1437:320:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 770,
							"src": "132:1627:6"
						}
					],
					"src": "37:1723:6"
				},
				"id": 6
			},
			"Distributor/StakingDistributor.sol": {
				"ast": {
					"absolutePath": "Distributor/StakingDistributor.sol",
					"exportedSymbols": {
						"Distributor": [
							1359
						],
						"ExodusAccessControlled": [
							372
						],
						"IDistributor": [
							57
						],
						"IERC20": [
							126
						],
						"IExodusAuthority": [
							205
						],
						"ITreasury": [
							273
						],
						"SafeERC20": [
							550
						],
						"SafeMath": [
							769
						]
					},
					"id": 1360,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 771,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:7"
						},
						{
							"absolutePath": "Distributor/SafeERC20.sol",
							"file": "./SafeERC20.sol",
							"id": 772,
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 551,
							"src": "62:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Distributor/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 773,
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 770,
							"src": "88:24:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Distributor/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 774,
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 127,
							"src": "114:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Distributor/ITreasury.sol",
							"file": "./ITreasury.sol",
							"id": 775,
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 274,
							"src": "137:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Distributor/IDistributor.sol",
							"file": "./IDistributor.sol",
							"id": 776,
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 58,
							"src": "163:28:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Distributor/OlympusAccessControlled.sol",
							"file": "./OlympusAccessControlled.sol",
							"id": 777,
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 373,
							"src": "193:39:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 778,
										"name": "IDistributor",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 57,
										"src": "258:12:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDistributor_$57",
											"typeString": "contract IDistributor"
										}
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "258:12:7"
								},
								{
									"baseName": {
										"id": 780,
										"name": "ExodusAccessControlled",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 372,
										"src": "272:22:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ExodusAccessControlled_$372",
											"typeString": "contract ExodusAccessControlled"
										}
									},
									"id": 781,
									"nodeType": "InheritanceSpecifier",
									"src": "272:22:7"
								}
							],
							"contractDependencies": [
								57,
								372
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1359,
							"linearizedBaseContracts": [
								1359,
								372,
								57
							],
							"name": "Distributor",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 784,
									"libraryName": {
										"id": 782,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 769,
										"src": "353:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$769",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "347:27:7",
									"typeName": {
										"id": 783,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "366:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 787,
									"libraryName": {
										"id": 785,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 550,
										"src": "385:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$550",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "379:27:7",
									"typeName": {
										"id": 786,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 126,
										"src": "399:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$126",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 789,
									"mutability": "immutable",
									"name": "exo",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "447:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$126",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 788,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 126,
										"src": "447:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$126",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 791,
									"mutability": "immutable",
									"name": "treasury",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "481:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITreasury_$273",
										"typeString": "contract ITreasury"
									},
									"typeName": {
										"id": 790,
										"name": "ITreasury",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 273,
										"src": "481:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITreasury_$273",
											"typeString": "contract ITreasury"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 793,
									"mutability": "immutable",
									"name": "staking",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "523:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 792,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "523:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "bc3b2b12",
									"id": 797,
									"mutability": "mutable",
									"name": "adjustments",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "563:45:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Adjust_$818_storage_$",
										"typeString": "mapping(uint256 => struct Distributor.Adjust)"
									},
									"typeName": {
										"id": 796,
										"keyType": {
											"id": 794,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "571:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "563:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Adjust_$818_storage_$",
											"typeString": "mapping(uint256 => struct Distributor.Adjust)"
										},
										"valueType": {
											"id": 795,
											"name": "Adjust",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 818,
											"src": "582:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Adjust_$818_storage_ptr",
												"typeString": "struct Distributor.Adjust"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										9
									],
									"constant": false,
									"functionSelector": "943dfef1",
									"id": 800,
									"mutability": "mutable",
									"name": "bounty",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 799,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "629:8:7"
									},
									"scope": 1359,
									"src": "614:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 798,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "614:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 803,
									"mutability": "immutable",
									"name": "rateDenominator",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "651:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 801,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "651:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "315f3030305f303030",
										"id": 802,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "695:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1_000_000"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "Distributor.Info",
									"id": 808,
									"members": [
										{
											"constant": false,
											"id": 805,
											"mutability": "mutable",
											"name": "rate",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "766:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 804,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "766:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 807,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "826:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 806,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "826:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Info",
									"nodeType": "StructDefinition",
									"scope": 1359,
									"src": "744:106:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2e340599",
									"id": 811,
									"mutability": "mutable",
									"name": "info",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "855:18:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
										"typeString": "struct Distributor.Info[]"
									},
									"typeName": {
										"baseType": {
											"id": 809,
											"name": "Info",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 808,
											"src": "855:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Info_$808_storage_ptr",
												"typeString": "struct Distributor.Info"
											}
										},
										"id": 810,
										"nodeType": "ArrayTypeName",
										"src": "855:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage_ptr",
											"typeString": "struct Distributor.Info[]"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Distributor.Adjust",
									"id": 818,
									"members": [
										{
											"constant": false,
											"id": 813,
											"mutability": "mutable",
											"name": "add",
											"nodeType": "VariableDeclaration",
											"scope": 818,
											"src": "904:8:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 812,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "904:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 815,
											"mutability": "mutable",
											"name": "rate",
											"nodeType": "VariableDeclaration",
											"scope": 818,
											"src": "922:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 814,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "922:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 817,
											"mutability": "mutable",
											"name": "target",
											"nodeType": "VariableDeclaration",
											"scope": 818,
											"src": "944:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 816,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "944:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Adjust",
									"nodeType": "StructDefinition",
									"scope": 1359,
									"src": "880:85:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "1182:296:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 835,
																"name": "_treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "1200:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1221:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1213:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 836,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1213:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1213:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1200:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616464726573733a205472656173757279",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1225:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0a14ebe9d2aec3342cb9856dca78fdf82c30e7a18d65c5577933a36661e5282",
																"typeString": "literal_string \"Zero address: Treasury\""
															},
															"value": "Zero address: Treasury"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0a14ebe9d2aec3342cb9856dca78fdf82c30e7a18d65c5577933a36661e5282",
																"typeString": "literal_string \"Zero address: Treasury\""
															}
														],
														"id": 834,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1192:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1192:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "1192:58:7"
											},
											{
												"expression": {
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 844,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "1260:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITreasury_$273",
															"typeString": "contract ITreasury"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 846,
																"name": "_treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "1281:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 845,
															"name": "ITreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "1271:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITreasury_$273_$",
																"typeString": "type(contract ITreasury)"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1271:20:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITreasury_$273",
															"typeString": "contract ITreasury"
														}
													},
													"src": "1260:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITreasury_$273",
														"typeString": "contract ITreasury"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "1260:31:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 851,
																"name": "_exo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "1309:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1325:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1317:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 852,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1317:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1317:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1309:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616464726573733a2045584f",
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1329:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_92dbaf19d492a85c90ee7fa1d88d8411e3695427ded7e07802549e0a45ac2c71",
																"typeString": "literal_string \"Zero address: EXO\""
															},
															"value": "Zero address: EXO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_92dbaf19d492a85c90ee7fa1d88d8411e3695427ded7e07802549e0a45ac2c71",
																"typeString": "literal_string \"Zero address: EXO\""
															}
														],
														"id": 850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1301:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "1301:48:7"
											},
											{
												"expression": {
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 860,
														"name": "exo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "1359:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$126",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 862,
																"name": "_exo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "1372:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 861,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "1365:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$126_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1365:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$126",
															"typeString": "contract IERC20"
														}
													},
													"src": "1359:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$126",
														"typeString": "contract IERC20"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "1359:18:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 867,
																"name": "_staking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "1395:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1415:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1407:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 868,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1407:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1407:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1395:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616464726573733a205374616b696e67",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1419:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f2930be1f48408c249282c5578bd901ca4130d9bf081182795a6bfcd1d7326d",
																"typeString": "literal_string \"Zero address: Staking\""
															},
															"value": "Zero address: Staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f2930be1f48408c249282c5578bd901ca4130d9bf081182795a6bfcd1d7326d",
																"typeString": "literal_string \"Zero address: Staking\""
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1387:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1387:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "1387:56:7"
											},
											{
												"expression": {
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 876,
														"name": "staking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "1453:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 877,
														"name": "_staking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "1463:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1453:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "1453:18:7"
											}
										]
									},
									"id": 881,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 830,
															"name": "_authority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "1169:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 829,
														"name": "IExodusAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1152:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IExodusAuthority_$205_$",
															"typeString": "type(contract IExodusAuthority)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1152:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IExodusAuthority_$205",
														"typeString": "contract IExodusAuthority"
													}
												}
											],
											"id": 832,
											"modifierName": {
												"id": 828,
												"name": "ExodusAccessControlled",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 372,
												"src": "1129:22:7",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ExodusAccessControlled_$372_$",
													"typeString": "type(contract ExodusAccessControlled)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1129:52:7"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "_treasury",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "1029:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "_exo",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "1056:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "_staking",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "1078:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "_authority",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "1104:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:109:7"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1182:0:7"
									},
									"scope": 1359,
									"src": "1008:470:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										4
									],
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "1636:376:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 887,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "1654:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1654:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 889,
																"name": "staking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "1668:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1654:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207374616b696e67",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_474808b5b17da8a52ea8bc18d8367910eaee3fdb02468416e130cec35c836058",
																"typeString": "literal_string \"Only staking\""
															},
															"value": "Only staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_474808b5b17da8a52ea8bc18d8367910eaee3fdb02468416e130cec35c836058",
																"typeString": "literal_string \"Only staking\""
															}
														],
														"id": 886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1646:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1646:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "1646:46:7"
											},
											{
												"body": {
													"id": 932,
													"nodeType": "Block",
													"src": "1792:214:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 905,
																			"name": "info",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 811,
																			"src": "1810:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																				"typeString": "struct Distributor.Info storage ref[] storage ref"
																			}
																		},
																		"id": 907,
																		"indexExpression": {
																			"id": 906,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 895,
																			"src": "1815:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1810:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$808_storage",
																			"typeString": "struct Distributor.Info storage ref"
																		}
																	},
																	"id": 908,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 805,
																	"src": "1810:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1825:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1810:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 931,
															"nodeType": "IfStatement",
															"src": "1806:190:7",
															"trueBody": {
																"id": 930,
																"nodeType": "Block",
																"src": "1828:168:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 914,
																							"name": "info",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 811,
																							"src": "1860:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																								"typeString": "struct Distributor.Info storage ref[] storage ref"
																							}
																						},
																						"id": 916,
																						"indexExpression": {
																							"id": 915,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 895,
																							"src": "1865:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1860:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$808_storage",
																							"typeString": "struct Distributor.Info storage ref"
																						}
																					},
																					"id": 917,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "recipient",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 807,
																					"src": "1860:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 919,
																									"name": "info",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 811,
																									"src": "1892:4:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																										"typeString": "struct Distributor.Info storage ref[] storage ref"
																									}
																								},
																								"id": 921,
																								"indexExpression": {
																									"id": 920,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 895,
																									"src": "1897:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1892:7:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Info_$808_storage",
																									"typeString": "struct Distributor.Info storage ref"
																								}
																							},
																							"id": 922,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "rate",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 805,
																							"src": "1892:12:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 918,
																						"name": "nextRewardAt",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1104,
																						"src": "1879:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 923,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1879:26:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 911,
																					"name": "treasury",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 791,
																					"src": "1846:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ITreasury_$273",
																						"typeString": "contract ITreasury"
																					}
																				},
																				"id": 913,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 241,
																				"src": "1846:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) external"
																				}
																			},
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 925,
																		"nodeType": "ExpressionStatement",
																		"src": "1846:60:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 927,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 895,
																					"src": "1955:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 926,
																				"name": "adjust",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1084,
																				"src": "1948:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1948:9:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 929,
																		"nodeType": "ExpressionStatement",
																		"src": "1948:9:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 898,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "1770:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 899,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "1774:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																"typeString": "struct Distributor.Info storage ref[] storage ref"
															}
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1774:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1770:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 933,
												"initializationExpression": {
													"assignments": [
														895
													],
													"declarations": [
														{
															"constant": false,
															"id": 895,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 933,
															"src": "1755:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 894,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1755:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 897,
													"initialValue": {
														"hexValue": "30",
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1767:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1755:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1787:3:7",
														"subExpression": {
															"id": 902,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "1787:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 904,
													"nodeType": "ExpressionStatement",
													"src": "1787:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1750:256:7"
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "1526:65:7",
										"text": "@notice send epoch reward to staking contract"
									},
									"functionSelector": "e4fc6b6d",
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 884,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1627:8:7"
									},
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1615:2:7"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1636:0:7"
									},
									"scope": 1359,
									"src": "1596:416:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										14
									],
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "2080:255:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 942,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2098:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2098:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 944,
																"name": "staking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "2112:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2098:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207374616b696e67",
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2121:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_474808b5b17da8a52ea8bc18d8367910eaee3fdb02468416e130cec35c836058",
																"typeString": "literal_string \"Only staking\""
															},
															"value": "Only staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_474808b5b17da8a52ea8bc18d8367910eaee3fdb02468416e130cec35c836058",
																"typeString": "literal_string \"Only staking\""
															}
														],
														"id": 941,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2090:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2090:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "2090:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 949,
														"name": "bounty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "2229:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2238:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2229:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 963,
												"nodeType": "IfStatement",
												"src": "2225:80:7",
												"trueBody": {
													"id": 962,
													"nodeType": "Block",
													"src": "2241:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 957,
																				"name": "staking",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "2277:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2269:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 955,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2269:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2269:16:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 959,
																		"name": "bounty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "2287:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 952,
																		"name": "treasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "2255:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ITreasury_$273",
																			"typeString": "contract ITreasury"
																		}
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 241,
																	"src": "2255:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2255:39:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 961,
															"nodeType": "ExpressionStatement",
															"src": "2255:39:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 964,
													"name": "bounty",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 800,
													"src": "2322:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 940,
												"id": 965,
												"nodeType": "Return",
												"src": "2315:13:7"
											}
										]
									},
									"functionSelector": "e7187e8a",
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "retrieveBounty",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 937,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2053:8:7"
									},
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2041:2:7"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "2071:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2070:9:7"
									},
									"scope": 1359,
									"src": "2018:317:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "2494:1172:7",
										"statements": [
											{
												"assignments": [
													974
												],
												"declarations": [
													{
														"constant": false,
														"id": 974,
														"mutability": "mutable",
														"name": "adjustment",
														"nodeType": "VariableDeclaration",
														"scope": 1083,
														"src": "2504:24:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Adjust_$818_memory_ptr",
															"typeString": "struct Distributor.Adjust"
														},
														"typeName": {
															"id": 973,
															"name": "Adjust",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 818,
															"src": "2504:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Adjust_$818_storage_ptr",
																"typeString": "struct Distributor.Adjust"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"baseExpression": {
														"id": 975,
														"name": "adjustments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "2531:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Adjust_$818_storage_$",
															"typeString": "mapping(uint256 => struct Distributor.Adjust storage ref)"
														}
													},
													"id": 977,
													"indexExpression": {
														"id": 976,
														"name": "_index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "2543:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2531:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Adjust_$818_storage",
														"typeString": "struct Distributor.Adjust storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2504:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 979,
															"name": "adjustment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "2564:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Adjust_$818_memory_ptr",
																"typeString": "struct Distributor.Adjust memory"
															}
														},
														"id": 980,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 815,
														"src": "2564:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2583:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2564:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1082,
												"nodeType": "IfStatement",
												"src": "2560:1100:7",
												"trueBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "2586:1074:7",
													"statements": [
														{
															"condition": {
																"expression": {
																	"id": 983,
																	"name": "adjustment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "2604:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Adjust_$818_memory_ptr",
																		"typeString": "struct Distributor.Adjust memory"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 813,
																"src": "2604:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1079,
																"nodeType": "Block",
																"src": "3040:610:7",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1024,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 811,
																						"src": "3105:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																							"typeString": "struct Distributor.Info storage ref[] storage ref"
																						}
																					},
																					"id": 1026,
																					"indexExpression": {
																						"id": 1025,
																						"name": "_index",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 970,
																						"src": "3110:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3105:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$808_storage",
																						"typeString": "struct Distributor.Info storage ref"
																					}
																				},
																				"id": 1027,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "rate",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 805,
																				"src": "3105:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 1028,
																					"name": "adjustment",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 974,
																					"src": "3125:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Adjust_$818_memory_ptr",
																						"typeString": "struct Distributor.Adjust memory"
																					}
																				},
																				"id": 1029,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "rate",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 815,
																				"src": "3125:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3105:35:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 1053,
																			"nodeType": "Block",
																			"src": "3307:62:7",
																			"statements": [
																				{
																					"expression": {
																						"id": 1051,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 1046,
																									"name": "info",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 811,
																									"src": "3329:4:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																										"typeString": "struct Distributor.Info storage ref[] storage ref"
																									}
																								},
																								"id": 1048,
																								"indexExpression": {
																									"id": 1047,
																									"name": "_index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 970,
																									"src": "3334:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3329:12:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Info_$808_storage",
																									"typeString": "struct Distributor.Info storage ref"
																								}
																							},
																							"id": 1049,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "rate",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 805,
																							"src": "3329:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "30",
																							"id": 1050,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3349:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "3329:21:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1052,
																					"nodeType": "ExpressionStatement",
																					"src": "3329:21:7"
																				}
																			]
																		},
																		"id": 1054,
																		"nodeType": "IfStatement",
																		"src": "3101:268:7",
																		"trueBody": {
																			"id": 1045,
																			"nodeType": "Block",
																			"src": "3142:159:7",
																			"statements": [
																				{
																					"expression": {
																						"id": 1043,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 1031,
																									"name": "info",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 811,
																									"src": "3210:4:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																										"typeString": "struct Distributor.Info storage ref[] storage ref"
																									}
																								},
																								"id": 1033,
																								"indexExpression": {
																									"id": 1032,
																									"name": "_index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 970,
																									"src": "3215:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3210:12:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Info_$808_storage",
																									"typeString": "struct Distributor.Info storage ref"
																								}
																							},
																							"id": 1034,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "rate",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 805,
																							"src": "3210:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 1040,
																										"name": "adjustment",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 974,
																										"src": "3252:10:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Adjust_$818_memory_ptr",
																											"typeString": "struct Distributor.Adjust memory"
																										}
																									},
																									"id": 1041,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "rate",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 815,
																									"src": "3252:15:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"expression": {
																										"baseExpression": {
																											"id": 1035,
																											"name": "info",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 811,
																											"src": "3230:4:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																												"typeString": "struct Distributor.Info storage ref[] storage ref"
																											}
																										},
																										"id": 1037,
																										"indexExpression": {
																											"id": 1036,
																											"name": "_index",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 970,
																											"src": "3235:6:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "3230:12:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Info_$808_storage",
																											"typeString": "struct Distributor.Info storage ref"
																										}
																									},
																									"id": 1038,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "rate",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 805,
																									"src": "3230:17:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1039,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sub",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 593,
																								"src": "3230:21:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1042,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3230:38:7",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3210:58:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1044,
																					"nodeType": "ExpressionStatement",
																					"src": "3210:58:7"
																				}
																			]
																		}
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1055,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 811,
																						"src": "3391:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																							"typeString": "struct Distributor.Info storage ref[] storage ref"
																						}
																					},
																					"id": 1057,
																					"indexExpression": {
																						"id": 1056,
																						"name": "_index",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 970,
																						"src": "3396:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3391:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$808_storage",
																						"typeString": "struct Distributor.Info storage ref"
																					}
																				},
																				"id": 1058,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "rate",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 805,
																				"src": "3391:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"expression": {
																					"id": 1059,
																					"name": "adjustment",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 974,
																					"src": "3412:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Adjust_$818_memory_ptr",
																						"typeString": "struct Distributor.Adjust memory"
																					}
																				},
																				"id": 1060,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "target",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 817,
																				"src": "3412:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3391:38:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1078,
																		"nodeType": "IfStatement",
																		"src": "3387:249:7",
																		"trueBody": {
																			"id": 1077,
																			"nodeType": "Block",
																			"src": "3431:205:7",
																			"statements": [
																				{
																					"expression": {
																						"id": 1067,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 1062,
																									"name": "adjustments",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 797,
																									"src": "3490:11:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Adjust_$818_storage_$",
																										"typeString": "mapping(uint256 => struct Distributor.Adjust storage ref)"
																									}
																								},
																								"id": 1064,
																								"indexExpression": {
																									"id": 1063,
																									"name": "_index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 970,
																									"src": "3502:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3490:19:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Adjust_$818_storage",
																									"typeString": "struct Distributor.Adjust storage ref"
																								}
																							},
																							"id": 1065,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "rate",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 815,
																							"src": "3490:24:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "30",
																							"id": 1066,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3517:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "3490:28:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1068,
																					"nodeType": "ExpressionStatement",
																					"src": "3490:28:7"
																				},
																				{
																					"expression": {
																						"id": 1075,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 1069,
																									"name": "info",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 811,
																									"src": "3563:4:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																										"typeString": "struct Distributor.Info storage ref[] storage ref"
																									}
																								},
																								"id": 1071,
																								"indexExpression": {
																									"id": 1070,
																									"name": "_index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 970,
																									"src": "3568:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3563:12:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Info_$808_storage",
																									"typeString": "struct Distributor.Info storage ref"
																								}
																							},
																							"id": 1072,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "rate",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 805,
																							"src": "3563:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"expression": {
																								"id": 1073,
																								"name": "adjustment",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 974,
																								"src": "3583:10:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Adjust_$818_memory_ptr",
																									"typeString": "struct Distributor.Adjust memory"
																								}
																							},
																							"id": 1074,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "target",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 817,
																							"src": "3583:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3563:37:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1076,
																					"nodeType": "ExpressionStatement",
																					"src": "3563:37:7"
																				}
																			]
																		}
																	}
																]
															},
															"id": 1080,
															"nodeType": "IfStatement",
															"src": "2600:1050:7",
															"trueBody": {
																"id": 1023,
																"nodeType": "Block",
																"src": "2620:414:7",
																"statements": [
																	{
																		"expression": {
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 985,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 811,
																						"src": "2681:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																							"typeString": "struct Distributor.Info storage ref[] storage ref"
																						}
																					},
																					"id": 987,
																					"indexExpression": {
																						"id": 986,
																						"name": "_index",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 970,
																						"src": "2686:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2681:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$808_storage",
																						"typeString": "struct Distributor.Info storage ref"
																					}
																				},
																				"id": 988,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "rate",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 805,
																				"src": "2681:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 994,
																							"name": "adjustment",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 974,
																							"src": "2723:10:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Adjust_$818_memory_ptr",
																								"typeString": "struct Distributor.Adjust memory"
																							}
																						},
																						"id": 995,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "rate",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 815,
																						"src": "2723:15:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"id": 989,
																								"name": "info",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 811,
																								"src": "2701:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																									"typeString": "struct Distributor.Info storage ref[] storage ref"
																								}
																							},
																							"id": 991,
																							"indexExpression": {
																								"id": 990,
																								"name": "_index",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 970,
																								"src": "2706:6:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2701:12:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Info_$808_storage",
																								"typeString": "struct Distributor.Info storage ref"
																							}
																						},
																						"id": 992,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "rate",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 805,
																						"src": "2701:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 577,
																					"src": "2701:21:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 996,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2701:38:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2681:58:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 998,
																		"nodeType": "ExpressionStatement",
																		"src": "2681:58:7"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 999,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 811,
																						"src": "2775:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																							"typeString": "struct Distributor.Info storage ref[] storage ref"
																						}
																					},
																					"id": 1001,
																					"indexExpression": {
																						"id": 1000,
																						"name": "_index",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 970,
																						"src": "2780:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2775:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$808_storage",
																						"typeString": "struct Distributor.Info storage ref"
																					}
																				},
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "rate",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 805,
																				"src": "2775:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"expression": {
																					"id": 1003,
																					"name": "adjustment",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 974,
																					"src": "2796:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Adjust_$818_memory_ptr",
																						"typeString": "struct Distributor.Adjust memory"
																					}
																				},
																				"id": 1004,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "target",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 817,
																				"src": "2796:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2775:38:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1022,
																		"nodeType": "IfStatement",
																		"src": "2771:249:7",
																		"trueBody": {
																			"id": 1021,
																			"nodeType": "Block",
																			"src": "2815:205:7",
																			"statements": [
																				{
																					"expression": {
																						"id": 1011,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 1006,
																									"name": "adjustments",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 797,
																									"src": "2874:11:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Adjust_$818_storage_$",
																										"typeString": "mapping(uint256 => struct Distributor.Adjust storage ref)"
																									}
																								},
																								"id": 1008,
																								"indexExpression": {
																									"id": 1007,
																									"name": "_index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 970,
																									"src": "2886:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2874:19:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Adjust_$818_storage",
																									"typeString": "struct Distributor.Adjust storage ref"
																								}
																							},
																							"id": 1009,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "rate",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 815,
																							"src": "2874:24:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "30",
																							"id": 1010,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2901:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "2874:28:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1012,
																					"nodeType": "ExpressionStatement",
																					"src": "2874:28:7"
																				},
																				{
																					"expression": {
																						"id": 1019,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 1013,
																									"name": "info",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 811,
																									"src": "2947:4:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																										"typeString": "struct Distributor.Info storage ref[] storage ref"
																									}
																								},
																								"id": 1015,
																								"indexExpression": {
																									"id": 1014,
																									"name": "_index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 970,
																									"src": "2952:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2947:12:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Info_$808_storage",
																									"typeString": "struct Distributor.Info storage ref"
																								}
																							},
																							"id": 1016,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "rate",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 805,
																							"src": "2947:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"expression": {
																								"id": 1017,
																								"name": "adjustment",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 974,
																								"src": "2967:10:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Adjust_$818_memory_ptr",
																									"typeString": "struct Distributor.Adjust memory"
																								}
																							},
																							"id": 1018,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "target",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 817,
																							"src": "2967:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2947:37:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1020,
																					"nodeType": "ExpressionStatement",
																					"src": "2947:37:7"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "2385:63:7",
										"text": "@notice increment reward rate for collector"
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "adjust",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "_index",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2469:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:16:7"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:7"
									},
									"scope": 1359,
									"src": "2453:1213:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										21
									],
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "3911:73:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1100,
															"name": "rateDenominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3961:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1097,
																	"name": "_rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "3950:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1093,
																			"name": "exo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 789,
																			"src": "3928:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$126",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "3928:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3928:17:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 654,
																"src": "3928:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3928:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 670,
														"src": "3928:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3928:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1102,
												"nodeType": "Return",
												"src": "3921:56:7"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "3712:118:7",
										"text": "@notice view function for next reward at given rate\n@param _rate uint\n@return uint"
									},
									"functionSelector": "c9fa8b2a",
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextRewardAt",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1089,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3884:8:7"
									},
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "_rate",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3857:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3857:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3856:15:7"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3902:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:9:7"
									},
									"scope": 1359,
									"src": "3835:149:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										28
									],
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "4211:246:7",
										"statements": [
											{
												"assignments": [
													1114
												],
												"declarations": [
													{
														"constant": false,
														"id": 1114,
														"mutability": "mutable",
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"scope": 1151,
														"src": "4221:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4221:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1115,
												"nodeType": "VariableDeclarationStatement",
												"src": "4221:14:7"
											},
											{
												"body": {
													"id": 1147,
													"nodeType": "Block",
													"src": "4287:141:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1127,
																			"name": "info",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 811,
																			"src": "4305:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																				"typeString": "struct Distributor.Info storage ref[] storage ref"
																			}
																		},
																		"id": 1129,
																		"indexExpression": {
																			"id": 1128,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "4310:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4305:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$808_storage",
																			"typeString": "struct Distributor.Info storage ref"
																		}
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "recipient",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 807,
																	"src": "4305:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1131,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "4326:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4305:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1146,
															"nodeType": "IfStatement",
															"src": "4301:117:7",
															"trueBody": {
																"id": 1145,
																"nodeType": "Block",
																"src": "4338:80:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1133,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1114,
																				"src": "4356:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"expression": {
																									"baseExpression": {
																										"id": 1137,
																										"name": "info",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 811,
																										"src": "4389:4:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																											"typeString": "struct Distributor.Info storage ref[] storage ref"
																										}
																									},
																									"id": 1139,
																									"indexExpression": {
																										"id": 1138,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1117,
																										"src": "4394:1:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "4389:7:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Info_$808_storage",
																										"typeString": "struct Distributor.Info storage ref"
																									}
																								},
																								"id": 1140,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "rate",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 805,
																								"src": "4389:12:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1136,
																							"name": "nextRewardAt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1104,
																							"src": "4376:12:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256) view returns (uint256)"
																							}
																						},
																						"id": 1141,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4376:26:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1134,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1114,
																						"src": "4365:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1135,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 577,
																					"src": "4365:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4365:38:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4356:47:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1144,
																		"nodeType": "ExpressionStatement",
																		"src": "4356:47:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1120,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "4265:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1121,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "4269:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																"typeString": "struct Distributor.Info storage ref[] storage ref"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4269:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4265:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1148,
												"initializationExpression": {
													"assignments": [
														1117
													],
													"declarations": [
														{
															"constant": false,
															"id": 1117,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1148,
															"src": "4250:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1116,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4250:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1119,
													"initialValue": {
														"hexValue": "30",
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4262:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4250:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4282:3:7",
														"subExpression": {
															"id": 1124,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "4282:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1126,
													"nodeType": "ExpressionStatement",
													"src": "4282:3:7"
												},
												"nodeType": "ForStatement",
												"src": "4245:183:7"
											},
											{
												"expression": {
													"id": 1149,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1114,
													"src": "4444:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1112,
												"id": 1150,
												"nodeType": "Return",
												"src": "4437:13:7"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "3990:134:7",
										"text": "@notice view function for next reward for specified address\n@param _recipient address\n@return uint"
									},
									"functionSelector": "36d33f44",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextRewardFor",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1109,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4184:8:7"
									},
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "4152:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4152:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4151:20:7"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "4202:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4201:9:7"
									},
									"scope": 1359,
									"src": "4129:328:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										33
									],
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "4667:78:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1162,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "4685:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "326539",
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4696:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2000000000_by_1",
																	"typeString": "int_const 2000000000"
																},
																"value": "2e9"
															},
															"src": "4685:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6f206d756368",
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4701:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07039fc613b7fd7cf0dec30565f38125f50ec44a991ce69296f7d11b6bc9f855",
																"typeString": "literal_string \"Too much\""
															},
															"value": "Too much"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07039fc613b7fd7cf0dec30565f38125f50ec44a991ce69296f7d11b6bc9f855",
																"typeString": "literal_string \"Too much\""
															}
														],
														"id": 1161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4677:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4677:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "4677:35:7"
											},
											{
												"expression": {
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1168,
														"name": "bounty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "4722:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1169,
														"name": "_bounty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "4731:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4722:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "4722:16:7"
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "4505:90:7",
										"text": " @notice set bounty to incentivize keepers\n @param _bounty uint256"
									},
									"functionSelector": "5d87d363",
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1159,
											"modifierName": {
												"id": 1158,
												"name": "onlyGovernor",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 313,
												"src": "4654:12:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4654:12:7"
										}
									],
									"name": "setBounty",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4645:8:7"
									},
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "_bounty",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "4619:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:17:7"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:7"
									},
									"scope": 1359,
									"src": "4600:145:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										40
									],
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "4976:229:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1185,
																"name": "_recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "4994:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5016:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5008:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1186,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5008:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5008:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4994:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616464726573733a20526563697069656e74",
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5020:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbcaa6047c40704d5658752d4b015669273d14266a7ea5ee00a225d86bc8b63f",
																"typeString": "literal_string \"Zero address: Recipient\""
															},
															"value": "Zero address: Recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbcaa6047c40704d5658752d4b015669273d14266a7ea5ee00a225d86bc8b63f",
																"typeString": "literal_string \"Zero address: Recipient\""
															}
														],
														"id": 1184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4986:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4986:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "4986:60:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1195,
																"name": "_rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "5064:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1196,
																"name": "rateDenominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "5079:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5064:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526174652063616e6e6f74206578636565642064656e6f6d696e61746f72",
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5096:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a79bd83f2f382a9d64dfeb20d79d321a8b39e9b0b112bf9bbd3538c19b197c66",
																"typeString": "literal_string \"Rate cannot exceed denominator\""
															},
															"value": "Rate cannot exceed denominator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a79bd83f2f382a9d64dfeb20d79d321a8b39e9b0b112bf9bbd3538c19b197c66",
																"typeString": "literal_string \"Rate cannot exceed denominator\""
															}
														],
														"id": 1194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5056:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5056:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "5056:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1205,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "5166:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1206,
																	"name": "_rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "5184:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1204,
																"name": "Info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "5149:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Info_$808_storage_ptr_$",
																	"typeString": "type(struct Distributor.Info storage pointer)"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"recipient",
																"rate"
															],
															"nodeType": "FunctionCall",
															"src": "5149:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$808_memory_ptr",
																"typeString": "struct Distributor.Info memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Info_$808_memory_ptr",
																"typeString": "struct Distributor.Info memory"
															}
														],
														"expression": {
															"id": 1201,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "5139:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																"typeString": "struct Distributor.Info storage ref[] storage ref"
															}
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5139:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Info_$808_storage_$returns$__$",
															"typeString": "function (struct Distributor.Info storage ref)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "5139:59:7"
											}
										]
									},
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "4751:126:7",
										"text": "@notice adds recipient for distributions\n@param _recipient address\n@param _rewardRate uint"
									},
									"functionSelector": "f7982243",
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1182,
											"modifierName": {
												"id": 1181,
												"name": "onlyGovernor",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 313,
												"src": "4963:12:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4963:12:7"
										}
									],
									"name": "addRecipient",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4954:8:7"
									},
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "4904:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4904:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "4924:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4924:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4903:41:7"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4976:0:7"
									},
									"scope": 1359,
									"src": "4882:323:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										45
									],
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "5365:329:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1219,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "5396:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5396:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1221,
																			"name": "authority",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "5410:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IExodusAuthority_$205",
																				"typeString": "contract IExodusAuthority"
																			}
																		},
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "governor",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 189,
																		"src": "5410:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5410:20:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5396:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1225,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "5434:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5434:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1227,
																			"name": "authority",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "5448:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IExodusAuthority_$205",
																				"typeString": "contract IExodusAuthority"
																			}
																		},
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "guardian",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 194,
																		"src": "5448:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5448:20:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5434:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5396:72:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420676f7665726e6f72206f7220677561726469616e",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5482:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69f7f70959a4e39a44e5c1e9758516dc060c05af9d2514644d1e8fb784f16900",
																"typeString": "literal_string \"Caller is not governor or guardian\""
															},
															"value": "Caller is not governor or guardian"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69f7f70959a4e39a44e5c1e9758516dc060c05af9d2514644d1e8fb784f16900",
																"typeString": "literal_string \"Caller is not governor or guardian\""
															}
														],
														"id": 1218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5375:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:153:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "5375:153:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1236,
																		"name": "info",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "5546:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																			"typeString": "struct Distributor.Info storage ref[] storage ref"
																		}
																	},
																	"id": 1238,
																	"indexExpression": {
																		"id": 1237,
																		"name": "_index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "5551:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5546:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Info_$808_storage",
																		"typeString": "struct Distributor.Info storage ref"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "recipient",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 807,
																"src": "5546:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5580:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5572:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1240,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5572:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5572:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5546:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526563697069656e7420646f6573206e6f74206578697374",
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5584:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_febf3fee8b75b324d9b1d08bd14137df3588b8d19c9e93558386917093b27396",
																"typeString": "literal_string \"Recipient does not exist\""
															},
															"value": "Recipient does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_febf3fee8b75b324d9b1d08bd14137df3588b8d19c9e93558386917093b27396",
																"typeString": "literal_string \"Recipient does not exist\""
															}
														],
														"id": 1235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5538:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5538:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "5538:73:7"
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1248,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "5621:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																	"typeString": "struct Distributor.Info storage ref[] storage ref"
																}
															},
															"id": 1250,
															"indexExpression": {
																"id": 1249,
																"name": "_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "5626:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5621:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$808_storage",
																"typeString": "struct Distributor.Info storage ref"
															}
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "recipient",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 807,
														"src": "5621:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5654:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5646:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1252,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5646:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5646:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "5621:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "5621:35:7"
											},
											{
												"expression": {
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1258,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "5666:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																	"typeString": "struct Distributor.Info storage ref[] storage ref"
																}
															},
															"id": 1260,
															"indexExpression": {
																"id": 1259,
																"name": "_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "5671:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5666:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$808_storage",
																"typeString": "struct Distributor.Info storage ref"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 805,
														"src": "5666:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5686:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5666:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "5666:21:7"
											}
										]
									},
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "5211:90:7",
										"text": "@notice removes recipient for distributions\n@param _index uint"
									},
									"functionSelector": "8e69e255",
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeRecipient",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1216,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5356:8:7"
									},
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "_index",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "5331:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:16:7"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5365:0:7"
									},
									"scope": 1359,
									"src": "5306:388:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										56
									],
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "6026:630:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1280,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "6057:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6057:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1282,
																			"name": "authority",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "6071:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IExodusAuthority_$205",
																				"typeString": "contract IExodusAuthority"
																			}
																		},
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "governor",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 189,
																		"src": "6071:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6071:20:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6057:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1286,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "6095:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6095:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1288,
																			"name": "authority",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "6109:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IExodusAuthority_$205",
																				"typeString": "contract IExodusAuthority"
																			}
																		},
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "guardian",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 194,
																		"src": "6109:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6109:20:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6095:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6057:72:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420676f7665726e6f72206f7220677561726469616e",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6143:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69f7f70959a4e39a44e5c1e9758516dc060c05af9d2514644d1e8fb784f16900",
																"typeString": "literal_string \"Caller is not governor or guardian\""
															},
															"value": "Caller is not governor or guardian"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69f7f70959a4e39a44e5c1e9758516dc060c05af9d2514644d1e8fb784f16900",
																"typeString": "literal_string \"Caller is not governor or guardian\""
															}
														],
														"id": 1279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6036:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6036:153:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "6036:153:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1297,
																		"name": "info",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "6207:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																			"typeString": "struct Distributor.Info storage ref[] storage ref"
																		}
																	},
																	"id": 1299,
																	"indexExpression": {
																		"id": 1298,
																		"name": "_index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "6212:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6207:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Info_$808_storage",
																		"typeString": "struct Distributor.Info storage ref"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "recipient",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 807,
																"src": "6207:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6241:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6233:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1301,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6233:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6233:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6207:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526563697069656e7420646f6573206e6f74206578697374",
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6245:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_febf3fee8b75b324d9b1d08bd14137df3588b8d19c9e93558386917093b27396",
																"typeString": "literal_string \"Recipient does not exist\""
															},
															"value": "Recipient does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_febf3fee8b75b324d9b1d08bd14137df3588b8d19c9e93558386917093b27396",
																"typeString": "literal_string \"Recipient does not exist\""
															}
														],
														"id": 1296,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6199:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6199:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "6199:73:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1309,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "6287:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6287:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1311,
																"name": "authority",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "6301:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IExodusAuthority_$205",
																	"typeString": "contract IExodusAuthority"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "guardian",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 194,
															"src": "6301:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6301:20:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6287:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1332,
												"nodeType": "IfStatement",
												"src": "6283:153:7",
												"trueBody": {
													"id": 1331,
													"nodeType": "Block",
													"src": "6323:113:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1316,
																			"name": "_rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1273,
																			"src": "6345:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "31303030",
																					"id": 1325,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6384:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "3235",
																							"id": 1322,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6376:2:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_25_by_1",
																								"typeString": "int_const 25"
																							},
																							"value": "25"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_25_by_1",
																								"typeString": "int_const 25"
																							}
																						],
																						"expression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1317,
																									"name": "info",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 811,
																									"src": "6354:4:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																										"typeString": "struct Distributor.Info storage ref[] storage ref"
																									}
																								},
																								"id": 1319,
																								"indexExpression": {
																									"id": 1318,
																									"name": "_index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1269,
																									"src": "6359:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6354:12:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Info_$808_storage",
																									"typeString": "struct Distributor.Info storage ref"
																								}
																							},
																							"id": 1320,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "rate",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 805,
																							"src": "6354:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1321,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 654,
																						"src": "6354:21:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6354:25:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 670,
																				"src": "6354:29:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6354:35:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6345:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c696d697465723a2063616e6e6f742061646a757374206279203e322e3525",
																		"id": 1328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6391:33:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_37d83b92689e2ff0c6ec93d957682847c1c03bdb11484f2c815015046134982d",
																			"typeString": "literal_string \"Limiter: cannot adjust by >2.5%\""
																		},
																		"value": "Limiter: cannot adjust by >2.5%"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_37d83b92689e2ff0c6ec93d957682847c1c03bdb11484f2c815015046134982d",
																			"typeString": "literal_string \"Limiter: cannot adjust by >2.5%\""
																		}
																	],
																	"id": 1315,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "6337:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6337:88:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1330,
															"nodeType": "ExpressionStatement",
															"src": "6337:88:7"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6450:5:7",
													"subExpression": {
														"id": 1333,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "6451:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1346,
												"nodeType": "IfStatement",
												"src": "6446:122:7",
												"trueBody": {
													"id": 1345,
													"nodeType": "Block",
													"src": "6457:111:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1336,
																			"name": "_rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1273,
																			"src": "6479:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1337,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 811,
																					"src": "6488:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Info_$808_storage_$dyn_storage",
																						"typeString": "struct Distributor.Info storage ref[] storage ref"
																					}
																				},
																				"id": 1339,
																				"indexExpression": {
																					"id": 1338,
																					"name": "_index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1269,
																					"src": "6493:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6488:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Info_$808_storage",
																					"typeString": "struct Distributor.Info storage ref"
																				}
																			},
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rate",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 805,
																			"src": "6488:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6479:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "43616e6e6f742064656372656173652072617465206279206d6f7265207468616e20697420616c7265616479206973",
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6507:49:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ed69d779fa32807a0ab0c062194b492cf21fe3fb9f699c4cb98fdb2693ab648a",
																			"typeString": "literal_string \"Cannot decrease rate by more than it already is\""
																		},
																		"value": "Cannot decrease rate by more than it already is"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ed69d779fa32807a0ab0c062194b492cf21fe3fb9f699c4cb98fdb2693ab648a",
																			"typeString": "literal_string \"Cannot decrease rate by more than it already is\""
																		}
																	],
																	"id": 1335,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "6471:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6471:86:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1344,
															"nodeType": "ExpressionStatement",
															"src": "6471:86:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1347,
															"name": "adjustments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "6578:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Adjust_$818_storage_$",
																"typeString": "mapping(uint256 => struct Distributor.Adjust storage ref)"
															}
														},
														"id": 1349,
														"indexExpression": {
															"id": 1348,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "6590:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6578:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Adjust_$818_storage",
															"typeString": "struct Distributor.Adjust storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1351,
																"name": "_add",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1271,
																"src": "6613:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 1352,
																"name": "_rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "6625:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1353,
																"name": "_target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "6640:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1350,
															"name": "Adjust",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "6600:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Adjust_$818_storage_ptr_$",
																"typeString": "type(struct Distributor.Adjust storage pointer)"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"add",
															"rate",
															"target"
														],
														"nodeType": "FunctionCall",
														"src": "6600:49:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Adjust_$818_memory_ptr",
															"typeString": "struct Distributor.Adjust memory"
														}
													},
													"src": "6578:71:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Adjust_$818_storage",
														"typeString": "struct Distributor.Adjust storage ref"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "6578:71:7"
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "5700:183:7",
										"text": "@notice set adjustment info for a collector's reward rate\n@param _index uint\n@param _add bool\n@param _rate uint\n@param _target uint"
									},
									"functionSelector": "5db854b0",
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAdjustment",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1277,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6017:8:7"
									},
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "_index",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "5920:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5920:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "_add",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "5944:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5944:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "_rate",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "5963:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5963:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "_target",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "5986:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5986:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5910:97:7"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6026:0:7"
									},
									"scope": 1359,
									"src": "5888:768:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1360,
							"src": "234:6424:7"
						}
					],
					"src": "37:6622:7"
				},
				"id": 7
			}
		}
	}
}