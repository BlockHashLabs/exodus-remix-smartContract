{
	"id": "430c61b533d3fd95f1bb4f28c4abe6ef",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"ExodusBondingCalculator/StandardBondingCalculator.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.7.5;\n\nimport \"./SafeMath.sol\";\nimport \"./FixedPoint.sol\";\nimport \"./Address.sol\";\nimport \"./SafeERC20.sol\";\n\nimport \"./IERC20Metadata.sol\";\nimport \"./IERC20.sol\";\nimport \"./IBondingCalculator.sol\";\nimport \"./IUniswapV2ERC20.sol\";\nimport \"./IUniswapV2Pair.sol\";\n\ncontract ExodusBondingCalculator is IBondingCalculator {\n    using FixedPoint for *;\n    using SafeMath for uint256;\n\n    IERC20 internal immutable EXO;\n\n    constructor(address _EXO) {\n        require(_EXO != address(0), \"Zero address: EXO\");\n        EXO = IERC20(_EXO);\n    }\n\n    function getKValue(address _pair) public view returns (uint256 k_) {\n        uint256 token0 = IERC20Metadata(IUniswapV2Pair(_pair).token0()).decimals();\n        uint256 token1 = IERC20Metadata(IUniswapV2Pair(_pair).token1()).decimals();\n        uint256 decimals = token0.add(token1).sub(IERC20Metadata(_pair).decimals());\n\n        (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(_pair).getReserves();\n        k_ = reserve0.mul(reserve1).div(10**decimals);\n    }\n\n    function getTotalValue(address _pair) public view returns (uint256 _value) {\n        _value = getKValue(_pair).sqrrt().mul(2);\n    }\n\n    function valuation(address _pair, uint256 amount_) external view override returns (uint256 _value) {\n        uint256 totalValue = getTotalValue(_pair);\n        uint256 totalSupply = IUniswapV2Pair(_pair).totalSupply();\n\n        _value = totalValue.mul(FixedPoint.fraction(amount_, totalSupply).decode112with18()).div(1e18);\n    }\n\n    function markdown(address _pair) external view override returns (uint256) {\n        (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(_pair).getReserves();\n\n        uint256 reserve;\n        if (IUniswapV2Pair(_pair).token0() == address(EXO)) {\n            reserve = reserve1;\n        } else {\n            require(IUniswapV2Pair(_pair).token1() == address(EXO), \"Invalid pair\");\n            reserve = reserve0;\n        }\n        return reserve.mul(2 * (10**IERC20Metadata(address(EXO)).decimals())).div(getTotalValue(_pair));\n    }\n}\n"
			},
			"ExodusBondingCalculator/IUniswapV2Pair.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\nimport \"./IUniswapV2ERC20.sol\";\n\ninterface IUniswapV2Pair is IUniswapV2ERC20 {\n    function token0() external pure returns (address);\n\n    function token1() external pure returns (address);\n\n    function swap(\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address to,\n        bytes calldata data\n    ) external;\n\n    function getReserves()\n        external\n        view\n        returns (\n            uint112 reserve0,\n            uint112 reserve1,\n            uint32 blockTimestampLast\n        );\n\n    function mint(address to) external returns (uint256 liquidity);\n\n    function sync() external;\n}\n"
			},
			"ExodusBondingCalculator/IUniswapV2ERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\ninterface IUniswapV2ERC20 {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint256);\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"
			},
			"ExodusBondingCalculator/IBondingCalculator.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\ninterface IBondingCalculator {\n    function markdown(address _LP) external view returns (uint256);\n\n    function valuation(address pair_, uint256 amount_) external view returns (uint256 _value);\n}\n"
			},
			"ExodusBondingCalculator/IERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"ExodusBondingCalculator/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\nimport \"./IERC20.sol\";\n\ninterface IERC20Metadata is IERC20 {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n"
			},
			"ExodusBondingCalculator/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.7.5;\n\nimport {IERC20} from \"./IERC20.sol\";\n\n/// @notice Safe IERC20 and ETH transfer library that safely handles missing return values.\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol)\n/// Taken from Solmate\nlibrary SafeERC20 {\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        (bool success, bytes memory data) = address(token).call(\n            abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, amount)\n        );\n\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"TRANSFER_FROM_FAILED\");\n    }\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        (bool success, bytes memory data) = address(token).call(\n            abi.encodeWithSelector(IERC20.transfer.selector, to, amount)\n        );\n\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"TRANSFER_FAILED\");\n    }\n\n    function safeApprove(\n        IERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        (bool success, bytes memory data) = address(token).call(\n            abi.encodeWithSelector(IERC20.approve.selector, to, amount)\n        );\n\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"APPROVE_FAILED\");\n    }\n\n    function safeTransferETH(address to, uint256 amount) internal {\n        (bool success, ) = to.call{value: amount}(new bytes(0));\n\n        require(success, \"ETH_TRANSFER_FAILED\");\n    }\n}\n"
			},
			"ExodusBondingCalculator/Address.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\n// TODO(zx): replace with OZ implementation.\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    // function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n    //     require(address(this).balance >= value, \"Address: insufficient balance for call\");\n    //     return _functionCallWithValue(target, data, value, errorMessage);\n    // }\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 weiValue,\n        string memory errorMessage\n    ) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"ExodusBondingCalculator/FixedPoint.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.7.5;\n\nimport \"./FullMath.sol\";\n\nlibrary Babylonian {\n    function sqrt(uint256 x) internal pure returns (uint256) {\n        if (x == 0) return 0;\n\n        uint256 xx = x;\n        uint256 r = 1;\n        if (xx >= 0x100000000000000000000000000000000) {\n            xx >>= 128;\n            r <<= 64;\n        }\n        if (xx >= 0x10000000000000000) {\n            xx >>= 64;\n            r <<= 32;\n        }\n        if (xx >= 0x100000000) {\n            xx >>= 32;\n            r <<= 16;\n        }\n        if (xx >= 0x10000) {\n            xx >>= 16;\n            r <<= 8;\n        }\n        if (xx >= 0x100) {\n            xx >>= 8;\n            r <<= 4;\n        }\n        if (xx >= 0x10) {\n            xx >>= 4;\n            r <<= 2;\n        }\n        if (xx >= 0x8) {\n            r <<= 1;\n        }\n        r = (r + x / r) >> 1;\n        r = (r + x / r) >> 1;\n        r = (r + x / r) >> 1;\n        r = (r + x / r) >> 1;\n        r = (r + x / r) >> 1;\n        r = (r + x / r) >> 1;\n        r = (r + x / r) >> 1; // Seven iterations should be enough\n        uint256 r1 = x / r;\n        return (r < r1 ? r : r1);\n    }\n}\n\nlibrary BitMath {\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0, \"BitMath::mostSignificantBit: zero\");\n\n        if (x >= 0x100000000000000000000000000000000) {\n            x >>= 128;\n            r += 128;\n        }\n        if (x >= 0x10000000000000000) {\n            x >>= 64;\n            r += 64;\n        }\n        if (x >= 0x100000000) {\n            x >>= 32;\n            r += 32;\n        }\n        if (x >= 0x10000) {\n            x >>= 16;\n            r += 16;\n        }\n        if (x >= 0x100) {\n            x >>= 8;\n            r += 8;\n        }\n        if (x >= 0x10) {\n            x >>= 4;\n            r += 4;\n        }\n        if (x >= 0x4) {\n            x >>= 2;\n            r += 2;\n        }\n        if (x >= 0x2) r += 1;\n    }\n}\n\nlibrary FixedPoint {\n    struct uq112x112 {\n        uint224 _x;\n    }\n\n    struct uq144x112 {\n        uint256 _x;\n    }\n\n    uint8 private constant RESOLUTION = 112;\n    uint256 private constant Q112 = 0x10000000000000000000000000000;\n    uint256 private constant Q224 = 0x100000000000000000000000000000000000000000000000000000000;\n    uint256 private constant LOWER_MASK = 0xffffffffffffffffffffffffffff; // decimal of UQ*x112 (lower 112 bits)\n\n    function decode(uq112x112 memory self) internal pure returns (uint112) {\n        return uint112(self._x >> RESOLUTION);\n    }\n\n    function decode112with18(uq112x112 memory self) internal pure returns (uint256) {\n        return uint256(self._x) / 5192296858534827;\n    }\n\n    function fraction(uint256 numerator, uint256 denominator) internal pure returns (uq112x112 memory) {\n        require(denominator > 0, \"FixedPoint::fraction: division by zero\");\n        if (numerator == 0) return FixedPoint.uq112x112(0);\n\n        if (numerator <= uint144(-1)) {\n            uint256 result = (numerator << RESOLUTION) / denominator;\n            require(result <= uint224(-1), \"FixedPoint::fraction: overflow\");\n            return uq112x112(uint224(result));\n        } else {\n            uint256 result = FullMath.mulDiv(numerator, Q112, denominator);\n            require(result <= uint224(-1), \"FixedPoint::fraction: overflow\");\n            return uq112x112(uint224(result));\n        }\n    }\n\n    // square root of a UQ112x112\n    // lossy between 0/1 and 40 bits\n    function sqrt(uq112x112 memory self) internal pure returns (uq112x112 memory) {\n        if (self._x <= uint144(-1)) {\n            return uq112x112(uint224(Babylonian.sqrt(uint256(self._x) << 112)));\n        }\n\n        uint8 safeShiftBits = 255 - BitMath.mostSignificantBit(self._x);\n        safeShiftBits -= safeShiftBits % 2;\n        return uq112x112(uint224(Babylonian.sqrt(uint256(self._x) << safeShiftBits) << ((112 - safeShiftBits) / 2)));\n    }\n}\n"
			},
			"ExodusBondingCalculator/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.7.5;\n\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        assert(a == b * c + (a % b)); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    // Only used in the  BondingCalculator.sol\n    function sqrrt(uint256 a) internal pure returns (uint256 c) {\n        if (a > 3) {\n            c = a;\n            uint256 b = add(div(a, 2), 1);\n            while (b < c) {\n                c = b;\n                b = div(add(div(a, b), b), 2);\n            }\n        } else if (a != 0) {\n            c = 1;\n        }\n    }\n}\n"
			},
			"ExodusBondingCalculator/FullMath.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.7.5;\n\nlibrary FullMath {\n    function fullMul(uint256 x, uint256 y) private pure returns (uint256 l, uint256 h) {\n        uint256 mm = mulmod(x, y, uint256(-1));\n        l = x * y;\n        h = mm - l;\n        if (mm < l) h -= 1;\n    }\n\n    function fullDiv(\n        uint256 l,\n        uint256 h,\n        uint256 d\n    ) private pure returns (uint256) {\n        uint256 pow2 = d & -d;\n        d /= pow2;\n        l /= pow2;\n        l += h * ((-pow2) / pow2 + 1);\n        uint256 r = 1;\n        r *= 2 - d * r;\n        r *= 2 - d * r;\n        r *= 2 - d * r;\n        r *= 2 - d * r;\n        r *= 2 - d * r;\n        r *= 2 - d * r;\n        r *= 2 - d * r;\n        r *= 2 - d * r;\n        return l * r;\n    }\n\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 d\n    ) internal pure returns (uint256) {\n        (uint256 l, uint256 h) = fullMul(x, y);\n\n        uint256 mm = mulmod(x, y, d);\n        if (mm > l) h -= 1;\n        l -= mm;\n\n        if (h == 0) return l / d;\n\n        require(h < d, \"FullMath: FULLDIV_OVERFLOW\");\n        return fullDiv(l, h, d);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ExodusBondingCalculator/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExodusBondingCalculator/Address.sol\":108:9330  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ExodusBondingCalculator/Address.sol\":108:9330  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122052ba9146619556075ad73ecd92d107f2109dd3d9b51895cf0ce630c4f8f471d664736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122052ba9146619556075ad73ecd92d107f2109dd3d9b51895cf0ce630c4f8f471d664736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xBA SWAP2 CHAINID PUSH2 0x9556 SMOD GAS 0xD7 RETURNDATACOPY 0xCD SWAP3 0xD1 SMOD CALLCODE LT SWAP14 0xD3 0xD9 0xB5 XOR SWAP6 0xCF 0xC 0xE6 ADDRESS 0xC4 0xF8 DELEGATECALL PUSH18 0xD664736F6C63430007050033000000000000 ",
							"sourceMap": "108:9222:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122052ba9146619556075ad73ecd92d107f2109dd3d9b51895cf0ce630c4f8f471d664736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xBA SWAP2 CHAINID PUSH2 0x9556 SMOD GAS 0xD7 RETURNDATACOPY 0xCD SWAP3 0xD1 SMOD CALLCODE LT SWAP14 0xD3 0xD9 0xB5 XOR SWAP6 0xCF 0xC 0xE6 ADDRESS 0xC4 0xF8 DELEGATECALL PUSH18 0xD664736F6C63430007050033000000000000 ",
							"sourceMap": "108:9222:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 108,
									"end": 9330,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052ba9146619556075ad73ecd92d107f2109dd3d9b51895cf0ce630c4f8f471d664736f6c63430007050033",
									".code": [
										{
											"begin": 108,
											"end": 9330,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 108,
											"end": 9330,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusBondingCalculator/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusBondingCalculator/Address.sol\":{\"keccak256\":\"0xc2d8595504a985f53a5db9e6220ae614a7f8b4c5c1d35f55b07e08a21e40b2b9\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1b8104a932321f4f8a89ca5265b7bca5fe9f5e51ccec01470931e5014be87fc9\",\"dweb:/ipfs/Qmb2ta7fADrRuXqjot4reKg63brweMH6jWocx534huYtCc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusBondingCalculator/FixedPoint.sol": {
				"Babylonian": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExodusBondingCalculator/FixedPoint.sol\":88:1161  library Babylonian {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":88:1161  library Babylonian {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026bb6208dd0f3d9b4dc891d9b17e5a1fed37eb9190459788a1eeca87cb0ae86c64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026bb6208dd0f3d9b4dc891d9b17e5a1fed37eb9190459788a1eeca87cb0ae86c64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xBB PUSH3 0x8DD0F RETURNDATASIZE SWAP12 0x4D 0xC8 SWAP2 0xD9 0xB1 PUSH31 0x5A1FED37EB9190459788A1EECA87CB0AE86C64736F6C634300070500330000 ",
							"sourceMap": "88:1073:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026bb6208dd0f3d9b4dc891d9b17e5a1fed37eb9190459788a1eeca87cb0ae86c64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xBB PUSH3 0x8DD0F RETURNDATASIZE SWAP12 0x4D 0xC8 SWAP2 0xD9 0xB1 PUSH31 0x5A1FED37EB9190459788A1EECA87CB0AE86C64736F6C634300070500330000 ",
							"sourceMap": "88:1073:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 1161,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 88,
									"end": 1161,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026bb6208dd0f3d9b4dc891d9b17e5a1fed37eb9190459788a1eeca87cb0ae86c64736f6c63430007050033",
									".code": [
										{
											"begin": 88,
											"end": 1161,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 88,
											"end": 1161,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 88,
											"end": 1161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 88,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 88,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 1161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 88,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 1161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 1161,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusBondingCalculator/FixedPoint.sol\":\"Babylonian\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusBondingCalculator/FixedPoint.sol\":{\"keccak256\":\"0xd0cfb115e614660af05269fa70be389fbe6c7f69e33fd34da466c0471ce95387\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1a46ca090d1cb7263e141d2c5cde7bc6e13584cf51866373c9e054549c06595a\",\"dweb:/ipfs/QmcKLxhFkSR3WmvJsYbeamCU12hkM84dgrCJKJtYazZPBk\"]},\"ExodusBondingCalculator/FullMath.sol\":{\"keccak256\":\"0x4fce1c6e69dcd9e555dcacea6d1fa8966f0fbb3488730c30d51ef7e81490c2dc\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c4d14ecfacac1b39423c4a4ec1ed7f72179312ee07323c7cdade3614336aba29\",\"dweb:/ipfs/Qmf81MpDird8N7BSSnXhdVrut7mrMjJAMuKQ3FQy9Zoyqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"BitMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExodusBondingCalculator/FixedPoint.sol\":1163:1955  library BitMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":1163:1955  library BitMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f98d2daa2fb20b019c029b18a43df442ac999fbf7aeed41dd67060ebe5c798c964736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f98d2daa2fb20b019c029b18a43df442ac999fbf7aeed41dd67060ebe5c798c964736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 DUP14 0x2D 0xAA 0x2F 0xB2 SIGNEXTEND ADD SWAP13 MUL SWAP12 XOR LOG4 RETURNDATASIZE DELEGATECALL TIMESTAMP 0xAC SWAP10 SWAP16 0xBF PUSH27 0xEED41DD67060EBE5C798C964736F6C634300070500330000000000 ",
							"sourceMap": "1163:792:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f98d2daa2fb20b019c029b18a43df442ac999fbf7aeed41dd67060ebe5c798c964736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 DUP14 0x2D 0xAA 0x2F 0xB2 SIGNEXTEND ADD SWAP13 MUL SWAP12 XOR LOG4 RETURNDATASIZE DELEGATECALL TIMESTAMP 0xAC SWAP10 SWAP16 0xBF PUSH27 0xEED41DD67060EBE5C798C964736F6C634300070500330000000000 ",
							"sourceMap": "1163:792:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"mostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1163,
									"end": 1955,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1955,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f98d2daa2fb20b019c029b18a43df442ac999fbf7aeed41dd67060ebe5c798c964736f6c63430007050033",
									".code": [
										{
											"begin": 1163,
											"end": 1955,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1955,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1955,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1163,
											"end": 1955,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1955,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusBondingCalculator/FixedPoint.sol\":\"BitMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusBondingCalculator/FixedPoint.sol\":{\"keccak256\":\"0xd0cfb115e614660af05269fa70be389fbe6c7f69e33fd34da466c0471ce95387\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1a46ca090d1cb7263e141d2c5cde7bc6e13584cf51866373c9e054549c06595a\",\"dweb:/ipfs/QmcKLxhFkSR3WmvJsYbeamCU12hkM84dgrCJKJtYazZPBk\"]},\"ExodusBondingCalculator/FullMath.sol\":{\"keccak256\":\"0x4fce1c6e69dcd9e555dcacea6d1fa8966f0fbb3488730c30d51ef7e81490c2dc\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c4d14ecfacac1b39423c4a4ec1ed7f72179312ee07323c7cdade3614336aba29\",\"dweb:/ipfs/Qmf81MpDird8N7BSSnXhdVrut7mrMjJAMuKQ3FQy9Zoyqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"FixedPoint": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExodusBondingCalculator/FixedPoint.sol\":1957:3918  library FixedPoint {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":1957:3918  library FixedPoint {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122038adb4daa18f39107f2df724465026d4d47c1914792845899983a7c9c7619fdb64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122038adb4daa18f39107f2df724465026d4d47c1914792845899983a7c9c7619fdb64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xAD 0xB4 0xDA LOG1 DUP16 CODECOPY LT PUSH32 0x2DF724465026D4D47C1914792845899983A7C9C7619FDB64736F6C6343000705 STOP CALLER ",
							"sourceMap": "1957:1961:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122038adb4daa18f39107f2df724465026d4d47c1914792845899983a7c9c7619fdb64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xAD 0xB4 0xDA LOG1 DUP16 CODECOPY LT PUSH32 0x2DF724465026D4D47C1914792845899983A7C9C7619FDB64736F6C6343000705 STOP CALLER ",
							"sourceMap": "1957:1961:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"decode(struct FixedPoint.uq112x112 memory)": "infinite",
								"decode112with18(struct FixedPoint.uq112x112 memory)": "infinite",
								"fraction(uint256,uint256)": "infinite",
								"sqrt(struct FixedPoint.uq112x112 memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1957,
									"end": 3918,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 3918,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038adb4daa18f39107f2df724465026d4d47c1914792845899983a7c9c7619fdb64736f6c63430007050033",
									".code": [
										{
											"begin": 1957,
											"end": 3918,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 3918,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 3918,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 3918,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1957,
											"end": 3918,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 3918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 3918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 3918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 3918,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusBondingCalculator/FixedPoint.sol\":\"FixedPoint\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusBondingCalculator/FixedPoint.sol\":{\"keccak256\":\"0xd0cfb115e614660af05269fa70be389fbe6c7f69e33fd34da466c0471ce95387\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1a46ca090d1cb7263e141d2c5cde7bc6e13584cf51866373c9e054549c06595a\",\"dweb:/ipfs/QmcKLxhFkSR3WmvJsYbeamCU12hkM84dgrCJKJtYazZPBk\"]},\"ExodusBondingCalculator/FullMath.sol\":{\"keccak256\":\"0x4fce1c6e69dcd9e555dcacea6d1fa8966f0fbb3488730c30d51ef7e81490c2dc\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c4d14ecfacac1b39423c4a4ec1ed7f72179312ee07323c7cdade3614336aba29\",\"dweb:/ipfs/Qmf81MpDird8N7BSSnXhdVrut7mrMjJAMuKQ3FQy9Zoyqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusBondingCalculator/FullMath.sol": {
				"FullMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExodusBondingCalculator/FullMath.sol\":62:1140  library FullMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ExodusBondingCalculator/FullMath.sol\":62:1140  library FullMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cd3d7f707fca4b987dbcff3c953aebbee687fd66cd9b86edc1e5e1475df0b4fa64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cd3d7f707fca4b987dbcff3c953aebbee687fd66cd9b86edc1e5e1475df0b4fa64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD RETURNDATASIZE PUSH32 0x707FCA4B987DBCFF3C953AEBBEE687FD66CD9B86EDC1E5E1475DF0B4FA64736F PUSH13 0x63430007050033000000000000 ",
							"sourceMap": "62:1078:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cd3d7f707fca4b987dbcff3c953aebbee687fd66cd9b86edc1e5e1475df0b4fa64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD RETURNDATASIZE PUSH32 0x707FCA4B987DBCFF3C953AEBBEE687FD66CD9B86EDC1E5E1475DF0B4FA64736F PUSH13 0x63430007050033000000000000 ",
							"sourceMap": "62:1078:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"fullDiv(uint256,uint256,uint256)": "infinite",
								"fullMul(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 1140,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 62,
									"end": 1140,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd3d7f707fca4b987dbcff3c953aebbee687fd66cd9b86edc1e5e1475df0b4fa64736f6c63430007050033",
									".code": [
										{
											"begin": 62,
											"end": 1140,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 62,
											"end": 1140,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 62,
											"end": 1140,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 62,
											"end": 1140,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 1140,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 1140,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 62,
											"end": 1140,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 1140,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusBondingCalculator/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusBondingCalculator/FullMath.sol\":{\"keccak256\":\"0x4fce1c6e69dcd9e555dcacea6d1fa8966f0fbb3488730c30d51ef7e81490c2dc\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c4d14ecfacac1b39423c4a4ec1ed7f72179312ee07323c7cdade3614336aba29\",\"dweb:/ipfs/Qmf81MpDird8N7BSSnXhdVrut7mrMjJAMuKQ3FQy9Zoyqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusBondingCalculator/IBondingCalculator.sol": {
				"IBondingCalculator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_LP",
									"type": "address"
								}
							],
							"name": "markdown",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "valuation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"markdown(address)": "32da80a3",
							"valuation(address,uint256)": "4249719f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_LP\",\"type\":\"address\"}],\"name\":\"markdown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"valuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusBondingCalculator/IBondingCalculator.sol\":\"IBondingCalculator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusBondingCalculator/IBondingCalculator.sol\":{\"keccak256\":\"0x5176ee1c1f51e3dfa75d298783c4927b5c5ff2ffb5b6e3bb99bdbf7664501461\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1781ec88e9fa7df2ab07992c23416217e5a8580155016fc1daee7acdb1727ecf\",\"dweb:/ipfs/QmeFpk4uAuJLTtYYDXGwC8b4mmpv3JxCqrBAZrToztoEgx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusBondingCalculator/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusBondingCalculator/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusBondingCalculator/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusBondingCalculator/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusBondingCalculator/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusBondingCalculator/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"ExodusBondingCalculator/IERC20Metadata.sol\":{\"keccak256\":\"0x9690aab5d4ff226e2618763ca0eb46853234aba1582ba0392c2cdcb2b3c7274c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8b60dbe1980b77c76355fb44acc0365a3bf783d3a9223eee04a96da9359038ab\",\"dweb:/ipfs/QmPMw8EZhb5VAJhNjVeTpVQK2nu26DtMtGBZdfd1oFKNML\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusBondingCalculator/IUniswapV2ERC20.sol": {
				"IUniswapV2ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusBondingCalculator/IUniswapV2ERC20.sol\":\"IUniswapV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusBondingCalculator/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x4f478f401acdbca66defa898ac651c4cff4de9bf46a8b71e4878e44ce0142f4c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://ca2cef96f821b67243e57eb885834c722becc86f09ea67153788a8babc4db298\",\"dweb:/ipfs/QmQJdN7NCM3WpuhdN3DMz4e2KEtzffDJpmHKs6uvW7F6Lw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusBondingCalculator/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getReserves()": "0902f1ac",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusBondingCalculator/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusBondingCalculator/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x4f478f401acdbca66defa898ac651c4cff4de9bf46a8b71e4878e44ce0142f4c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://ca2cef96f821b67243e57eb885834c722becc86f09ea67153788a8babc4db298\",\"dweb:/ipfs/QmQJdN7NCM3WpuhdN3DMz4e2KEtzffDJpmHKs6uvW7F6Lw\"]},\"ExodusBondingCalculator/IUniswapV2Pair.sol\":{\"keccak256\":\"0x41c8bfb3949d62e48feb74a499cb88c7d3e4b94c7f15eabbe0afb884ded9438d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1e2ee0449a8cbd5e0282663a23deeb6dbe47e91fd1a246776e67ece15cb105be\",\"dweb:/ipfs/QmSwDaFmgDCSmniwsTac54XCjNyAynMrE45dj9tEZ4J4s9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusBondingCalculator/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"author": "Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol) Taken from Solmate",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExodusBondingCalculator/SafeERC20.sol\":354:1685  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ExodusBondingCalculator/SafeERC20.sol\":354:1685  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d667ff65a69489b5b785f2a1db57bbc6db728f85b803be668658adb7db2250e564736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d667ff65a69489b5b785f2a1db57bbc6db728f85b803be668658adb7db2250e564736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 PUSH8 0xFF65A69489B5B785 CALLCODE LOG1 0xDB JUMPI 0xBB 0xC6 0xDB PUSH19 0x8F85B803BE668658ADB7DB2250E564736F6C63 NUMBER STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "354:1331:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d667ff65a69489b5b785f2a1db57bbc6db728f85b803be668658adb7db2250e564736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 PUSH8 0xFF65A69489B5B785 CALLCODE LOG1 0xDB JUMPI 0xBB 0xC6 0xDB PUSH19 0x8F85B803BE668658ADB7DB2250E564736F6C63 NUMBER STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "354:1331:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 354,
									"end": 1685,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d667ff65a69489b5b785f2a1db57bbc6db728f85b803be668658adb7db2250e564736f6c63430007050033",
									".code": [
										{
											"begin": 354,
											"end": 1685,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 354,
											"end": 1685,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol) Taken from Solmate\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Safe IERC20 and ETH transfer library that safely handles missing return values.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusBondingCalculator/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusBondingCalculator/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"ExodusBondingCalculator/SafeERC20.sol\":{\"keccak256\":\"0x873d82e1f38006c425bcb544d8cca59114ca252f64457e2cc3376ef9a68f2c8e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://de509f28376467145aff3d45a974708c22838fb21c13f036a79d55d7b389078b\",\"dweb:/ipfs/QmTVAVLp2cgCV3MHnFv1YJbH4eYW4xtayLvpmZR5t8CGYc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Safe IERC20 and ETH transfer library that safely handles missing return values.",
						"version": 1
					}
				}
			},
			"ExodusBondingCalculator/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExodusBondingCalculator/SafeMath.sol\":132:1759  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ExodusBondingCalculator/SafeMath.sol\":132:1759  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bdfcbcb3d796f7ad852037069fe368aa527435879073db06d8161eb697ad4a5b64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdfcbcb3d796f7ad852037069fe368aa527435879073db06d8161eb697ad4a5b64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xFC 0xBC 0xB3 0xD7 SWAP7 0xF7 0xAD DUP6 KECCAK256 CALLDATACOPY MOD SWAP16 0xE3 PUSH9 0xAA527435879073DB06 0xD8 AND 0x1E 0xB6 SWAP8 0xAD 0x4A JUMPDEST PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "132:1627:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdfcbcb3d796f7ad852037069fe368aa527435879073db06d8161eb697ad4a5b64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xFC 0xBC 0xB3 0xD7 SWAP7 0xF7 0xAD DUP6 KECCAK256 CALLDATACOPY MOD SWAP16 0xE3 PUSH9 0xAA527435879073DB06 0xD8 AND 0x1E 0xB6 SWAP8 0xAD 0x4A JUMPDEST PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "132:1627:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sqrrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 132,
									"end": 1759,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bdfcbcb3d796f7ad852037069fe368aa527435879073db06d8161eb697ad4a5b64736f6c63430007050033",
									".code": [
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 132,
											"end": 1759,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusBondingCalculator/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusBondingCalculator/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExodusBondingCalculator/StandardBondingCalculator.sol": {
				"ExodusBondingCalculator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_EXO",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pair",
									"type": "address"
								}
							],
							"name": "getKValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "k_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pair",
									"type": "address"
								}
							],
							"name": "getTotalValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pair",
									"type": "address"
								}
							],
							"name": "markdown",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pair",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "valuation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":318:2087  contract ExodusBondingCalculator is IBondingCalculator {... */\n  mstore(0x40, 0xa0)\n    /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":476:595  constructor(address _EXO) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":520:538  _EXO != address(0) */\n  dup2\n  and\n    /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":512:560  require(_EXO != address(0), \"Zero address: EXO\") */\n  tag_5\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x11\n  0x24\n  dup3\n  add\n  mstore\n  shl(0x78, 0x5a65726f20616464726573733a2045584f)\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_5:\n    /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":570:588  EXO = IERC20(_EXO) */\n  0x60\n  dup2\n  swap1\n  shl\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n  0x80\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":318:2087  contract ExodusBondingCalculator is IBondingCalculator {... */\n  and\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x03676a2ac3ceeabe89db91fd8b811fb83ea0844f913fa2a222e3628e7294c895\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":318:2087  contract ExodusBondingCalculator is IBondingCalculator {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x32da80a3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4249719f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x490084ef\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x68637549\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1549:2085  function markdown(address _pair) external view override returns (uint256) {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_9\n      jump\t// in\n    tag_7:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1214:1543  function valuation(address _pair, uint256 amount_) external view override returns (uint256 _value) {... */\n    tag_4:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_12\n      jump\t// in\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":601:1070  function getKValue(address _pair) public view returns (uint256 k_) {... */\n    tag_5:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_15\n      jump\t// in\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1076:1208  function getTotalValue(address _pair) public view returns (uint256 _value) {... */\n    tag_6:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_18\n      jump\t// in\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1549:2085  function markdown(address _pair) external view override returns (uint256) {... */\n    tag_9:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1614:1621  uint256 */\n      0x00\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1634:1650  uint256 reserve0 */\n      dup1\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1652:1668  uint256 reserve1 */\n      0x00\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1689:1694  _pair */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1674:1707  IUniswapV2Pair(_pair).getReserves */\n      and\n      0x0902f1ac\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1674:1709  IUniswapV2Pair(_pair).getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x60\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      dup1\n      mload\n      0x20\n      swap2\n      dup3\n      add\n      mload\n      0x40\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1749:1779  IUniswapV2Pair(_pair).token0() */\n      dup1\n      mload\n      0x0dfe168100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1633:1709  (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(_pair).getReserves() */\n      0xffffffffffffffffffffffffffff\n      swap4\n      dup5\n      and\n      swap7\n      pop\n      swap3\n      swap1\n      swap2\n      and\n      swap4\n      pop\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1720:1735  uint256 reserve */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1791:1794  EXO */\n      immutable(\"0x03676a2ac3ceeabe89db91fd8b811fb83ea0844f913fa2a222e3628e7294c895\")\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1749:1795  IUniswapV2Pair(_pair).token0() == address(EXO) */\n      dup2\n      and\n      swap4\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1749:1777  IUniswapV2Pair(_pair).token0 */\n      swap1\n      dup10\n      and\n      swap3\n      0x0dfe1681\n      swap3\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1749:1779  IUniswapV2Pair(_pair).token0() */\n      0x04\n      dup1\n      dup4\n      add\n      swap4\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1674:1709  IUniswapV2Pair(_pair).getReserves() */\n      swap2\n      swap3\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1749:1779  IUniswapV2Pair(_pair).token0() */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1749:1777  IUniswapV2Pair(_pair).token0 */\n      dup7\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1749:1779  IUniswapV2Pair(_pair).token0() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1749:1795  IUniswapV2Pair(_pair).token0() == address(EXO) */\n      and\n      eq\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1745:1974  if (IUniswapV2Pair(_pair).token0() == address(EXO)) {... */\n      iszero\n      tag_28\n      jumpi\n      pop\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1821:1829  reserve1 */\n      dup1\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1745:1974  if (IUniswapV2Pair(_pair).token0() == address(EXO)) {... */\n      jump(tag_29)\n    tag_28:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1910:1913  EXO */\n      immutable(\"0x03676a2ac3ceeabe89db91fd8b811fb83ea0844f913fa2a222e3628e7294c895\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1868:1914  IUniswapV2Pair(_pair).token1() == address(EXO) */\n      and\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1883:1888  _pair */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1868:1896  IUniswapV2Pair(_pair).token1 */\n      and\n      0xd21220a7\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1868:1898  IUniswapV2Pair(_pair).token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1868:1914  IUniswapV2Pair(_pair).token1() == address(EXO) */\n      and\n      eq\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1860:1931  require(IUniswapV2Pair(_pair).token1() == address(EXO), \"Invalid pair\") */\n      tag_34\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      0x496e76616c696420706169720000000000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_34:\n      pop\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1955:1963  reserve0 */\n      dup2\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1745:1974  if (IUniswapV2Pair(_pair).token0() == address(EXO)) {... */\n    tag_29:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1990:2078  reserve.mul(2 * (10**IERC20Metadata(address(EXO)).decimals())).div(getTotalValue(_pair)) */\n      tag_35\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":2057:2077  getTotalValue(_pair) */\n      tag_36\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":2071:2076  _pair */\n      dup7\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":2057:2070  getTotalValue */\n      tag_18\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":2057:2077  getTotalValue(_pair) */\n      jump\t// in\n    tag_36:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1990:2052  reserve.mul(2 * (10**IERC20Metadata(address(EXO)).decimals())) */\n      tag_37\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":2034:2037  EXO */\n      immutable(\"0x03676a2ac3ceeabe89db91fd8b811fb83ea0844f913fa2a222e3628e7294c895\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":2011:2048  IERC20Metadata(address(EXO)).decimals */\n      and\n      0x313ce567\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":2011:2050  IERC20Metadata(address(EXO)).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      mload\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1990:1997  reserve */\n      dup5\n      swap1\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":2007:2050  10**IERC20Metadata(address(EXO)).decimals() */\n      0xff\n      and\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":2007:2009  10 */\n      0x0a\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":2007:2050  10**IERC20Metadata(address(EXO)).decimals() */\n      exp\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":2002:2003  2 */\n      0x02\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":2002:2051  2 * (10**IERC20Metadata(address(EXO)).decimals()) */\n      mul\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1990:2001  reserve.mul */\n      tag_42\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1990:2052  reserve.mul(2 * (10**IERC20Metadata(address(EXO)).decimals())) */\n      jump\t// in\n    tag_37:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1990:2056  reserve.mul(2 * (10**IERC20Metadata(address(EXO)).decimals())).div */\n      swap1\n      tag_43\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1990:2078  reserve.mul(2 * (10**IERC20Metadata(address(EXO)).decimals())).div(getTotalValue(_pair)) */\n      jump\t// in\n    tag_35:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1983:2078  return reserve.mul(2 * (10**IERC20Metadata(address(EXO)).decimals())).div(getTotalValue(_pair)) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1549:2085  function markdown(address _pair) external view override returns (uint256) {... */\n    tag_19:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1214:1543  function valuation(address _pair, uint256 amount_) external view override returns (uint256 _value) {... */\n    tag_12:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1297:1311  uint256 _value */\n      0x00\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1323:1341  uint256 totalValue */\n      dup1\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1344:1364  getTotalValue(_pair) */\n      tag_45\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1358:1363  _pair */\n      dup5\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1344:1357  getTotalValue */\n      tag_18\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1344:1364  getTotalValue(_pair) */\n      jump\t// in\n    tag_45:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1323:1364  uint256 totalValue = getTotalValue(_pair) */\n      swap1\n      pop\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1374:1393  uint256 totalSupply */\n      0x00\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1411:1416  _pair */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1396:1429  IUniswapV2Pair(_pair).totalSupply */\n      and\n      0x18160ddd\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1396:1431  IUniswapV2Pair(_pair).totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      mload\n      swap1\n      pop\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1451:1536  totalValue.mul(FixedPoint.fraction(amount_, totalSupply).decode112with18()).div(1e18) */\n      tag_50\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1531:1535  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1451:1526  totalValue.mul(FixedPoint.fraction(amount_, totalSupply).decode112with18()) */\n      tag_37\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1466:1525  FixedPoint.fraction(amount_, totalSupply).decode112with18() */\n      tag_52\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1466:1507  FixedPoint.fraction(amount_, totalSupply) */\n      tag_53\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1486:1493  amount_ */\n      dup9\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1396:1431  IUniswapV2Pair(_pair).totalSupply() */\n      dup7\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1466:1485  FixedPoint.fraction */\n      tag_54\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1466:1507  FixedPoint.fraction(amount_, totalSupply) */\n      jump\t// in\n    tag_53:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1466:1523  FixedPoint.fraction(amount_, totalSupply).decode112with18 */\n      tag_55\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1466:1525  FixedPoint.fraction(amount_, totalSupply).decode112with18() */\n      jump\t// in\n    tag_52:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1451:1461  totalValue */\n      dup6\n      swap1\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1451:1465  totalValue.mul */\n      tag_42\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1451:1526  totalValue.mul(FixedPoint.fraction(amount_, totalSupply).decode112with18()) */\n      jump\t// in\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1451:1536  totalValue.mul(FixedPoint.fraction(amount_, totalSupply).decode112with18()).div(1e18) */\n    tag_50:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1442:1536  _value = totalValue.mul(FixedPoint.fraction(amount_, totalSupply).decode112with18()).div(1e18) */\n      swap6\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1214:1543  function valuation(address _pair, uint256 amount_) external view override returns (uint256 _value) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":601:1070  function getKValue(address _pair) public view returns (uint256 k_) {... */\n    tag_15:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":656:666  uint256 k_ */\n      0x00\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":678:692  uint256 token0 */\n      dup1\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":725:730  _pair */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":710:738  IUniswapV2Pair(_pair).token0 */\n      and\n      0x0dfe1681\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":710:740  IUniswapV2Pair(_pair).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      mload\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":695:752  IERC20Metadata(IUniswapV2Pair(_pair).token0()).decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":695:750  IERC20Metadata(IUniswapV2Pair(_pair).token0()).decimals */\n      swap1\n      swap3\n      and\n      swap2\n      0x313ce567\n      swap2\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":695:752  IERC20Metadata(IUniswapV2Pair(_pair).token0()).decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":710:740  IUniswapV2Pair(_pair).token0() */\n      0x20\n      swap3\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":695:752  IERC20Metadata(IUniswapV2Pair(_pair).token0()).decimals() */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":695:750  IERC20Metadata(IUniswapV2Pair(_pair).token0()).decimals */\n      dup7\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":695:752  IERC20Metadata(IUniswapV2Pair(_pair).token0()).decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      mload\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":794:824  IUniswapV2Pair(_pair).token1() */\n      0x40\n      dup1\n      mload\n      0xd21220a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":678:752  uint256 token0 = IERC20Metadata(IUniswapV2Pair(_pair).token0()).decimals() */\n      0xff\n      swap1\n      swap3\n      and\n      swap3\n      pop\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":762:776  uint256 token1 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":794:822  IUniswapV2Pair(_pair).token1 */\n      dup7\n      and\n      swap2\n      0xd21220a7\n      swap2\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":794:824  IUniswapV2Pair(_pair).token1() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":695:752  IERC20Metadata(IUniswapV2Pair(_pair).token0()).decimals() */\n      0x20\n      swap3\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":794:824  IUniswapV2Pair(_pair).token1() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":794:822  IUniswapV2Pair(_pair).token1 */\n      dup7\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":794:824  IUniswapV2Pair(_pair).token1() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      mload\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":779:836  IERC20Metadata(IUniswapV2Pair(_pair).token1()).decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":779:834  IERC20Metadata(IUniswapV2Pair(_pair).token1()).decimals */\n      swap1\n      swap3\n      and\n      swap2\n      0x313ce567\n      swap2\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":779:836  IERC20Metadata(IUniswapV2Pair(_pair).token1()).decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":794:824  IUniswapV2Pair(_pair).token1() */\n      0x20\n      swap3\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":779:836  IERC20Metadata(IUniswapV2Pair(_pair).token1()).decimals() */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":779:834  IERC20Metadata(IUniswapV2Pair(_pair).token1()).decimals */\n      dup7\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":779:836  IERC20Metadata(IUniswapV2Pair(_pair).token1()).decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      mload\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":888:920  IERC20Metadata(_pair).decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":762:836  uint256 token1 = IERC20Metadata(IUniswapV2Pair(_pair).token1()).decimals() */\n      0xff\n      swap1\n      swap3\n      and\n      swap3\n      pop\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":846:862  uint256 decimals */\n      0x00\n      swap2\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":865:921  token0.add(token1).sub(IERC20Metadata(_pair).decimals()) */\n      tag_73\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":888:918  IERC20Metadata(_pair).decimals */\n      dup9\n      and\n      swap2\n      0x313ce567\n      swap2\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":888:920  IERC20Metadata(_pair).decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":779:836  IERC20Metadata(IUniswapV2Pair(_pair).token1()).decimals() */\n      0x20\n      swap3\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":888:920  IERC20Metadata(_pair).decimals() */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":888:918  IERC20Metadata(_pair).decimals */\n      dup7\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":888:920  IERC20Metadata(_pair).decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_76:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      mload\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":865:921  token0.add(token1).sub(IERC20Metadata(_pair).decimals()) */\n      0xff\n      and\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":865:883  token0.add(token1) */\n      tag_78\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":865:871  token0 */\n      dup6\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":876:882  token1 */\n      dup6\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":865:875  token0.add */\n      tag_79\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":865:883  token0.add(token1) */\n      jump\t// in\n    tag_78:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":865:887  token0.add(token1).sub */\n      swap1\n      tag_80\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":865:921  token0.add(token1).sub(IERC20Metadata(_pair).decimals()) */\n      jump\t// in\n    tag_73:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":846:921  uint256 decimals = token0.add(token1).sub(IERC20Metadata(_pair).decimals()) */\n      swap1\n      pop\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":933:949  uint256 reserve0 */\n      0x00\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":951:967  uint256 reserve1 */\n      dup1\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":988:993  _pair */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":973:1006  IUniswapV2Pair(_pair).getReserves */\n      and\n      0x0902f1ac\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":973:1008  IUniswapV2Pair(_pair).getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x60\n      dup2\n      lt\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      dup1\n      mload\n      0x20\n      swap1\n      swap2\n      add\n      mload\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":932:1008  (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(_pair).getReserves() */\n      0xffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n      swap4\n      pop\n      and\n      swap1\n      pop\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1023:1063  reserve0.mul(reserve1).div(10**decimals) */\n      tag_85\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1050:1052  10 */\n      0x0a\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1050:1062  10**decimals */\n      dup5\n      swap1\n      exp\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1023:1045  reserve0.mul(reserve1) */\n      tag_37\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":932:1008  (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(_pair).getReserves() */\n      dup5\n      dup5\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1023:1035  reserve0.mul */\n      tag_42\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1023:1045  reserve0.mul(reserve1) */\n      jump\t// in\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1023:1063  reserve0.mul(reserve1).div(10**decimals) */\n    tag_85:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1018:1063  k_ = reserve0.mul(reserve1).div(10**decimals) */\n      swap8\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":601:1070  function getKValue(address _pair) public view returns (uint256 k_) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1076:1208  function getTotalValue(address _pair) public view returns (uint256 _value) {... */\n    tag_18:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1135:1149  uint256 _value */\n      0x00\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1170:1201  getKValue(_pair).sqrrt().mul(2) */\n      tag_88\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1199:1200  2 */\n      0x02\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1170:1194  getKValue(_pair).sqrrt() */\n      tag_89\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1170:1186  getKValue(_pair) */\n      tag_90\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1180:1185  _pair */\n      dup6\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1170:1179  getKValue */\n      tag_15\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1170:1186  getKValue(_pair) */\n      jump\t// in\n    tag_90:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1170:1192  getKValue(_pair).sqrrt */\n      tag_91\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1170:1194  getKValue(_pair).sqrrt() */\n      jump\t// in\n    tag_89:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1170:1198  getKValue(_pair).sqrrt().mul */\n      swap1\n      tag_42\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1170:1201  getKValue(_pair).sqrrt().mul(2) */\n      jump\t// in\n    tag_88:\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1161:1201  _value = getKValue(_pair).sqrrt().mul(2) */\n      swap3\n        /* \"ExodusBondingCalculator/StandardBondingCalculator.sol\":1076:1208  function getTotalValue(address _pair) public view returns (uint256 _value) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusBondingCalculator/SafeMath.sol\":700:941  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_42:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":758:765  uint256 */\n      0x00\n        /* \"ExodusBondingCalculator/SafeMath.sol\":781:787  a == 0 */\n      dup3\n        /* \"ExodusBondingCalculator/SafeMath.sol\":777:822  if (a == 0) {... */\n      tag_93\n      jumpi\n      pop\n        /* \"ExodusBondingCalculator/SafeMath.sol\":810:811  0 */\n      0x00\n        /* \"ExodusBondingCalculator/SafeMath.sol\":803:811  return 0 */\n      jump(tag_88)\n        /* \"ExodusBondingCalculator/SafeMath.sol\":777:822  if (a == 0) {... */\n    tag_93:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":844:849  a * b */\n      dup3\n      dup3\n      mul\n        /* \"ExodusBondingCalculator/SafeMath.sol\":848:849  b */\n      dup3\n        /* \"ExodusBondingCalculator/SafeMath.sol\":844:845  a */\n      dup5\n        /* \"ExodusBondingCalculator/SafeMath.sol\":844:849  a * b */\n      dup3\n        /* \"ExodusBondingCalculator/SafeMath.sol\":844:845  a */\n      dup2\n        /* \"ExodusBondingCalculator/SafeMath.sol\":867:872  c / a */\n      tag_94\n      jumpi\n      invalid\n    tag_94:\n      div\n        /* \"ExodusBondingCalculator/SafeMath.sol\":867:877  c / a == b */\n      eq\n        /* \"ExodusBondingCalculator/SafeMath.sol\":859:915  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":933:934  c */\n      swap4\n        /* \"ExodusBondingCalculator/SafeMath.sol\":700:941  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusBondingCalculator/SafeMath.sol\":947:1077  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_43:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1005:1012  uint256 */\n      0x00\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n      tag_95\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1035:1036  a */\n      dup4\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1038:1039  b */\n      dup4\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1031:1034  div */\n      tag_98\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1031:1070  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2683:3389  function fraction(uint256 numerator, uint256 denominator) internal pure returns (uq112x112 memory) {... */\n    tag_54:\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2764:2780  uq112x112 memory */\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2814:2815  0 */\n      0x00\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2800:2811  denominator */\n      dup3\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2800:2815  denominator > 0 */\n      gt\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2792:2858  require(denominator > 0, \"FixedPoint::fraction: division by zero\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_5e8a6c8dfacd0a41f2501735d8ee26d996b9e7e81ff5467dfdfd11a3728a15e7\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2872:2886  numerator == 0 */\n      dup3\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2868:2918  if (numerator == 0) return FixedPoint.uq112x112(0) */\n      tag_103\n      jumpi\n      pop\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2895:2918  FixedPoint.uq112x112(0) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2888:2918  return FixedPoint.uq112x112(0) */\n      jump(tag_88)\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2868:2918  if (numerator == 0) return FixedPoint.uq112x112(0) */\n    tag_103:\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2933:2957  numerator <= uint144(-1) */\n      0xffffffffffffffffffffffffffffffffffff\n      dup4\n      gt\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2929:3383  if (numerator <= uint144(-1)) {... */\n      tag_104\n      jumpi\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2973:2987  uint256 result */\n      0x00\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3018:3029  denominator */\n      dup3\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2118:2121  112 */\n      0x70\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2991:3014  numerator << RESOLUTION */\n      dup6\n      swap1\n      shl\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3018:3029  denominator */\n      dup2\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2990:3029  (numerator << RESOLUTION) / denominator */\n      tag_105\n      jumpi\n      invalid\n    tag_105:\n      div\n      swap1\n      pop\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3051:3072  result <= uint224(-1) */\n      dup2\n      gt\n      iszero\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3043:3107  require(result <= uint224(-1), \"FixedPoint::fraction: overflow\") */\n      tag_106\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_106:\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3128:3154  uq112x112(uint224(result)) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3146:3152  result */\n      dup3\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3128:3154  uq112x112(uint224(result)) */\n      and\n      dup2\n      mstore\n      pop\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3121:3154  return uq112x112(uint224(result)) */\n      swap2\n      pop\n      pop\n      jump(tag_88)\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2929:3383  if (numerator <= uint144(-1)) {... */\n    tag_104:\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3185:3199  uint256 result */\n      0x00\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3202:3247  FullMath.mulDiv(numerator, Q112, denominator) */\n      tag_108\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3218:3227  numerator */\n      dup5\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2159:2190  0x10000000000000000000000000000 */\n      0x010000000000000000000000000000\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3235:3246  denominator */\n      dup6\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3202:3217  FullMath.mulDiv */\n      tag_109\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3202:3247  FullMath.mulDiv(numerator, Q112, denominator) */\n      jump\t// in\n    tag_108:\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3185:3247  uint256 result = FullMath.mulDiv(numerator, Q112, denominator) */\n      swap1\n      pop\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3269:3290  result <= uint224(-1) */\n      dup2\n      gt\n      iszero\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":3261:3325  require(result <= uint224(-1), \"FixedPoint::fraction: overflow\") */\n      tag_106\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2538:2677  function decode112with18(uq112x112 memory self) internal pure returns (uint256) {... */\n    tag_55:\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2643:2650  self._x */\n      mload\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2654:2670  5192296858534827 */\n      0x12725dd1d243ab\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2635:2651  uint256(self._x) */\n      swap1\n      swap2\n      and\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2635:2670  uint256(self._x) / 5192296858534827 */\n      div\n      swap1\n        /* \"ExodusBondingCalculator/FixedPoint.sol\":2538:2677  function decode112with18(uq112x112 memory self) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"ExodusBondingCalculator/SafeMath.sol\":155:331  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_79:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":213:220  uint256 */\n      0x00\n        /* \"ExodusBondingCalculator/SafeMath.sol\":244:249  a + b */\n      dup3\n      dup3\n      add\n        /* \"ExodusBondingCalculator/SafeMath.sol\":267:273  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"ExodusBondingCalculator/SafeMath.sol\":259:305  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_95\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"ExodusBondingCalculator/SafeMath.sol\":337:471  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_80:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":395:402  uint256 */\n      0x00\n        /* \"ExodusBondingCalculator/SafeMath.sol\":421:464  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_95\n        /* \"ExodusBondingCalculator/SafeMath.sol\":425:426  a */\n      dup4\n        /* \"ExodusBondingCalculator/SafeMath.sol\":428:429  b */\n      dup4\n        /* \"ExodusBondingCalculator/SafeMath.sol\":421:464  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"ExodusBondingCalculator/SafeMath.sol\":421:424  sub */\n      tag_117\n        /* \"ExodusBondingCalculator/SafeMath.sol\":421:464  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1437:1757  function sqrrt(uint256 a) internal pure returns (uint256 c) {... */\n    tag_91:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1486:1495  uint256 c */\n      0x00\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1515:1516  3 */\n      0x03\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1511:1512  a */\n      dup3\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1511:1516  a > 3 */\n      gt\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1507:1751  if (a > 3) {... */\n      iszero\n      tag_119\n      jumpi\n      pop\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1536:1537  a */\n      dup1\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1551:1560  uint256 b */\n      0x00\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1563:1580  add(div(a, 2), 1) */\n      tag_120\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1567:1576  div(a, 2) */\n      tag_121\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1536:1537  a */\n      dup4\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1574:1575  2 */\n      0x02\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1567:1570  div */\n      tag_43\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1567:1576  div(a, 2) */\n      jump\t// in\n    tag_121:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1578:1579  1 */\n      0x01\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1563:1566  add */\n      tag_79\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1563:1580  add(div(a, 2), 1) */\n      jump\t// in\n    tag_120:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1551:1580  uint256 b = add(div(a, 2), 1) */\n      swap1\n      pop\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1594:1693  while (b < c) {... */\n    tag_122:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1605:1606  c */\n      dup2\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1601:1602  b */\n      dup2\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1601:1606  b < c */\n      lt\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1594:1693  while (b < c) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1630:1631  b */\n      dup1\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1626:1631  c = b */\n      swap2\n      pop\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1653:1678  div(add(div(a, b), b), 2) */\n      tag_124\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1657:1674  add(div(a, b), b) */\n      tag_125\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1661:1670  div(a, b) */\n      tag_126\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1665:1666  a */\n      dup6\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1668:1669  b */\n      dup5\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1661:1664  div */\n      tag_43\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1661:1670  div(a, b) */\n      jump\t// in\n    tag_126:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1672:1673  b */\n      dup4\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1657:1660  add */\n      tag_79\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1657:1674  add(div(a, b), b) */\n      jump\t// in\n    tag_125:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1676:1677  2 */\n      0x02\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1653:1656  div */\n      tag_43\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1653:1678  div(add(div(a, b), b), 2) */\n      jump\t// in\n    tag_124:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1649:1678  b = div(add(div(a, b), b), 2) */\n      swap1\n      pop\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1594:1693  while (b < c) {... */\n      jump(tag_122)\n    tag_123:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1507:1751  if (a > 3) {... */\n      pop\n      jump(tag_19)\n    tag_119:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1713:1719  a != 0 */\n      dup2\n      iszero\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1709:1751  if (a != 0) {... */\n      tag_19\n      jumpi\n      pop\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1739:1740  1 */\n      0x01\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1437:1757  function sqrrt(uint256 a) internal pure returns (uint256 c) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1083:1384  function div(... */\n    tag_98:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1199:1206  uint256 */\n      0x00\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1233:1245  errorMessage */\n      dup2\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1226:1231  b > 0 */\n      dup4\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1218:1246  require(b > 0, errorMessage) */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_131:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_133\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_131)\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_134\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_134:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n      pop\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1256:1265  uint256 c */\n      0x00\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1272:1273  b */\n      dup4\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1268:1269  a */\n      dup6\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1268:1273  a / b */\n      dup2\n      tag_135\n      jumpi\n      invalid\n    tag_135:\n      div\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1256:1273  uint256 c = a / b */\n      swap1\n      pop\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1308:1309  b */\n      dup4\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1304:1305  a */\n      dup6\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1304:1309  a % b */\n      dup2\n      tag_136\n      jumpi\n      invalid\n    tag_136:\n      mod\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1299:1300  c */\n      dup2\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1295:1296  b */\n      dup6\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1295:1300  b * c */\n      mul\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1295:1310  b * c + (a % b) */\n      add\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1290:1291  a */\n      dup6\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1290:1310  a == b * c + (a % b) */\n      eq\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1283:1311  assert(a == b * c + (a % b)) */\n      tag_137\n      jumpi\n      invalid\n    tag_137:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1376:1377  c */\n      swap5\n        /* \"ExodusBondingCalculator/SafeMath.sol\":1083:1384  function div(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ExodusBondingCalculator/FullMath.sol\":765:1138  function mulDiv(... */\n    tag_109:\n        /* \"ExodusBondingCalculator/FullMath.sol\":867:874  uint256 */\n      0x00\n        /* \"ExodusBondingCalculator/FullMath.sol\":887:896  uint256 l */\n      dup1\n        /* \"ExodusBondingCalculator/FullMath.sol\":898:907  uint256 h */\n      0x00\n        /* \"ExodusBondingCalculator/FullMath.sol\":911:924  fullMul(x, y) */\n      tag_139\n        /* \"ExodusBondingCalculator/FullMath.sol\":919:920  x */\n      dup7\n        /* \"ExodusBondingCalculator/FullMath.sol\":922:923  y */\n      dup7\n        /* \"ExodusBondingCalculator/FullMath.sol\":911:918  fullMul */\n      tag_140\n        /* \"ExodusBondingCalculator/FullMath.sol\":911:924  fullMul(x, y) */\n      jump\t// in\n    tag_139:\n        /* \"ExodusBondingCalculator/FullMath.sol\":886:924  (uint256 l, uint256 h) = fullMul(x, y) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"ExodusBondingCalculator/FullMath.sol\":935:945  uint256 mm */\n      0x00\n        /* \"ExodusBondingCalculator/FullMath.sol\":961:962  d */\n      dup5\n        /* \"ExodusBondingCalculator/FullMath.sol\":948:963  mulmod(x, y, d) */\n      dup1\n      tag_141\n      jumpi\n      invalid\n    tag_141:\n        /* \"ExodusBondingCalculator/FullMath.sol\":958:959  y */\n      dup7\n        /* \"ExodusBondingCalculator/FullMath.sol\":955:956  x */\n      dup9\n        /* \"ExodusBondingCalculator/FullMath.sol\":948:963  mulmod(x, y, d) */\n      mulmod\n        /* \"ExodusBondingCalculator/FullMath.sol\":935:963  uint256 mm = mulmod(x, y, d) */\n      swap1\n      pop\n        /* \"ExodusBondingCalculator/FullMath.sol\":982:983  l */\n      dup3\n        /* \"ExodusBondingCalculator/FullMath.sol\":977:979  mm */\n      dup2\n        /* \"ExodusBondingCalculator/FullMath.sol\":977:983  mm > l */\n      gt\n        /* \"ExodusBondingCalculator/FullMath.sol\":973:991  if (mm > l) h -= 1 */\n      iszero\n      tag_142\n      jumpi\n        /* \"ExodusBondingCalculator/FullMath.sol\":990:991  1 */\n      0x01\n        /* \"ExodusBondingCalculator/FullMath.sol\":985:991  h -= 1 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"ExodusBondingCalculator/FullMath.sol\":973:991  if (mm > l) h -= 1 */\n    tag_142:\n        /* \"ExodusBondingCalculator/FullMath.sol\":1001:1008  l -= mm */\n      swap2\n      dup3\n      swap1\n      sub\n      swap2\n        /* \"ExodusBondingCalculator/FullMath.sol\":1023:1029  h == 0 */\n      dup2\n        /* \"ExodusBondingCalculator/FullMath.sol\":1019:1043  if (h == 0) return l / d */\n      tag_143\n      jumpi\n        /* \"ExodusBondingCalculator/FullMath.sol\":1042:1043  d */\n      dup5\n        /* \"ExodusBondingCalculator/FullMath.sol\":1038:1039  l */\n      dup4\n        /* \"ExodusBondingCalculator/FullMath.sol\":1038:1043  l / d */\n      dup2\n      tag_144\n      jumpi\n      invalid\n    tag_144:\n      div\n        /* \"ExodusBondingCalculator/FullMath.sol\":1031:1043  return l / d */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_95)\n        /* \"ExodusBondingCalculator/FullMath.sol\":1019:1043  if (h == 0) return l / d */\n    tag_143:\n        /* \"ExodusBondingCalculator/FullMath.sol\":1066:1067  d */\n      dup5\n        /* \"ExodusBondingCalculator/FullMath.sol\":1062:1063  h */\n      dup3\n        /* \"ExodusBondingCalculator/FullMath.sol\":1062:1067  h < d */\n      lt\n        /* \"ExodusBondingCalculator/FullMath.sol\":1054:1098  require(h < d, \"FullMath: FULLDIV_OVERFLOW\") */\n      tag_145\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x46756c6c4d6174683a2046554c4c4449565f4f564552464c4f57000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_145:\n        /* \"ExodusBondingCalculator/FullMath.sol\":1115:1131  fullDiv(l, h, d) */\n      tag_85\n        /* \"ExodusBondingCalculator/FullMath.sol\":1123:1124  l */\n      dup4\n        /* \"ExodusBondingCalculator/FullMath.sol\":1126:1127  h */\n      dup4\n        /* \"ExodusBondingCalculator/FullMath.sol\":1129:1130  d */\n      dup8\n        /* \"ExodusBondingCalculator/FullMath.sol\":1115:1122  fullDiv */\n      tag_147\n        /* \"ExodusBondingCalculator/FullMath.sol\":1115:1131  fullDiv(l, h, d) */\n      jump\t// in\n        /* \"ExodusBondingCalculator/SafeMath.sol\":477:694  function sub(... */\n    tag_117:\n        /* \"ExodusBondingCalculator/SafeMath.sol\":593:600  uint256 */\n      0x00\n        /* \"ExodusBondingCalculator/SafeMath.sol\":628:640  errorMessage */\n      dup2\n        /* \"ExodusBondingCalculator/SafeMath.sol\":620:626  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"ExodusBondingCalculator/SafeMath.sol\":612:641  require(b <= a, errorMessage) */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_133\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_131)\n    tag_149:\n      pop\n      pop\n      pop\n        /* \"ExodusBondingCalculator/SafeMath.sol\":663:668  a - b */\n      swap1\n      sub\n      swap1\n        /* \"ExodusBondingCalculator/SafeMath.sol\":477:694  function sub(... */\n      jump\t// out\n        /* \"ExodusBondingCalculator/FullMath.sol\":85:290  function fullMul(uint256 x, uint256 y) private pure returns (uint256 l, uint256 h) {... */\n    tag_140:\n        /* \"ExodusBondingCalculator/FullMath.sol\":146:155  uint256 l */\n      0x00\n      dup1\n      dup1\n      not(0x00)\n        /* \"ExodusBondingCalculator/FullMath.sol\":201:202  y */\n      dup5\n        /* \"ExodusBondingCalculator/FullMath.sol\":198:199  x */\n      dup7\n        /* \"ExodusBondingCalculator/FullMath.sol\":191:216  mulmod(x, y, uint256(-1)) */\n      mulmod\n        /* \"ExodusBondingCalculator/FullMath.sol\":178:216  uint256 mm = mulmod(x, y, uint256(-1)) */\n      swap1\n      pop\n        /* \"ExodusBondingCalculator/FullMath.sol\":234:235  y */\n      dup4\n        /* \"ExodusBondingCalculator/FullMath.sol\":230:231  x */\n      dup6\n        /* \"ExodusBondingCalculator/FullMath.sol\":230:235  x * y */\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":226:235  l = x * y */\n      swap3\n      pop\n        /* \"ExodusBondingCalculator/FullMath.sol\":254:255  l */\n      dup3\n        /* \"ExodusBondingCalculator/FullMath.sol\":249:251  mm */\n      dup2\n        /* \"ExodusBondingCalculator/FullMath.sol\":249:255  mm - l */\n      sub\n        /* \"ExodusBondingCalculator/FullMath.sol\":245:255  h = mm - l */\n      swap2\n      pop\n        /* \"ExodusBondingCalculator/FullMath.sol\":274:275  l */\n      dup3\n        /* \"ExodusBondingCalculator/FullMath.sol\":269:271  mm */\n      dup2\n        /* \"ExodusBondingCalculator/FullMath.sol\":269:275  mm < l */\n      lt\n        /* \"ExodusBondingCalculator/FullMath.sol\":265:283  if (mm < l) h -= 1 */\n      iszero\n      tag_156\n      jumpi\n        /* \"ExodusBondingCalculator/FullMath.sol\":282:283  1 */\n      0x01\n        /* \"ExodusBondingCalculator/FullMath.sol\":277:283  h -= 1 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"ExodusBondingCalculator/FullMath.sol\":265:283  if (mm < l) h -= 1 */\n    tag_156:\n        /* \"ExodusBondingCalculator/FullMath.sol\":85:290  function fullMul(uint256 x, uint256 y) private pure returns (uint256 l, uint256 h) {... */\n      pop\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"ExodusBondingCalculator/FullMath.sol\":296:759  function fullDiv(... */\n    tag_147:\n        /* \"ExodusBondingCalculator/FullMath.sol\":398:405  uint256 */\n      0x00\n        /* \"ExodusBondingCalculator/FullMath.sol\":436:438  -d */\n      dup2\n      dup2\n      sub\n        /* \"ExodusBondingCalculator/FullMath.sol\":432:438  d & -d */\n      dup3\n      and\n      dup1\n        /* \"ExodusBondingCalculator/FullMath.sol\":437:438  d */\n      dup4\n        /* \"ExodusBondingCalculator/FullMath.sol\":432:438  d & -d */\n      dup2\n        /* \"ExodusBondingCalculator/FullMath.sol\":448:457  d /= pow2 */\n      tag_158\n      jumpi\n      invalid\n    tag_158:\n      div\n      swap3\n      pop\n        /* \"ExodusBondingCalculator/FullMath.sol\":472:476  pow2 */\n      dup1\n        /* \"ExodusBondingCalculator/FullMath.sol\":467:476  l /= pow2 */\n      dup6\n      dup2\n      tag_159\n      jumpi\n      invalid\n    tag_159:\n      div\n      swap5\n      pop\n        /* \"ExodusBondingCalculator/FullMath.sol\":506:510  pow2 */\n      dup1\n        /* \"ExodusBondingCalculator/FullMath.sol\":498:502  pow2 */\n      dup2\n        /* \"ExodusBondingCalculator/FullMath.sol\":497:502  -pow2 */\n      0x00\n      sub\n        /* \"ExodusBondingCalculator/FullMath.sol\":496:510  (-pow2) / pow2 */\n      dup2\n      tag_160\n      jumpi\n      invalid\n    tag_160:\n        /* \"ExodusBondingCalculator/FullMath.sol\":553:554  2 */\n      0x02\n        /* \"ExodusBondingCalculator/FullMath.sol\":553:562  2 - d * r */\n      dup6\n      dup2\n      sub\n        /* \"ExodusBondingCalculator/FullMath.sol\":581:586  d * r */\n      dup1\n      dup8\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":577:586  2 - d * r */\n      dup3\n      sub\n        /* \"ExodusBondingCalculator/FullMath.sol\":572:586  r *= 2 - d * r */\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":605:610  d * r */\n      dup1\n      dup8\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":601:610  2 - d * r */\n      dup3\n      sub\n        /* \"ExodusBondingCalculator/FullMath.sol\":596:610  r *= 2 - d * r */\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":629:634  d * r */\n      dup1\n      dup8\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":625:634  2 - d * r */\n      dup3\n      sub\n        /* \"ExodusBondingCalculator/FullMath.sol\":620:634  r *= 2 - d * r */\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":653:658  d * r */\n      dup1\n      dup8\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":649:658  2 - d * r */\n      dup3\n      sub\n        /* \"ExodusBondingCalculator/FullMath.sol\":644:658  r *= 2 - d * r */\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":677:682  d * r */\n      dup1\n      dup8\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":673:682  2 - d * r */\n      dup3\n      sub\n        /* \"ExodusBondingCalculator/FullMath.sol\":668:682  r *= 2 - d * r */\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":701:706  d * r */\n      dup1\n      dup8\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":697:706  2 - d * r */\n      dup3\n      sub\n        /* \"ExodusBondingCalculator/FullMath.sol\":692:706  r *= 2 - d * r */\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":725:730  d * r */\n      swap6\n      dup7\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":721:730  2 - d * r */\n      swap1\n      sub\n        /* \"ExodusBondingCalculator/FullMath.sol\":716:730  r *= 2 - d * r */\n      swap1\n      swap5\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":496:510  (-pow2) / pow2 */\n      swap4\n      div\n        /* \"ExodusBondingCalculator/FullMath.sol\":513:514  1 */\n      0x01\n        /* \"ExodusBondingCalculator/FullMath.sol\":496:514  (-pow2) / pow2 + 1 */\n      add\n        /* \"ExodusBondingCalculator/FullMath.sol\":491:515  h * ((-pow2) / pow2 + 1) */\n      swap4\n      swap1\n      swap4\n      mul\n        /* \"ExodusBondingCalculator/FullMath.sol\":486:515  l += h * ((-pow2) / pow2 + 1) */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"ExodusBondingCalculator/FullMath.sol\":747:752  l * r */\n      mul\n      swap3\n        /* \"ExodusBondingCalculator/FullMath.sol\":296:759  function fullDiv(... */\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_100:\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n      jump\t// out\n    stop\n    data_5e8a6c8dfacd0a41f2501735d8ee26d996b9e7e81ff5467dfdfd11a3728a15e7 4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206279207a65726f\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa2646970667358221220bc258b3c2d2c4f590789b9db95fef5a8ae5e00f7db3305de7e31106f6682bbff64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b50604051610eaf380380610eaf8339818101604052602081101561003357600080fd5b50516001600160a01b038116610084576040805162461bcd60e51b81526020600482015260116024820152705a65726f20616464726573733a2045584f60781b604482015290519081900360640190fd5b606081901b6001600160601b0319166080526001600160a01b0316610def6100c0600039806101c2528061024e528061034a5250610def6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806332da80a3146100515780634249719f14610089578063490084ef146100b557806368637549146100db575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b0316610101565b60408051918252519081900360200190f35b6100776004803603604081101561009f57600080fd5b506001600160a01b0381351690602001356103ee565b610077600480360360208110156100cb57600080fd5b50356001600160a01b0316610496565b610077600480360360208110156100f157600080fd5b50356001600160a01b031661079c565b6000806000836001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561013f57600080fd5b505afa158015610153573d6000803e3d6000fd5b505050506040513d606081101561016957600080fd5b508051602091820151604080517f0dfe168100000000000000000000000000000000000000000000000000000000815290516dffffffffffffffffffffffffffff93841696509290911693506000926001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169390891692630dfe1681926004808301939192829003018186803b15801561020a57600080fd5b505afa15801561021e573d6000803e3d6000fd5b505050506040513d602081101561023457600080fd5b50516001600160a01b0316141561024c575080610339565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156102af57600080fd5b505afa1580156102c3573d6000803e3d6000fd5b505050506040513d60208110156102d957600080fd5b50516001600160a01b031614610336576040805162461bcd60e51b815260206004820152600c60248201527f496e76616c696420706169720000000000000000000000000000000000000000604482015290519081900360640190fd5b50815b6103e36103458661079c565b6103dd7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156103a157600080fd5b505afa1580156103b5573d6000803e3d6000fd5b505050506040513d60208110156103cb57600080fd5b5051849060ff16600a0a6002026107c0565b90610820565b93505050505b919050565b6000806103fa8461079c565b90506000846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561043757600080fd5b505afa15801561044b573d6000803e3d6000fd5b505050506040513d602081101561046157600080fd5b5051905061048d670de0b6b3a76400006103dd6104866104818886610862565b6109e4565b85906107c0565b95945050505050565b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156104d257600080fd5b505afa1580156104e6573d6000803e3d6000fd5b505050506040513d60208110156104fc57600080fd5b50516040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b15801561054057600080fd5b505afa158015610554573d6000803e3d6000fd5b505050506040513d602081101561056a57600080fd5b5051604080517fd21220a7000000000000000000000000000000000000000000000000000000008152905160ff90921692506000916001600160a01b0386169163d21220a7916004808301926020929190829003018186803b1580156105cf57600080fd5b505afa1580156105e3573d6000803e3d6000fd5b505050506040513d60208110156105f957600080fd5b50516040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b15801561063d57600080fd5b505afa158015610651573d6000803e3d6000fd5b505050506040513d602081101561066757600080fd5b50516040805163313ce56760e01b8152905160ff90921692506000916106f7916001600160a01b0388169163313ce56791600480820192602092909190829003018186803b1580156106b857600080fd5b505afa1580156106cc573d6000803e3d6000fd5b505050506040513d60208110156106e257600080fd5b505160ff166106f185856109fc565b90610a56565b9050600080866001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561073557600080fd5b505afa158015610749573d6000803e3d6000fd5b505050506040513d606081101561075f57600080fd5b5080516020909101516dffffffffffffffffffffffffffff9182169350169050610791600a84900a6103dd84846107c0565b979650505050505050565b60006107ba60026107b46107af85610496565b610a98565b906107c0565b92915050565b6000826107cf575060006107ba565b828202828482816107dc57fe5b04146108195760405162461bcd60e51b8152600401808060200182810382526021815260200180610d996021913960400191505060405180910390fd5b9392505050565b600061081983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610b02565b61086a610d60565b600082116108a95760405162461bcd60e51b8152600401808060200182810382526026815260200180610d736026913960400191505060405180910390fd5b826108c357506040805160208101909152600081526107ba565b71ffffffffffffffffffffffffffffffffffff831161096a57600082607085901b816108eb57fe5b0490506001600160e01b0381111561094a576040805162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604482015290519081900360640190fd5b6040518060200160405280826001600160e01b03168152509150506107ba565b6000610986846e01000000000000000000000000000085610bbb565b90506001600160e01b0381111561094a576040805162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604482015290519081900360640190fd5b516612725dd1d243ab6001600160e01b039091160490565b600082820183811015610819576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061081983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610c69565b60006003821115610af45750806000610abc610ab5836002610820565b60016109fc565b90505b81811015610aee57809150610ae7610ae0610ada8584610820565b836109fc565b6002610820565b9050610abf565b506103e9565b81156103e957506001919050565b60008183610b8e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b53578181015183820152602001610b3b565b50505050905090810190601f168015610b805780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610b9a57fe5b049050838581610ba657fe5b06818502018514610bb357fe5b949350505050565b6000806000610bca8686610cc3565b9150915060008480610bd857fe5b868809905082811115610bec576001820391505b918290039181610c0a57848381610bff57fe5b049350505050610819565b848210610c5e576040805162461bcd60e51b815260206004820152601a60248201527f46756c6c4d6174683a2046554c4c4449565f4f564552464c4f57000000000000604482015290519081900360640190fd5b610791838387610cf0565b60008184841115610cbb5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610b53578181015183820152602001610b3b565b505050900390565b6000808060001984860990508385029250828103915082811015610ce8576001820391505b509250929050565b60008181038216808381610d0057fe5b049250808581610d0c57fe5b049450808160000381610d1b57fe5b60028581038087028203028087028203028087028203028087028203028087028203028087028203029586029003909402930460010193909302939093010292915050565b6040805160208101909152600081529056fe4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206279207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220bc258b3c2d2c4f590789b9db95fef5a8ae5e00f7db3305de7e31106f6682bbff64736f6c63430007050033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xEAF CODESIZE SUB DUP1 PUSH2 0xEAF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x84 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x5A65726F20616464726573733A2045584F PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP2 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDEF PUSH2 0xC0 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x1C2 MSTORE DUP1 PUSH2 0x24E MSTORE DUP1 PUSH2 0x34A MSTORE POP PUSH2 0xDEF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x32DA80A3 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x4249719F EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x490084EF EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x68637549 EQ PUSH2 0xDB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x101 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3EE JUMP JUMPDEST PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x496 JUMP JUMPDEST PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x79C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x153 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xDFE168100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND SWAP7 POP SWAP3 SWAP1 SWAP2 AND SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP4 SWAP1 DUP10 AND SWAP3 PUSH4 0xDFE1681 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x24C JUMPI POP DUP1 PUSH2 0x339 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x336 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420706169720000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP DUP2 JUMPDEST PUSH2 0x3E3 PUSH2 0x345 DUP7 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x3DD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP5 SWAP1 PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0x2 MUL PUSH2 0x7C0 JUMP JUMPDEST SWAP1 PUSH2 0x820 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3FA DUP5 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x48D PUSH8 0xDE0B6B3A7640000 PUSH2 0x3DD PUSH2 0x486 PUSH2 0x481 DUP9 DUP7 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x9E4 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x554 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xD21220A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x651 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x6F7 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xFF AND PUSH2 0x6F1 DUP6 DUP6 PUSH2 0x9FC JUMP JUMPDEST SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x749 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND SWAP4 POP AND SWAP1 POP PUSH2 0x791 PUSH1 0xA DUP5 SWAP1 EXP PUSH2 0x3DD DUP5 DUP5 PUSH2 0x7C0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BA PUSH1 0x2 PUSH2 0x7B4 PUSH2 0x7AF DUP6 PUSH2 0x496 JUMP JUMPDEST PUSH2 0xA98 JUMP JUMPDEST SWAP1 PUSH2 0x7C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x7CF JUMPI POP PUSH1 0x0 PUSH2 0x7BA JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x7DC JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD99 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xB02 JUMP JUMPDEST PUSH2 0x86A PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD73 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x8C3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x7BA JUMP JUMPDEST PUSH18 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x96A JUMPI PUSH1 0x0 DUP3 PUSH1 0x70 DUP6 SWAP1 SHL DUP2 PUSH2 0x8EB JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP2 GT ISZERO PUSH2 0x94A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4669786564506F696E743A3A6672616374696F6E3A206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND DUP2 MSTORE POP SWAP2 POP POP PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x986 DUP5 PUSH15 0x10000000000000000000000000000 DUP6 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP2 GT ISZERO PUSH2 0x94A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4669786564506F696E743A3A6672616374696F6E3A206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST MLOAD PUSH7 0x12725DD1D243AB PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP2 AND DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0xAF4 JUMPI POP DUP1 PUSH1 0x0 PUSH2 0xABC PUSH2 0xAB5 DUP4 PUSH1 0x2 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x9FC JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAEE JUMPI DUP1 SWAP2 POP PUSH2 0xAE7 PUSH2 0xAE0 PUSH2 0xADA DUP6 DUP5 PUSH2 0x820 JUMP JUMPDEST DUP4 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x2 PUSH2 0x820 JUMP JUMPDEST SWAP1 POP PUSH2 0xABF JUMP JUMPDEST POP PUSH2 0x3E9 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x3E9 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB53 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB3B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xB80 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xB9A JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0xBA6 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0xBB3 JUMPI INVALID JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xBCA DUP7 DUP7 PUSH2 0xCC3 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP5 DUP1 PUSH2 0xBD8 JUMPI INVALID JUMPDEST DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x1 DUP3 SUB SWAP2 POP JUMPDEST SWAP2 DUP3 SWAP1 SUB SWAP2 DUP2 PUSH2 0xC0A JUMPI DUP5 DUP4 DUP2 PUSH2 0xBFF JUMPI INVALID JUMPDEST DIV SWAP4 POP POP POP POP PUSH2 0x819 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0xC5E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756C6C4D6174683A2046554C4C4449565F4F564552464C4F57000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x791 DUP4 DUP4 DUP8 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xCBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xB53 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB3B JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP5 DUP7 MULMOD SWAP1 POP DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 SUB SWAP2 POP DUP3 DUP2 LT ISZERO PUSH2 0xCE8 JUMPI PUSH1 0x1 DUP3 SUB SWAP2 POP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SUB DUP3 AND DUP1 DUP4 DUP2 PUSH2 0xD00 JUMPI INVALID JUMPDEST DIV SWAP3 POP DUP1 DUP6 DUP2 PUSH2 0xD0C JUMPI INVALID JUMPDEST DIV SWAP5 POP DUP1 DUP2 PUSH1 0x0 SUB DUP2 PUSH2 0xD1B JUMPI INVALID JUMPDEST PUSH1 0x2 DUP6 DUP2 SUB DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL SWAP6 DUP7 MUL SWAP1 SUB SWAP1 SWAP5 MUL SWAP4 DIV PUSH1 0x1 ADD SWAP4 SWAP1 SWAP4 MUL SWAP4 SWAP1 SWAP4 ADD MUL SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP INVALID CHAINID PUSH10 0x786564506F696E743A3A PUSH7 0x72616374696F6E GASPRICE KECCAK256 PUSH5 0x6976697369 PUSH16 0x6E206279207A65726F536166654D6174 PUSH9 0x3A206D756C7469706C PUSH10 0x636174696F6E206F7665 PUSH19 0x666C6F77A2646970667358221220BC258B3C2D 0x2C 0x4F MSIZE SMOD DUP10 0xB9 0xDB SWAP6 INVALID CREATE2 0xA8 0xAE 0x5E STOP 0xF7 0xDB CALLER SDIV 0xDE PUSH31 0x31106F6682BBFF64736F6C6343000705003300000000000000000000000000 ",
							"sourceMap": "318:1769:10:-:0;;;476:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;476:119:10;-1:-1:-1;;;;;520:18:10;;512:48;;;;;-1:-1:-1;;;512:48:10;;;;;;;;;;;;-1:-1:-1;;;512:48:10;;;;;;;;;;;;;;;570:18;;;;-1:-1:-1;;;;;;570:18:10;;;-1:-1:-1;;;;;318:1769:10;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {
								"1789": [
									{
										"length": 32,
										"start": 450
									},
									{
										"length": 32,
										"start": 590
									},
									{
										"length": 32,
										"start": 842
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806332da80a3146100515780634249719f14610089578063490084ef146100b557806368637549146100db575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b0316610101565b60408051918252519081900360200190f35b6100776004803603604081101561009f57600080fd5b506001600160a01b0381351690602001356103ee565b610077600480360360208110156100cb57600080fd5b50356001600160a01b0316610496565b610077600480360360208110156100f157600080fd5b50356001600160a01b031661079c565b6000806000836001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561013f57600080fd5b505afa158015610153573d6000803e3d6000fd5b505050506040513d606081101561016957600080fd5b508051602091820151604080517f0dfe168100000000000000000000000000000000000000000000000000000000815290516dffffffffffffffffffffffffffff93841696509290911693506000926001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169390891692630dfe1681926004808301939192829003018186803b15801561020a57600080fd5b505afa15801561021e573d6000803e3d6000fd5b505050506040513d602081101561023457600080fd5b50516001600160a01b0316141561024c575080610339565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156102af57600080fd5b505afa1580156102c3573d6000803e3d6000fd5b505050506040513d60208110156102d957600080fd5b50516001600160a01b031614610336576040805162461bcd60e51b815260206004820152600c60248201527f496e76616c696420706169720000000000000000000000000000000000000000604482015290519081900360640190fd5b50815b6103e36103458661079c565b6103dd7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156103a157600080fd5b505afa1580156103b5573d6000803e3d6000fd5b505050506040513d60208110156103cb57600080fd5b5051849060ff16600a0a6002026107c0565b90610820565b93505050505b919050565b6000806103fa8461079c565b90506000846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561043757600080fd5b505afa15801561044b573d6000803e3d6000fd5b505050506040513d602081101561046157600080fd5b5051905061048d670de0b6b3a76400006103dd6104866104818886610862565b6109e4565b85906107c0565b95945050505050565b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156104d257600080fd5b505afa1580156104e6573d6000803e3d6000fd5b505050506040513d60208110156104fc57600080fd5b50516040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b15801561054057600080fd5b505afa158015610554573d6000803e3d6000fd5b505050506040513d602081101561056a57600080fd5b5051604080517fd21220a7000000000000000000000000000000000000000000000000000000008152905160ff90921692506000916001600160a01b0386169163d21220a7916004808301926020929190829003018186803b1580156105cf57600080fd5b505afa1580156105e3573d6000803e3d6000fd5b505050506040513d60208110156105f957600080fd5b50516040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b15801561063d57600080fd5b505afa158015610651573d6000803e3d6000fd5b505050506040513d602081101561066757600080fd5b50516040805163313ce56760e01b8152905160ff90921692506000916106f7916001600160a01b0388169163313ce56791600480820192602092909190829003018186803b1580156106b857600080fd5b505afa1580156106cc573d6000803e3d6000fd5b505050506040513d60208110156106e257600080fd5b505160ff166106f185856109fc565b90610a56565b9050600080866001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561073557600080fd5b505afa158015610749573d6000803e3d6000fd5b505050506040513d606081101561075f57600080fd5b5080516020909101516dffffffffffffffffffffffffffff9182169350169050610791600a84900a6103dd84846107c0565b979650505050505050565b60006107ba60026107b46107af85610496565b610a98565b906107c0565b92915050565b6000826107cf575060006107ba565b828202828482816107dc57fe5b04146108195760405162461bcd60e51b8152600401808060200182810382526021815260200180610d996021913960400191505060405180910390fd5b9392505050565b600061081983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610b02565b61086a610d60565b600082116108a95760405162461bcd60e51b8152600401808060200182810382526026815260200180610d736026913960400191505060405180910390fd5b826108c357506040805160208101909152600081526107ba565b71ffffffffffffffffffffffffffffffffffff831161096a57600082607085901b816108eb57fe5b0490506001600160e01b0381111561094a576040805162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604482015290519081900360640190fd5b6040518060200160405280826001600160e01b03168152509150506107ba565b6000610986846e01000000000000000000000000000085610bbb565b90506001600160e01b0381111561094a576040805162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604482015290519081900360640190fd5b516612725dd1d243ab6001600160e01b039091160490565b600082820183811015610819576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061081983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610c69565b60006003821115610af45750806000610abc610ab5836002610820565b60016109fc565b90505b81811015610aee57809150610ae7610ae0610ada8584610820565b836109fc565b6002610820565b9050610abf565b506103e9565b81156103e957506001919050565b60008183610b8e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b53578181015183820152602001610b3b565b50505050905090810190601f168015610b805780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610b9a57fe5b049050838581610ba657fe5b06818502018514610bb357fe5b949350505050565b6000806000610bca8686610cc3565b9150915060008480610bd857fe5b868809905082811115610bec576001820391505b918290039181610c0a57848381610bff57fe5b049350505050610819565b848210610c5e576040805162461bcd60e51b815260206004820152601a60248201527f46756c6c4d6174683a2046554c4c4449565f4f564552464c4f57000000000000604482015290519081900360640190fd5b610791838387610cf0565b60008184841115610cbb5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610b53578181015183820152602001610b3b565b505050900390565b6000808060001984860990508385029250828103915082811015610ce8576001820391505b509250929050565b60008181038216808381610d0057fe5b049250808581610d0c57fe5b049450808160000381610d1b57fe5b60028581038087028203028087028203028087028203028087028203028087028203028087028203029586029003909402930460010193909302939093010292915050565b6040805160208101909152600081529056fe4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206279207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220bc258b3c2d2c4f590789b9db95fef5a8ae5e00f7db3305de7e31106f6682bbff64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x32DA80A3 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x4249719F EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x490084EF EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x68637549 EQ PUSH2 0xDB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x101 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3EE JUMP JUMPDEST PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x496 JUMP JUMPDEST PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x79C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x153 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xDFE168100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND SWAP7 POP SWAP3 SWAP1 SWAP2 AND SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP4 SWAP1 DUP10 AND SWAP3 PUSH4 0xDFE1681 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x24C JUMPI POP DUP1 PUSH2 0x339 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x336 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420706169720000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP DUP2 JUMPDEST PUSH2 0x3E3 PUSH2 0x345 DUP7 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x3DD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP5 SWAP1 PUSH1 0xFF AND PUSH1 0xA EXP PUSH1 0x2 MUL PUSH2 0x7C0 JUMP JUMPDEST SWAP1 PUSH2 0x820 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3FA DUP5 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x48D PUSH8 0xDE0B6B3A7640000 PUSH2 0x3DD PUSH2 0x486 PUSH2 0x481 DUP9 DUP7 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x9E4 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x554 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xD21220A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x651 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x6F7 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xFF AND PUSH2 0x6F1 DUP6 DUP6 PUSH2 0x9FC JUMP JUMPDEST SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x749 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND SWAP4 POP AND SWAP1 POP PUSH2 0x791 PUSH1 0xA DUP5 SWAP1 EXP PUSH2 0x3DD DUP5 DUP5 PUSH2 0x7C0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BA PUSH1 0x2 PUSH2 0x7B4 PUSH2 0x7AF DUP6 PUSH2 0x496 JUMP JUMPDEST PUSH2 0xA98 JUMP JUMPDEST SWAP1 PUSH2 0x7C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x7CF JUMPI POP PUSH1 0x0 PUSH2 0x7BA JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x7DC JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD99 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xB02 JUMP JUMPDEST PUSH2 0x86A PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD73 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x8C3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x7BA JUMP JUMPDEST PUSH18 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x96A JUMPI PUSH1 0x0 DUP3 PUSH1 0x70 DUP6 SWAP1 SHL DUP2 PUSH2 0x8EB JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP2 GT ISZERO PUSH2 0x94A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4669786564506F696E743A3A6672616374696F6E3A206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND DUP2 MSTORE POP SWAP2 POP POP PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x986 DUP5 PUSH15 0x10000000000000000000000000000 DUP6 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP2 GT ISZERO PUSH2 0x94A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4669786564506F696E743A3A6672616374696F6E3A206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST MLOAD PUSH7 0x12725DD1D243AB PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP2 AND DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0xAF4 JUMPI POP DUP1 PUSH1 0x0 PUSH2 0xABC PUSH2 0xAB5 DUP4 PUSH1 0x2 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x9FC JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAEE JUMPI DUP1 SWAP2 POP PUSH2 0xAE7 PUSH2 0xAE0 PUSH2 0xADA DUP6 DUP5 PUSH2 0x820 JUMP JUMPDEST DUP4 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x2 PUSH2 0x820 JUMP JUMPDEST SWAP1 POP PUSH2 0xABF JUMP JUMPDEST POP PUSH2 0x3E9 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x3E9 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB53 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB3B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xB80 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xB9A JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0xBA6 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0xBB3 JUMPI INVALID JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xBCA DUP7 DUP7 PUSH2 0xCC3 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP5 DUP1 PUSH2 0xBD8 JUMPI INVALID JUMPDEST DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x1 DUP3 SUB SWAP2 POP JUMPDEST SWAP2 DUP3 SWAP1 SUB SWAP2 DUP2 PUSH2 0xC0A JUMPI DUP5 DUP4 DUP2 PUSH2 0xBFF JUMPI INVALID JUMPDEST DIV SWAP4 POP POP POP POP PUSH2 0x819 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0xC5E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756C6C4D6174683A2046554C4C4449565F4F564552464C4F57000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x791 DUP4 DUP4 DUP8 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xCBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xB53 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB3B JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP5 DUP7 MULMOD SWAP1 POP DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 SUB SWAP2 POP DUP3 DUP2 LT ISZERO PUSH2 0xCE8 JUMPI PUSH1 0x1 DUP3 SUB SWAP2 POP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SUB DUP3 AND DUP1 DUP4 DUP2 PUSH2 0xD00 JUMPI INVALID JUMPDEST DIV SWAP3 POP DUP1 DUP6 DUP2 PUSH2 0xD0C JUMPI INVALID JUMPDEST DIV SWAP5 POP DUP1 DUP2 PUSH1 0x0 SUB DUP2 PUSH2 0xD1B JUMPI INVALID JUMPDEST PUSH1 0x2 DUP6 DUP2 SUB DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL DUP1 DUP8 MUL DUP3 SUB MUL SWAP6 DUP7 MUL SWAP1 SUB SWAP1 SWAP5 MUL SWAP4 DIV PUSH1 0x1 ADD SWAP4 SWAP1 SWAP4 MUL SWAP4 SWAP1 SWAP4 ADD MUL SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP INVALID CHAINID PUSH10 0x786564506F696E743A3A PUSH7 0x72616374696F6E GASPRICE KECCAK256 PUSH5 0x6976697369 PUSH16 0x6E206279207A65726F536166654D6174 PUSH9 0x3A206D756C7469706C PUSH10 0x636174696F6E206F7665 PUSH19 0x666C6F77A2646970667358221220BC258B3C2D 0x2C 0x4F MSIZE SMOD DUP10 0xB9 0xDB SWAP6 INVALID CREATE2 0xA8 0xAE 0x5E STOP 0xF7 0xDB CALLER SDIV 0xDE PUSH31 0x31106F6682BBFF64736F6C6343000705003300000000000000000000000000 ",
							"sourceMap": "318:1769:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1549:536;;;;;;;;;;;;;;;;-1:-1:-1;1549:536:10;-1:-1:-1;;;;;1549:536:10;;:::i;:::-;;;;;;;;;;;;;;;;1214:329;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1214:329:10;;;;;;;;:::i;601:469::-;;;;;;;;;;;;;;;;-1:-1:-1;601:469:10;-1:-1:-1;;;;;601:469:10;;:::i;1076:132::-;;;;;;;;;;;;;;;;-1:-1:-1;1076:132:10;-1:-1:-1;;;;;1076:132:10;;:::i;1549:536::-;1614:7;1634:16;1652;1689:5;-1:-1:-1;;;;;1674:33:10;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1674:35:10;;;;;;;;1749:30;;;;;;;1633:76;;;;;-1:-1:-1;1633:76:10;;;;;-1:-1:-1;1720:15:10;;-1:-1:-1;;;;;1791:3:10;1749:46;;;:28;;;;;;:30;;;;;1674:35;;1749:30;;;;;:28;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1749:30:10;-1:-1:-1;;;;;1749:46:10;;1745:229;;;-1:-1:-1;1821:8:10;1745:229;;;1910:3;-1:-1:-1;;;;;1868:46:10;1883:5;-1:-1:-1;;;;;1868:28:10;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1868:30:10;-1:-1:-1;;;;;1868:46:10;;1860:71;;;;;-1:-1:-1;;;1860:71:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1955:8:10;1745:229;1990:88;2057:20;2071:5;2057:13;:20::i;:::-;1990:62;2034:3;-1:-1:-1;;;;;2011:37:10;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2011:39:10;1990:7;;2007:43;;:2;:43;2002:1;:49;1990:11;:62::i;:::-;:66;;:88::i;:::-;1983:95;;;;;1549:536;;;;:::o;1214:329::-;1297:14;1323:18;1344:20;1358:5;1344:13;:20::i;:::-;1323:41;;1374:19;1411:5;-1:-1:-1;;;;;1396:33:10;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1396:35:10;;-1:-1:-1;1451:85:10;1531:4;1451:75;1466:59;:41;1486:7;1396:35;1466:19;:41::i;:::-;:57;:59::i;:::-;1451:10;;:14;:75::i;:85::-;1442:94;1214:329;-1:-1:-1;;;;;1214:329:10:o;601:469::-;656:10;678:14;725:5;-1:-1:-1;;;;;710:28:10;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;710:30:10;695:57;;;-1:-1:-1;;;695:57:10;;;;-1:-1:-1;;;;;695:55:10;;;;;;:57;;;;;710:30;;695:57;;;;;;;;:55;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;695:57:10;794:30;;;;;;;;678:74;;;;;-1:-1:-1;762:14:10;;-1:-1:-1;;;;;794:28:10;;;;;:30;;;;;695:57;;794:30;;;;;;;:28;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:30:10;779:57;;;-1:-1:-1;;;779:57:10;;;;-1:-1:-1;;;;;779:55:10;;;;;;:57;;;;;794:30;;779:57;;;;;;;;:55;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;779:57:10;888:32;;;-1:-1:-1;;;888:32:10;;;;762:74;;;;;-1:-1:-1;846:16:10;;865:56;;-1:-1:-1;;;;;888:30:10;;;;;:32;;;;;779:57;;888:32;;;;;;;;:30;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;888:32:10;865:56;;:18;:6;876;865:10;:18::i;:::-;:22;;:56::i;:::-;846:75;;933:16;951;988:5;-1:-1:-1;;;;;973:33:10;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;973:35:10;;;;;;;932:76;;;;;-1:-1:-1;932:76:10;;-1:-1:-1;1023:40:10;1050:2;:12;;;1023:22;932:76;;1023:12;:22::i;:40::-;1018:45;601:469;-1:-1:-1;;;;;;;601:469:10:o;1076:132::-;1135:14;1170:31;1199:1;1170:24;:16;1180:5;1170:9;:16::i;:::-;:22;:24::i;:::-;:28;;:31::i;:::-;1161:40;1076:132;-1:-1:-1;;1076:132:10:o;700:241:9:-;758:7;781:6;777:45;;-1:-1:-1;810:1:9;803:8;;777:45;844:5;;;848:1;844;:5;:1;867:5;;;;;:10;859:56;;;;-1:-1:-1;;;859:56:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:1;700:241;-1:-1:-1;;;700:241:9:o;947:130::-;1005:7;1031:39;1035:1;1038;1031:39;;;;;;;;;;;;;;;;;:3;:39::i;2683:706:1:-;2764:16;;:::i;:::-;2814:1;2800:11;:15;2792:66;;;;-1:-1:-1;;;2792:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2872:14;2868:50;;-1:-1:-1;2895:23:1;;;;;;;;;-1:-1:-1;2895:23:1;;2888:30;;2868:50;2933:24;;;2929:454;;2973:14;3018:11;2118:3;2991:23;;;3018:11;2990:39;;;;;;-1:-1:-1;;;;;;3051:21:1;;;3043:64;;;;;-1:-1:-1;;;3043:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;3128:26;;;;;;;;3146:6;-1:-1:-1;;;;;3128:26:1;;;;3121:33;;;;;2929:454;3185:14;3202:45;3218:9;2159:31;3235:11;3202:15;:45::i;:::-;3185:62;-1:-1:-1;;;;;;3269:21:1;;;3261:64;;;;;-1:-1:-1;;;3261:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;2538:139;2643:7;2654:16;-1:-1:-1;;;;;2635:16:1;;;:35;;2538:139::o;155:176:9:-;213:7;244:5;;;267:6;;;;259:46;;;;;-1:-1:-1;;;259:46:9;;;;;;;;;;;;;;;;;;;;;;;;;;;337:134;395:7;421:43;425:1;428;421:43;;;;;;;;;;;;;;;;;:3;:43::i;1437:320::-;1486:9;1515:1;1511;:5;1507:244;;;-1:-1:-1;1536:1:9;1551:9;1563:17;1567:9;1536:1;1574;1567:3;:9::i;:::-;1578:1;1563:3;:17::i;:::-;1551:29;;1594:99;1605:1;1601;:5;1594:99;;;1630:1;1626:5;;1653:25;1657:17;1661:9;1665:1;1668;1661:3;:9::i;:::-;1672:1;1657:3;:17::i;:::-;1676:1;1653:3;:25::i;:::-;1649:29;;1594:99;;;1507:244;;;;1713:6;;1709:42;;-1:-1:-1;1739:1:9;1437:320;;;:::o;1083:301::-;1199:7;1233:12;1226:5;1218:28;;;;-1:-1:-1;;;1218:28:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1256:9;1272:1;1268;:5;;;;;;1256:17;;1308:1;1304;:5;;;;;;1299:1;1295;:5;:15;1290:1;:20;1283:28;;;;1376:1;1083:301;-1:-1:-1;;;;1083:301:9:o;765:373:2:-;867:7;887:9;898;911:13;919:1;922;911:7;:13::i;:::-;886:38;;;;935:10;961:1;948:15;;;;;958:1;955;948:15;935:28;;982:1;977:2;:6;973:18;;;990:1;985:6;;;;973:18;1001:7;;;;;1023:6;1019:24;;1042:1;1038;:5;;;;;;1031:12;;;;;;;1019:24;1066:1;1062;:5;1054:44;;;;;-1:-1:-1;;;1054:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1115:16;1123:1;1126;1129;1115:7;:16::i;477:217:9:-;593:7;628:12;620:6;;;;612:29;;;;-1:-1:-1;;;612:29:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;663:5:9;;;477:217::o;85:205:2:-;146:9;;;-1:-1:-1;;201:1:2;198;191:25;178:38;;234:1;230;:5;226:9;;254:1;249:2;:6;245:10;;274:1;269:2;:6;265:18;;;282:1;277:6;;;;265:18;85:205;;;;;;:::o;296:463::-;398:7;436:2;;;432:6;;;437:1;432:6;448:9;;;;;;;472:4;467:9;;;;;;;;;506:4;498;497:5;;496:14;;;;;553:1;:9;;;581:5;;;577:9;;572:14;605:5;;;601:9;;596:14;629:5;;;625:9;;620:14;653:5;;;649:9;;644:14;677:5;;;673:9;;668:14;701:5;;;697:9;;692:14;725:5;;;721:9;;716:14;;;496;;513:1;496:18;491:24;;;;486:29;;;;747:5;;296:463;-1:-1:-1;;296:463:2:o;-1:-1:-1:-;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "713400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getKValue(address)": "infinite",
								"getTotalValue(address)": "infinite",
								"markdown(address)": "infinite",
								"valuation(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 318,
									"end": 2087,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 318,
									"end": 2087,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 318,
									"end": 2087,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 476,
									"end": 595,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 595,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 476,
									"end": 595,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 476,
									"end": 595,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 476,
									"end": 595,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 476,
									"end": 595,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 476,
									"end": 595,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 595,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 476,
									"end": 595,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 476,
									"end": 595,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 476,
									"end": 595,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 520,
									"end": 538,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 520,
									"end": 538,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 512,
									"end": 560,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 512,
									"end": 560,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 512,
									"end": 560,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 512,
									"end": 560,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 512,
									"end": 560,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 512,
									"end": 560,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 512,
									"end": 560,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5A65726F20616464726573733A2045584F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "78"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 512,
									"end": 560,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 512,
									"end": 560,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 512,
									"end": 560,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 512,
									"end": 560,
									"name": "tag",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 512,
									"end": 560,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 570,
									"end": 588,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 570,
									"end": 588,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 570,
									"end": 588,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 570,
									"end": 588,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 570,
									"end": 588,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 570,
									"end": 588,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 570,
									"end": 588,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 318,
									"end": 2087,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 318,
									"end": 2087,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 318,
									"end": 2087,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 318,
									"end": 2087,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 2087,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 318,
									"end": 2087,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "1789"
								},
								{
									"begin": 318,
									"end": 2087,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 318,
									"end": 2087,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 2087,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc258b3c2d2c4f590789b9db95fef5a8ae5e00f7db3305de7e31106f6682bbff64736f6c63430007050033",
									".code": [
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH",
											"source": 10,
											"value": "32DA80A3"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH",
											"source": 10,
											"value": "4249719F"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH",
											"source": 10,
											"value": "490084EF"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH",
											"source": 10,
											"value": "68637549"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 318,
											"end": 2087,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1614,
											"end": 1621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1650,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1652,
											"end": 1668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1694,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1674,
											"end": 1707,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1707,
											"name": "PUSH",
											"source": 10,
											"value": "902F1AC"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "PUSH",
											"source": 10,
											"value": "DFE168100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1709,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1633,
											"end": 1709,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1709,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1709,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1709,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1633,
											"end": 1709,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1709,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1709,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1709,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1720,
											"end": 1735,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1735,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1791,
											"end": 1794,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1789"
										},
										{
											"begin": 1749,
											"end": 1795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1795,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1795,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1777,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1777,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1777,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1777,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1777,
											"name": "PUSH",
											"source": 10,
											"value": "DFE1681"
										},
										{
											"begin": 1749,
											"end": 1777,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1777,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1749,
											"end": 1779,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1749,
											"end": 1795,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1795,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1974,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1745,
											"end": 1974,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1821,
											"end": 1829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1745,
											"end": 1974,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1974,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1745,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 1913,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1789"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1868,
											"end": 1914,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1883,
											"end": 1888,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1896,
											"name": "PUSH",
											"source": 10,
											"value": "D21220A7"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1868,
											"end": 1898,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1868,
											"end": 1914,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1914,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420706169720000000000000000000000000000000000000000"
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1860,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1955,
											"end": 1963,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1974,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1745,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 2057,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 2071,
											"end": 2076,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2057,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2057,
											"end": 2077,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2057,
											"end": 2077,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 2057,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2034,
											"end": 2037,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1789"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2048,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2048,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2050,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2007,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2007,
											"end": 2050,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2007,
											"end": 2009,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 2007,
											"end": 2050,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2003,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2002,
											"end": 2051,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1990,
											"end": 2052,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2052,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1990,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1990,
											"end": 2078,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2078,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 1990,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2078,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2085,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1297,
											"end": 1311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1344,
											"end": 1364,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1344,
											"end": 1364,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1344,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 1416,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1429,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1429,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1451,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1535,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1451,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1466,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1466,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1486,
											"end": 1493,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1466,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1466,
											"end": 1507,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1466,
											"end": 1507,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1466,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1466,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1466,
											"end": 1525,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1466,
											"end": 1525,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1466,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1461,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1461,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1451,
											"end": 1526,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1451,
											"end": 1536,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1451,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1536,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1214,
											"end": 1543,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 656,
											"end": 666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 692,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 725,
											"end": 730,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 710,
											"end": 738,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 710,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "DFE1681"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 710,
											"end": 740,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 695,
											"end": 752,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 695,
											"end": 750,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 695,
											"end": 750,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 695,
											"end": 750,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 695,
											"end": 750,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 695,
											"end": 750,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 695,
											"end": 750,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 710,
											"end": 740,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 740,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 695,
											"end": 750,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 695,
											"end": 752,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "PUSH",
											"source": 10,
											"value": "D21220A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 678,
											"end": 752,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 678,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 678,
											"end": 752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 678,
											"end": 752,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 678,
											"end": 752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 762,
											"end": 776,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 776,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 794,
											"end": 822,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 794,
											"end": 822,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 794,
											"end": 822,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 794,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "D21220A7"
										},
										{
											"begin": 794,
											"end": 822,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 695,
											"end": 752,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 794,
											"end": 822,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 824,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 779,
											"end": 836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 779,
											"end": 834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 834,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 779,
											"end": 834,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 779,
											"end": 834,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 779,
											"end": 834,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 779,
											"end": 834,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 794,
											"end": 824,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 794,
											"end": 824,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 779,
											"end": 834,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 779,
											"end": 836,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 762,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 762,
											"end": 836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 762,
											"end": 836,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 762,
											"end": 836,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 762,
											"end": 836,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 846,
											"end": 862,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 862,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 865,
											"end": 921,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 888,
											"end": 918,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 888,
											"end": 918,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 888,
											"end": 918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 888,
											"end": 918,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 888,
											"end": 918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 779,
											"end": 836,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 779,
											"end": 836,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 888,
											"end": 918,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 888,
											"end": 920,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 888,
											"end": 920,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 921,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 865,
											"end": 921,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 865,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 876,
											"end": 882,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 865,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 865,
											"end": 883,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 865,
											"end": 883,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 865,
											"end": 883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 865,
											"end": 887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 865,
											"end": 921,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 865,
											"end": 921,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 865,
											"end": 921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 846,
											"end": 921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 846,
											"end": 921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 933,
											"end": 949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 967,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 988,
											"end": 993,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "PUSH",
											"source": 10,
											"value": "902F1AC"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1008,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 932,
											"end": 1008,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1008,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1008,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1008,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 932,
											"end": 1008,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1008,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1023,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1050,
											"end": 1052,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1023,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 932,
											"end": 1008,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1008,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1023,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1023,
											"end": 1045,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1023,
											"end": 1063,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1023,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1018,
											"end": 1063,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 601,
											"end": 1070,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1135,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1199,
											"end": 1200,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1170,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1170,
											"end": 1186,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1170,
											"end": 1186,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1170,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1170,
											"end": 1198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1170,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1170,
											"end": 1201,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1170,
											"end": 1201,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1170,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1201,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1076,
											"end": 1208,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 700,
											"end": 941,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 700,
											"end": 941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 777,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 777,
											"end": 822,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 803,
											"end": 811,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 777,
											"end": 822,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 777,
											"end": 822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 844,
											"end": 849,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 844,
											"end": 845,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 844,
											"end": 845,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 867,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 867,
											"end": 872,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 867,
											"end": 872,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 867,
											"end": 872,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 867,
											"end": 872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 867,
											"end": 872,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 867,
											"end": 877,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH data",
											"source": 9,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "CODECOPY",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 859,
											"end": 915,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 859,
											"end": 915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 933,
											"end": 934,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 700,
											"end": 941,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 700,
											"end": 941,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 947,
											"end": 1077,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 947,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1005,
											"end": 1012,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1035,
											"end": 1036,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1038,
											"end": 1039,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "PUSH",
											"source": 9,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1031,
											"end": 1070,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2683,
											"end": 3389,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2683,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2764,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2764,
											"end": 2780,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2764,
											"end": 2780,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2764,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2800,
											"end": 2815,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "PUSH data",
											"source": 1,
											"value": "5E8A6C8DFACD0A41F2501735D8EE26D996B9E7E81FF5467DFDFD11A3728A15E7"
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2792,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2868,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2868,
											"end": 2918,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2888,
											"end": 2918,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2868,
											"end": 2918,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2868,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2929,
											"end": 3383,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 2987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2991,
											"end": 3014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3014,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3018,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2990,
											"end": 3029,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3029,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3029,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2990,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3029,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3051,
											"end": 3072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3072,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "PUSH",
											"source": 1,
											"value": "4669786564506F696E743A3A6672616374696F6E3A206F766572666C6F770000"
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3043,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3128,
											"end": 3154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3154,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3128,
											"end": 3154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3128,
											"end": 3154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3128,
											"end": 3154,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3383,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2929,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3218,
											"end": 3227,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000000000000000000000"
										},
										{
											"begin": 3235,
											"end": 3246,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3202,
											"end": 3247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3202,
											"end": 3247,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3202,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3269,
											"end": 3290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3290,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3290,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "4669786564506F696E743A3A6672616374696F6E3A206F766572666C6F770000"
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3325,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2677,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2538,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2670,
											"name": "PUSH",
											"source": 1,
											"value": "12725DD1D243AB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2635,
											"end": 2651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2651,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2670,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2677,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 155,
											"end": 331,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 155,
											"end": 331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 213,
											"end": 220,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 249,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 244,
											"end": 249,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 244,
											"end": 249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 267,
											"end": 273,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 267,
											"end": 273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 267,
											"end": 273,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 267,
											"end": 273,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 9,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 259,
											"end": 305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 259,
											"end": 305,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 337,
											"end": 471,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 337,
											"end": 471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 395,
											"end": 402,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 425,
											"end": 426,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 429,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 421,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 421,
											"end": 464,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 421,
											"end": 464,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1437,
											"end": 1757,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1437,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1486,
											"end": 1495,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1511,
											"end": 1512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1511,
											"end": 1516,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1507,
											"end": 1751,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1507,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1507,
											"end": 1751,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1567,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1567,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1567,
											"end": 1576,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1567,
											"end": 1576,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1567,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1563,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1563,
											"end": 1580,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1563,
											"end": 1580,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1563,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1551,
											"end": 1580,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1551,
											"end": 1580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1594,
											"end": 1693,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1594,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1602,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1594,
											"end": 1693,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1594,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1594,
											"end": 1693,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 1631,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1626,
											"end": 1631,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1626,
											"end": 1631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1657,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1665,
											"end": 1666,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1669,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1672,
											"end": 1673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1657,
											"end": 1674,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1657,
											"end": 1674,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1657,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1677,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1653,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1649,
											"end": 1678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1649,
											"end": 1678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1594,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1594,
											"end": 1693,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1594,
											"end": 1693,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1594,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1507,
											"end": 1751,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1507,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1507,
											"end": 1751,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1507,
											"end": 1751,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1507,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1719,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1719,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1709,
											"end": 1751,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1739,
											"end": 1740,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1437,
											"end": 1757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1757,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1199,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1245,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1256,
											"end": 1273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1256,
											"end": 1273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 1299,
											"end": 1300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1295,
											"end": 1310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1310,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 1283,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1083,
											"end": 1384,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 765,
											"end": 1138,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 765,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 867,
											"end": 874,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 896,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 898,
											"end": 907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 919,
											"end": 920,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 922,
											"end": 923,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 911,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 911,
											"end": 924,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 924,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 911,
											"end": 924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 935,
											"end": 945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 962,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 948,
											"end": 963,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 948,
											"end": 963,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 948,
											"end": 963,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 948,
											"end": 963,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 948,
											"end": 963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 958,
											"end": 959,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 955,
											"end": 956,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 948,
											"end": 963,
											"name": "MULMOD",
											"source": 2
										},
										{
											"begin": 935,
											"end": 963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 935,
											"end": 963,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 982,
											"end": 983,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 977,
											"end": 979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 977,
											"end": 983,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 973,
											"end": 991,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 973,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 973,
											"end": 991,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 990,
											"end": 991,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 991,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 973,
											"end": 991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1019,
											"end": 1043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1039,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1038,
											"end": 1043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1043,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1043,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1038,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1043,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1031,
											"end": 1043,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1043,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1019,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1066,
											"end": 1067,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "PUSH",
											"source": 2,
											"value": "46756C6C4D6174683A2046554C4C4449565F4F564552464C4F57000000000000"
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1054,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1130,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1115,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 477,
											"end": 694,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 477,
											"end": 694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 593,
											"end": 600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 640,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 620,
											"end": 626,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 620,
											"end": 626,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 612,
											"end": 641,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 612,
											"end": 641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 477,
											"end": 694,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 85,
											"end": 290,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 85,
											"end": 290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 146,
											"end": 155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 155,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 155,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 201,
											"end": 202,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 191,
											"end": 216,
											"name": "MULMOD",
											"source": 2
										},
										{
											"begin": 178,
											"end": 216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 178,
											"end": 216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 234,
											"end": 235,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 230,
											"end": 231,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 230,
											"end": 235,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 226,
											"end": 235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 226,
											"end": 235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 254,
											"end": 255,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 249,
											"end": 251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 249,
											"end": 255,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 245,
											"end": 255,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 245,
											"end": 255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 269,
											"end": 271,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 269,
											"end": 275,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 265,
											"end": 283,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 265,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 282,
											"end": 283,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 277,
											"end": 283,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 277,
											"end": 283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 277,
											"end": 283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 277,
											"end": 283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 265,
											"end": 283,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 85,
											"end": 290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 85,
											"end": 290,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 85,
											"end": 290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 85,
											"end": 290,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 85,
											"end": 290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 85,
											"end": 290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 85,
											"end": 290,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 296,
											"end": 759,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 296,
											"end": 759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 398,
											"end": 405,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 436,
											"end": 438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 436,
											"end": 438,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 432,
											"end": 438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 432,
											"end": 438,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 432,
											"end": 438,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 438,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 432,
											"end": 438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 448,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 448,
											"end": 457,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 448,
											"end": 457,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 448,
											"end": 457,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 448,
											"end": 457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 448,
											"end": 457,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 448,
											"end": 457,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 448,
											"end": 457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 472,
											"end": 476,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 467,
											"end": 476,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 467,
											"end": 476,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 467,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 467,
											"end": 476,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 467,
											"end": 476,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 467,
											"end": 476,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 467,
											"end": 476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 467,
											"end": 476,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 467,
											"end": 476,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 467,
											"end": 476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 506,
											"end": 510,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 498,
											"end": 502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 496,
											"end": 510,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 496,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 496,
											"end": 510,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 496,
											"end": 510,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 496,
											"end": 510,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 496,
											"end": 510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 553,
											"end": 554,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 553,
											"end": 562,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 553,
											"end": 562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 553,
											"end": 562,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 581,
											"end": 586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 581,
											"end": 586,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 581,
											"end": 586,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 577,
											"end": 586,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 577,
											"end": 586,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 572,
											"end": 586,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 605,
											"end": 610,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 605,
											"end": 610,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 605,
											"end": 610,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 601,
											"end": 610,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 601,
											"end": 610,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 596,
											"end": 610,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 629,
											"end": 634,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 625,
											"end": 634,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 625,
											"end": 634,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 620,
											"end": 634,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 653,
											"end": 658,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 653,
											"end": 658,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 653,
											"end": 658,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 649,
											"end": 658,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 649,
											"end": 658,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 644,
											"end": 658,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 677,
											"end": 682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 677,
											"end": 682,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 677,
											"end": 682,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 673,
											"end": 682,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 673,
											"end": 682,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 668,
											"end": 682,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 701,
											"end": 706,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 701,
											"end": 706,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 701,
											"end": 706,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 697,
											"end": 706,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 697,
											"end": 706,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 692,
											"end": 706,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 725,
											"end": 730,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 725,
											"end": 730,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 725,
											"end": 730,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 721,
											"end": 730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 721,
											"end": 730,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 716,
											"end": 730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 716,
											"end": 730,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 716,
											"end": 730,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 496,
											"end": 510,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 496,
											"end": 510,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 513,
											"end": 514,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 496,
											"end": 514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 491,
											"end": 515,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 486,
											"end": 515,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 486,
											"end": 515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 486,
											"end": 515,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 486,
											"end": 515,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 747,
											"end": 752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 747,
											"end": 752,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 296,
											"end": 759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 296,
											"end": 759,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"5E8A6C8DFACD0A41F2501735D8EE26D996B9E7E81FF5467DFDFD11A3728A15E7": "4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206279207a65726f",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"getKValue(address)": "490084ef",
							"getTotalValue(address)": "68637549",
							"markdown(address)": "32da80a3",
							"valuation(address,uint256)": "4249719f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_EXO\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"}],\"name\":\"getKValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"k_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"}],\"name\":\"getTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"}],\"name\":\"markdown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"valuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExodusBondingCalculator/StandardBondingCalculator.sol\":\"ExodusBondingCalculator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExodusBondingCalculator/Address.sol\":{\"keccak256\":\"0xc2d8595504a985f53a5db9e6220ae614a7f8b4c5c1d35f55b07e08a21e40b2b9\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1b8104a932321f4f8a89ca5265b7bca5fe9f5e51ccec01470931e5014be87fc9\",\"dweb:/ipfs/Qmb2ta7fADrRuXqjot4reKg63brweMH6jWocx534huYtCc\"]},\"ExodusBondingCalculator/FixedPoint.sol\":{\"keccak256\":\"0xd0cfb115e614660af05269fa70be389fbe6c7f69e33fd34da466c0471ce95387\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1a46ca090d1cb7263e141d2c5cde7bc6e13584cf51866373c9e054549c06595a\",\"dweb:/ipfs/QmcKLxhFkSR3WmvJsYbeamCU12hkM84dgrCJKJtYazZPBk\"]},\"ExodusBondingCalculator/FullMath.sol\":{\"keccak256\":\"0x4fce1c6e69dcd9e555dcacea6d1fa8966f0fbb3488730c30d51ef7e81490c2dc\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c4d14ecfacac1b39423c4a4ec1ed7f72179312ee07323c7cdade3614336aba29\",\"dweb:/ipfs/Qmf81MpDird8N7BSSnXhdVrut7mrMjJAMuKQ3FQy9Zoyqw\"]},\"ExodusBondingCalculator/IBondingCalculator.sol\":{\"keccak256\":\"0x5176ee1c1f51e3dfa75d298783c4927b5c5ff2ffb5b6e3bb99bdbf7664501461\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1781ec88e9fa7df2ab07992c23416217e5a8580155016fc1daee7acdb1727ecf\",\"dweb:/ipfs/QmeFpk4uAuJLTtYYDXGwC8b4mmpv3JxCqrBAZrToztoEgx\"]},\"ExodusBondingCalculator/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"ExodusBondingCalculator/IERC20Metadata.sol\":{\"keccak256\":\"0x9690aab5d4ff226e2618763ca0eb46853234aba1582ba0392c2cdcb2b3c7274c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8b60dbe1980b77c76355fb44acc0365a3bf783d3a9223eee04a96da9359038ab\",\"dweb:/ipfs/QmPMw8EZhb5VAJhNjVeTpVQK2nu26DtMtGBZdfd1oFKNML\"]},\"ExodusBondingCalculator/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x4f478f401acdbca66defa898ac651c4cff4de9bf46a8b71e4878e44ce0142f4c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://ca2cef96f821b67243e57eb885834c722becc86f09ea67153788a8babc4db298\",\"dweb:/ipfs/QmQJdN7NCM3WpuhdN3DMz4e2KEtzffDJpmHKs6uvW7F6Lw\"]},\"ExodusBondingCalculator/IUniswapV2Pair.sol\":{\"keccak256\":\"0x41c8bfb3949d62e48feb74a499cb88c7d3e4b94c7f15eabbe0afb884ded9438d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1e2ee0449a8cbd5e0282663a23deeb6dbe47e91fd1a246776e67ece15cb105be\",\"dweb:/ipfs/QmSwDaFmgDCSmniwsTac54XCjNyAynMrE45dj9tEZ4J4s9\"]},\"ExodusBondingCalculator/SafeERC20.sol\":{\"keccak256\":\"0x873d82e1f38006c425bcb544d8cca59114ca252f64457e2cc3376ef9a68f2c8e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://de509f28376467145aff3d45a974708c22838fb21c13f036a79d55d7b389078b\",\"dweb:/ipfs/QmTVAVLp2cgCV3MHnFv1YJbH4eYW4xtayLvpmZR5t8CGYc\"]},\"ExodusBondingCalculator/SafeMath.sol\":{\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e6a53bcf01804ba55befe28b960f5fb83d677b408a6923181987259cbd0257d9\",\"dweb:/ipfs/QmQFd3E8cQGcHLN8uaX9cQcVsrgEikNEHCGee1iXJ1BXfd\"]},\"ExodusBondingCalculator/StandardBondingCalculator.sol\":{\"keccak256\":\"0x3232c5565722e7891b4bf3e5e7da719f752d5b4cb3b3ac89bed349c0bf65a71d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://aeb5fbb2f9e6198e60e9d7770de9b3ab67f5d354f2c5152ddc1b396697f1277d\",\"dweb:/ipfs/QmTZpg8vsM5DxApTJQTFuEa3995GuR8LpBpt2VzZpPsLt8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ExodusBondingCalculator/Address.sol": {
				"ast": {
					"absolutePath": "ExodusBondingCalculator/Address.sol",
					"exportedSymbols": {
						"Address": [
							344
						]
					},
					"id": 345,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 344,
							"linearizedBaseContracts": [
								344
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "766:367:0",
										"statements": [
											{
												"assignments": [
													10
												],
												"declarations": [
													{
														"constant": false,
														"id": 10,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 17,
														"src": "963:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 9,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "963:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"nodeType": "VariableDeclarationStatement",
												"src": "963:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1050:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1064:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1084:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1072:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1072:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1064:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 4,
														"isOffset": false,
														"isSlot": false,
														"src": "1084:7:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "1064:4:0",
														"valueSize": 1
													}
												],
												"id": 12,
												"nodeType": "InlineAssembly",
												"src": "1041:61:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 13,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1118:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1125:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1118:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 16,
												"nodeType": "Return",
												"src": "1111:15:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "130:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 18,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "720:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:17:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "760:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:6:0"
									},
									"scope": 344,
									"src": "700:433:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2121:318:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 29,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2147:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$344",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$344",
																				"typeString": "library Address"
																			}
																		],
																		"id": 28,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2139:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 27,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2139:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2139:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2139:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 32,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "2164:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2139:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2172:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 26,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2131:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2131:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2131:73:0"
											},
											{
												"assignments": [
													38,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 51,
														"src": "2293:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 37,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2293:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 45,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 39,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2311:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2311:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 41,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "2333:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2311:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2311:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2292:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 47,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "2362:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 46,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2354:78:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1139:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2069:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:43:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2121:0:0"
									},
									"scope": 344,
									"src": "2050:389:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3269:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 63,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3299:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 64,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "3307:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3313:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 62,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															69,
															89
														],
														"referencedDeclaration": 89,
														"src": "3286:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3286:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 61,
												"id": 67,
												"nodeType": "Return",
												"src": "3279:67:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2445:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3202:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3218:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:35:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3255:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 59,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:14:0"
									},
									"scope": 344,
									"src": "3180:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "3722:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3762:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 83,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "3770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3776:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 85,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "3779:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 81,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "3739:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 80,
												"id": 87,
												"nodeType": "Return",
												"src": "3732:60:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3359:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3606:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3630:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 73,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3630:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3657:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3657:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3596:93:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3708:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3708:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3707:14:0"
									},
									"scope": 344,
									"src": "3575:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "4304:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4343:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 103,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4351:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 104,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "4357:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4364:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 101,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															159
														],
														"referencedDeclaration": 159,
														"src": "4321:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4321:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 100,
												"id": 107,
												"nodeType": "Return",
												"src": "4314:94:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "3805:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4201:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4225:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 93,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4225:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4252:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4191:80:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4290:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4290:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:14:0"
									},
									"scope": 344,
									"src": "4161:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "5172:380:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 126,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "5198:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$344",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$344",
																				"typeString": "library Address"
																			}
																		],
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5190:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 124,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5190:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5190:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5190:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 129,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5215:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5190:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5222:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5182:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "5182:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 136,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 112,
																	"src": "5292:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 135,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "5281:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5281:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5301:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5273:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5273:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "5273:60:0"
											},
											{
												"assignments": [
													142,
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 158,
														"src": "5404:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 141,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5404:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 158,
														"src": "5418:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 143,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5418:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": {
													"arguments": [
														{
															"id": 149,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "5471:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 145,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "5445:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5445:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 147,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5464:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5445:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5445:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5403:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5511:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 154,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "5520:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 155,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "5532:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 152,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "5493:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5493:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 157,
												"nodeType": "Return",
												"src": "5486:59:0"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "4421:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5033:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5057:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5057:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5084:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5107:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5107:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5023:116:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5158:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5158:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5157:14:0"
									},
									"scope": 344,
									"src": "4993:559:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5740:812:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 174,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "5769:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 173,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "5758:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5758:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5778:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5750:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5750:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "5750:60:0"
											},
											{
												"assignments": [
													180,
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "5881:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 179,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5881:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 182,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "5895:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 181,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5895:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 189,
												"initialValue": {
													"arguments": [
														{
															"id": 187,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5951:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 183,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "5922:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5922:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 185,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "5941:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5922:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5922:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5880:76:0"
											},
											{
												"condition": {
													"id": 190,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 180,
													"src": "5970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 206,
													"nodeType": "Block",
													"src": "6027:519:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 194,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 182,
																		"src": "6111:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6111:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6131:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6111:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 204,
																"nodeType": "Block",
																"src": "6483:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 201,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 167,
																					"src": "6508:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 200,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6501:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6501:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 203,
																		"nodeType": "ExpressionStatement",
																		"src": "6501:20:0"
																	}
																]
															},
															"id": 205,
															"nodeType": "IfStatement",
															"src": "6107:429:0",
															"trueBody": {
																"id": 199,
																"nodeType": "Block",
																"src": "6134:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6318:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6340:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6369:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6363:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6363:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6344:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6412:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6416:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6408:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6408:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6429:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6401:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6401:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6401:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 182,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6369:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 182,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6416:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 198,
																		"nodeType": "InlineAssembly",
																		"src": "6309:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 207,
												"nodeType": "IfStatement",
												"src": "5966:580:0",
												"trueBody": {
													"id": 193,
													"nodeType": "Block",
													"src": "5979:42:0",
													"statements": [
														{
															"expression": {
																"id": 191,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "6000:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 171,
															"id": 192,
															"nodeType": "Return",
															"src": "5993:17:0"
														}
													]
												}
											}
										]
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5623:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5623:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5650:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5676:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5676:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5589:119:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5726:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5726:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5725:14:0"
									},
									"scope": 344,
									"src": "5558:994:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "6829:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6865:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6873:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6879:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 219,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															226,
															261
														],
														"referencedDeclaration": 261,
														"src": "6846:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6846:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 218,
												"id": 224,
												"nodeType": "Return",
												"src": "6839:80:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6558:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6757:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6773:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6773:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:35:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6815:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6815:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6814:14:0"
									},
									"scope": 344,
									"src": "6729:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "7268:288:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 240,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "7297:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 239,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "7286:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7286:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7306:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7278:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7278:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "7278:67:0"
											},
											{
												"assignments": [
													246,
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7416:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7416:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7430:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7430:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [
														{
															"id": 251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7457:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "7457:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7457:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7415:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "7515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 256,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7524:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 257,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7536:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 254,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "7497:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7497:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 237,
												"id": 259,
												"nodeType": "Return",
												"src": "7490:59:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6932:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7147:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7171:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7171:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7198:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7198:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7137:93:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7254:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7254:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7253:14:0"
									},
									"scope": 344,
									"src": "7110:446:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "7832:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 272,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "7870:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "7878:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7884:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 271,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															278,
															313
														],
														"referencedDeclaration": 313,
														"src": "7849:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7849:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "7842:84:0"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "7562:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "7765:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "7781:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7764:35:0"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "7818:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7818:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7817:14:0"
									},
									"scope": 344,
									"src": "7735:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "8274:292:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 292,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "8303:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 291,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "8292:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8292:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8312:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8284:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8284:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "8284:69:0"
											},
											{
												"assignments": [
													298,
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 312,
														"src": "8424:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 297,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8424:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 312,
														"src": "8438:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 299,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8438:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"arguments": [
														{
															"id": 303,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "8485:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 301,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "8465:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "8465:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8465:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8423:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "8525:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 308,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "8534:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 309,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "8546:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 306,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "8507:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8507:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 289,
												"id": 311,
												"nodeType": "Return",
												"src": "8500:59:0"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "7939:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "8158:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "8182:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8182:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "8209:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 284,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8209:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8148:93:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "8260:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8260:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8259:14:0"
									},
									"scope": 344,
									"src": "8119:447:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "8732:596:0",
										"statements": [
											{
												"condition": {
													"id": 324,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "8746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 340,
													"nodeType": "Block",
													"src": "8803:519:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 328,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "8887:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8887:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8907:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8887:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 338,
																"nodeType": "Block",
																"src": "9259:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 335,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 319,
																					"src": "9284:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 334,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "9277:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9277:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 337,
																		"nodeType": "ExpressionStatement",
																		"src": "9277:20:0"
																	}
																]
															},
															"id": 339,
															"nodeType": "IfStatement",
															"src": "8883:429:0",
															"trueBody": {
																"id": 333,
																"nodeType": "Block",
																"src": "8910:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "9094:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "9116:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "9145:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "9139:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9139:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "9120:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9188:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "9192:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9184:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9184:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "9205:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "9177:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9177:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9177:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 317,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "9145:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 317,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "9192:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 332,
																		"nodeType": "InlineAssembly",
																		"src": "9085:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 341,
												"nodeType": "IfStatement",
												"src": "8742:580:0",
												"trueBody": {
													"id": 327,
													"nodeType": "Block",
													"src": "8755:42:0",
													"statements": [
														{
															"expression": {
																"id": 325,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "8776:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 323,
															"id": 326,
															"nodeType": "Return",
															"src": "8769:17:0"
														}
													]
												}
											}
										]
									},
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8608:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8608:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8630:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8630:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8663:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 318,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8663:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8598:97:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8718:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8718:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8717:14:0"
									},
									"scope": 344,
									"src": "8572:756:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 345,
							"src": "108:9222:0"
						}
					],
					"src": "37:9294:0"
				},
				"id": 0
			},
			"ExodusBondingCalculator/FixedPoint.sol": {
				"ast": {
					"absolutePath": "ExodusBondingCalculator/FixedPoint.sol",
					"exportedSymbols": {
						"Babylonian": [
							548
						],
						"BitMath": [
							663
						],
						"FixedPoint": [
							878
						],
						"FullMath": [
							1099
						]
					},
					"id": 879,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 346,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:1"
						},
						{
							"absolutePath": "ExodusBondingCalculator/FullMath.sol",
							"file": "./FullMath.sol",
							"id": 347,
							"nodeType": "ImportDirective",
							"scope": 879,
							"sourceUnit": 1100,
							"src": "62:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 548,
							"linearizedBaseContracts": [
								548
							],
							"name": "Babylonian",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "170:989:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 354,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "184:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "189:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "184:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "180:20:1",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "199:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 353,
													"id": 358,
													"nodeType": "Return",
													"src": "192:8:1"
												}
											},
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "xx",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "211:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 360,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "211:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": {
													"id": 362,
													"name": "x",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "224:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "211:14:1"
											},
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "235:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 364,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "235:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": {
													"hexValue": "31",
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "247:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "235:13:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 368,
														"name": "xx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "262:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "268:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"src": "262:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 380,
												"nodeType": "IfStatement",
												"src": "258:104:1",
												"trueBody": {
													"id": 379,
													"nodeType": "Block",
													"src": "305:57:1",
													"statements": [
														{
															"expression": {
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 371,
																	"name": "xx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "319:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "326:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "319:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 374,
															"nodeType": "ExpressionStatement",
															"src": "319:10:1"
														},
														{
															"expression": {
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 375,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "343:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "349:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "343:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 378,
															"nodeType": "ExpressionStatement",
															"src": "343:8:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 381,
														"name": "xx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "375:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030303030303030303030303030",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "381:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"value": "0x10000000000000000"
													},
													"src": "375:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 393,
												"nodeType": "IfStatement",
												"src": "371:87:1",
												"trueBody": {
													"id": 392,
													"nodeType": "Block",
													"src": "402:56:1",
													"statements": [
														{
															"expression": {
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 384,
																	"name": "xx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "416:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "423:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "416:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 387,
															"nodeType": "ExpressionStatement",
															"src": "416:9:1"
														},
														{
															"expression": {
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 388,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "439:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "445:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "439:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 391,
															"nodeType": "ExpressionStatement",
															"src": "439:8:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 394,
														"name": "xx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "471:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030",
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "477:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"value": "0x100000000"
													},
													"src": "471:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 406,
												"nodeType": "IfStatement",
												"src": "467:79:1",
												"trueBody": {
													"id": 405,
													"nodeType": "Block",
													"src": "490:56:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "xx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "504:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "511:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "504:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "504:9:1"
														},
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 401,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "527:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "533:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "527:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "527:8:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 407,
														"name": "xx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "559:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "565:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"value": "0x10000"
													},
													"src": "559:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 419,
												"nodeType": "IfStatement",
												"src": "555:74:1",
												"trueBody": {
													"id": 418,
													"nodeType": "Block",
													"src": "574:55:1",
													"statements": [
														{
															"expression": {
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 410,
																	"name": "xx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "588:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "595:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "588:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 413,
															"nodeType": "ExpressionStatement",
															"src": "588:9:1"
														},
														{
															"expression": {
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 414,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "611:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "617:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "611:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 417,
															"nodeType": "ExpressionStatement",
															"src": "611:7:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 420,
														"name": "xx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "642:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030",
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x100"
													},
													"src": "642:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "638:71:1",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "655:54:1",
													"statements": [
														{
															"expression": {
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 423,
																	"name": "xx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "669:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "676:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "669:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 426,
															"nodeType": "ExpressionStatement",
															"src": "669:8:1"
														},
														{
															"expression": {
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 427,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "691:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "697:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "691:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 430,
															"nodeType": "ExpressionStatement",
															"src": "691:7:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 433,
														"name": "xx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "722:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130",
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "728:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "0x10"
													},
													"src": "722:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 445,
												"nodeType": "IfStatement",
												"src": "718:70:1",
												"trueBody": {
													"id": 444,
													"nodeType": "Block",
													"src": "734:54:1",
													"statements": [
														{
															"expression": {
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 436,
																	"name": "xx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "748:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "755:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "748:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 439,
															"nodeType": "ExpressionStatement",
															"src": "748:8:1"
														},
														{
															"expression": {
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 440,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "770:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "770:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 443,
															"nodeType": "ExpressionStatement",
															"src": "770:7:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 446,
														"name": "xx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "801:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307838",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "807:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "0x8"
													},
													"src": "801:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "797:47:1",
												"trueBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "812:32:1",
													"statements": [
														{
															"expression": {
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 449,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "826:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "826:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "826:7:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 455,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "853:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 456,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "858:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 457,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 349,
																			"src": "862:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 458,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "866:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "862:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "858:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 461,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "857:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "31",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "872:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "857:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "853:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "853:20:1"
											},
											{
												"expression": {
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 466,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "883:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 467,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "888:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 468,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 349,
																			"src": "892:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 469,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "896:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "892:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "888:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 472,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "887:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "31",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "902:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "887:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "883:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "883:20:1"
											},
											{
												"expression": {
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 477,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "913:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 478,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "918:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 479,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 349,
																			"src": "922:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 480,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "926:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "922:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "918:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 483,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "917:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "31",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "932:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "917:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "913:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "913:20:1"
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 488,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "943:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 489,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "948:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 490,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 349,
																			"src": "952:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 491,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "956:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "952:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "948:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 494,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "947:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "31",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "962:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "947:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "943:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "943:20:1"
											},
											{
												"expression": {
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 499,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "973:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 500,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "978:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 501,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 349,
																			"src": "982:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 502,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "986:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "982:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "978:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 505,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "977:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "31",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "992:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "977:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "973:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "973:20:1"
											},
											{
												"expression": {
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 510,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "1003:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 511,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "1008:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 512,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 349,
																			"src": "1012:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 513,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "1016:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1012:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1008:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 516,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1007:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "31",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1022:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1007:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1003:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "1003:20:1"
											},
											{
												"expression": {
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 521,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "1033:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 522,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "1038:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 523,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 349,
																			"src": "1042:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 524,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "1046:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1042:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1038:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 527,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1037:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "31",
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1052:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1037:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1033:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "1033:20:1"
											},
											{
												"assignments": [
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 533,
														"mutability": "mutable",
														"name": "r1",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "1100:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 532,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1100:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 534,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1113:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 535,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "1117:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1113:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1100:18:1"
											},
											{
												"expression": {
													"components": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 538,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "1136:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 539,
																	"name": "r1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "1140:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1136:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 542,
																"name": "r1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "1149:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1136:15:1",
															"trueExpression": {
																"id": 541,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "1145:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 544,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1135:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 353,
												"id": 545,
												"nodeType": "Return",
												"src": "1128:24:1"
											}
										]
									},
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "127:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "127:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "126:11:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "161:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "160:9:1"
									},
									"scope": 548,
									"src": "113:1046:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 879,
							"src": "88:1073:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "BitMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "1256:697:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 556,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "1274:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1278:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1274:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4269744d6174683a3a6d6f73745369676e69666963616e744269743a207a65726f",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1281:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03c73b0187854c5090030bbfe0f7d97709bd7eabff8b89faf5be84b9d8c785d2",
																"typeString": "literal_string \"BitMath::mostSignificantBit: zero\""
															},
															"value": "BitMath::mostSignificantBit: zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03c73b0187854c5090030bbfe0f7d97709bd7eabff8b89faf5be84b9d8c785d2",
																"typeString": "literal_string \"BitMath::mostSignificantBit: zero\""
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1266:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1266:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1266:51:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 562,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1332:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1337:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"src": "1332:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"nodeType": "IfStatement",
												"src": "1328:102:1",
												"trueBody": {
													"id": 573,
													"nodeType": "Block",
													"src": "1374:56:1",
													"statements": [
														{
															"expression": {
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 565,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "1388:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1394:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "1388:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 568,
															"nodeType": "ExpressionStatement",
															"src": "1388:9:1"
														},
														{
															"expression": {
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 569,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "1411:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1416:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "1411:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "1411:8:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 575,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1443:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030303030303030303030303030",
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1448:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"value": "0x10000000000000000"
													},
													"src": "1443:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "1439:84:1",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "1469:54:1",
													"statements": [
														{
															"expression": {
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 578,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "1483:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1489:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "1483:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 581,
															"nodeType": "ExpressionStatement",
															"src": "1483:8:1"
														},
														{
															"expression": {
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 582,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "1505:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1510:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "1505:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 585,
															"nodeType": "ExpressionStatement",
															"src": "1505:7:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 588,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1536:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1541:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"value": "0x100000000"
													},
													"src": "1536:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "1532:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "1554:54:1",
													"statements": [
														{
															"expression": {
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 591,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "1568:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1574:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1568:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 594,
															"nodeType": "ExpressionStatement",
															"src": "1568:8:1"
														},
														{
															"expression": {
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 595,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "1590:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1595:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1590:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 598,
															"nodeType": "ExpressionStatement",
															"src": "1590:7:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 601,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1621:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030",
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1626:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"value": "0x10000"
													},
													"src": "1621:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "1617:72:1",
												"trueBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "1635:54:1",
													"statements": [
														{
															"expression": {
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 604,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "1649:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1655:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1649:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 607,
															"nodeType": "ExpressionStatement",
															"src": "1649:8:1"
														},
														{
															"expression": {
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 608,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "1671:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1676:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1671:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 611,
															"nodeType": "ExpressionStatement",
															"src": "1671:7:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1702:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030",
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x100"
													},
													"src": "1702:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "1698:68:1",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "1714:52:1",
													"statements": [
														{
															"expression": {
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 617,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "1728:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1734:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1728:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 620,
															"nodeType": "ExpressionStatement",
															"src": "1728:7:1"
														},
														{
															"expression": {
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 621,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "1749:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1754:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1749:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "1749:6:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 627,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1779:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130",
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1784:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "0x10"
													},
													"src": "1779:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 639,
												"nodeType": "IfStatement",
												"src": "1775:67:1",
												"trueBody": {
													"id": 638,
													"nodeType": "Block",
													"src": "1790:52:1",
													"statements": [
														{
															"expression": {
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 630,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "1804:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1810:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1804:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 633,
															"nodeType": "ExpressionStatement",
															"src": "1804:7:1"
														},
														{
															"expression": {
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 634,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "1825:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1830:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1825:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 637,
															"nodeType": "ExpressionStatement",
															"src": "1825:6:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 640,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1855:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307834",
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1860:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "0x4"
													},
													"src": "1855:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "1851:66:1",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "1865:52:1",
													"statements": [
														{
															"expression": {
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 643,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "1879:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1885:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1879:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 646,
															"nodeType": "ExpressionStatement",
															"src": "1879:7:1"
														},
														{
															"expression": {
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 647,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "1900:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1905:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1900:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 650,
															"nodeType": "ExpressionStatement",
															"src": "1900:6:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 653,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1930:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307832",
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1935:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "0x2"
													},
													"src": "1930:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 660,
												"nodeType": "IfStatement",
												"src": "1926:20:1",
												"trueBody": {
													"expression": {
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 656,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "1940:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1945:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1940:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 659,
													"nodeType": "ExpressionStatement",
													"src": "1940:6:1"
												}
											}
										]
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1213:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:11:1"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1247:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 552,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1247:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:1"
									},
									"scope": 663,
									"src": "1185:768:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 879,
							"src": "1163:792:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 878,
							"linearizedBaseContracts": [
								878
							],
							"name": "FixedPoint",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "FixedPoint.uq112x112",
									"id": 666,
									"members": [
										{
											"constant": false,
											"id": 665,
											"mutability": "mutable",
											"name": "_x",
											"nodeType": "VariableDeclaration",
											"scope": 666,
											"src": "2009:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint224",
												"typeString": "uint224"
											},
											"typeName": {
												"id": 664,
												"name": "uint224",
												"nodeType": "ElementaryTypeName",
												"src": "2009:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "uq112x112",
									"nodeType": "StructDefinition",
									"scope": 878,
									"src": "1982:44:1",
									"visibility": "public"
								},
								{
									"canonicalName": "FixedPoint.uq144x112",
									"id": 669,
									"members": [
										{
											"constant": false,
											"id": 668,
											"mutability": "mutable",
											"name": "_x",
											"nodeType": "VariableDeclaration",
											"scope": 669,
											"src": "2059:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 667,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2059:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "uq144x112",
									"nodeType": "StructDefinition",
									"scope": 878,
									"src": "2032:44:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 672,
									"mutability": "constant",
									"name": "RESOLUTION",
									"nodeType": "VariableDeclaration",
									"scope": 878,
									"src": "2082:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 670,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2082:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "313132",
										"id": 671,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2118:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_112_by_1",
											"typeString": "int_const 112"
										},
										"value": "112"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 675,
									"mutability": "constant",
									"name": "Q112",
									"nodeType": "VariableDeclaration",
									"scope": 878,
									"src": "2127:63:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 673,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2127:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783130303030303030303030303030303030303030303030303030303030",
										"id": 674,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2159:31:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										},
										"value": "0x10000000000000000000000000000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 678,
									"mutability": "constant",
									"name": "Q224",
									"nodeType": "VariableDeclaration",
									"scope": 878,
									"src": "2196:91:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 676,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 677,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2228:59:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"value": "0x100000000000000000000000000000000000000000000000000000000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 681,
									"mutability": "constant",
									"name": "LOWER_MASK",
									"nodeType": "VariableDeclaration",
									"scope": 878,
									"src": "2293:68:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 679,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2293:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307866666666666666666666666666666666666666666666666666666666",
										"id": 680,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2331:30:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220095_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0095"
										},
										"value": "0xffffffffffffffffffffffffffff"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "2478:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 690,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "2503:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
																		"typeString": "struct FixedPoint.uq112x112 memory"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_x",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 665,
																"src": "2503:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint224",
																	"typeString": "uint224"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 692,
																"name": "RESOLUTION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "2514:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "2503:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														],
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2495:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 688,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "2495:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2495:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 687,
												"id": 695,
												"nodeType": "Return",
												"src": "2488:37:1"
											}
										]
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decode",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2423:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
													"typeString": "struct FixedPoint.uq112x112"
												},
												"typeName": {
													"id": 682,
													"name": "uq112x112",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 666,
													"src": "2423:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_uq112x112_$666_storage_ptr",
														"typeString": "struct FixedPoint.uq112x112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:23:1"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2469:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 685,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:9:1"
									},
									"scope": 878,
									"src": "2407:125:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "2618:59:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 706,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "2643:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
																		"typeString": "struct FixedPoint.uq112x112 memory"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_x",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 665,
																"src": "2643:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint224",
																	"typeString": "uint224"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint224",
																	"typeString": "uint224"
																}
															],
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2635:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 704,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2635:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2635:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "35313932323936383538353334383237",
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2654:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5192296858534827_by_1",
															"typeString": "int_const 5192296858534827"
														},
														"value": "5192296858534827"
													},
													"src": "2635:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 703,
												"id": 711,
												"nodeType": "Return",
												"src": "2628:42:1"
											}
										]
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decode112with18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2563:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
													"typeString": "struct FixedPoint.uq112x112"
												},
												"typeName": {
													"id": 698,
													"name": "uq112x112",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 666,
													"src": "2563:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_uq112x112_$666_storage_ptr",
														"typeString": "struct FixedPoint.uq112x112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2562:23:1"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2609:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2609:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:9:1"
									},
									"scope": 878,
									"src": "2538:139:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "2782:607:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 723,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "2800:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2814:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2800:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206279207a65726f",
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2817:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e8a6c8dfacd0a41f2501735d8ee26d996b9e7e81ff5467dfdfd11a3728a15e7",
																"typeString": "literal_string \"FixedPoint::fraction: division by zero\""
															},
															"value": "FixedPoint::fraction: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e8a6c8dfacd0a41f2501735d8ee26d996b9e7e81ff5467dfdfd11a3728a15e7",
																"typeString": "literal_string \"FixedPoint::fraction: division by zero\""
															}
														],
														"id": 722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2792:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "2792:66:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 729,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "2872:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2885:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2872:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "2868:50:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2916:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"expression": {
																"id": 732,
																"name": "FixedPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "2895:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FixedPoint_$878_$",
																	"typeString": "type(library FixedPoint)"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "uq112x112",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 666,
															"src": "2895:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_uq112x112_$666_storage_ptr_$",
																"typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2895:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
															"typeString": "struct FixedPoint.uq112x112 memory"
														}
													},
													"functionReturnParameters": 721,
													"id": 736,
													"nodeType": "Return",
													"src": "2888:30:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "2933:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [
															{
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "2954:2:1",
																"subExpression": {
																	"hexValue": "31",
																	"id": 741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2955:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2946:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint144_$",
																"typeString": "type(uint144)"
															},
															"typeName": {
																"id": 739,
																"name": "uint144",
																"nodeType": "ElementaryTypeName",
																"src": "2946:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2946:11:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "2933:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "3171:212:1",
													"statements": [
														{
															"assignments": [
																774
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 774,
																	"mutability": "mutable",
																	"name": "result",
																	"nodeType": "VariableDeclaration",
																	"scope": 800,
																	"src": "3185:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 773,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3185:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 781,
															"initialValue": {
																"arguments": [
																	{
																		"id": 777,
																		"name": "numerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 715,
																		"src": "3218:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 778,
																		"name": "Q112",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "3229:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 779,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "3235:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 775,
																		"name": "FullMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1099,
																		"src": "3202:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FullMath_$1099_$",
																			"typeString": "type(library FullMath)"
																		}
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mulDiv",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1098,
																	"src": "3202:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3185:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 783,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 774,
																			"src": "3269:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 787,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "3287:2:1",
																					"subExpression": {
																						"hexValue": "31",
																						"id": 786,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3288:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				],
																				"id": 785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3279:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint224_$",
																					"typeString": "type(uint224)"
																				},
																				"typeName": {
																					"id": 784,
																					"name": "uint224",
																					"nodeType": "ElementaryTypeName",
																					"src": "3279:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3279:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint224",
																				"typeString": "uint224"
																			}
																		},
																		"src": "3269:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f77",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3292:32:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9fe8d10e95984e9ccfd1797a961d8375075b4df29dfe16192bd5e7445ed87d53",
																			"typeString": "literal_string \"FixedPoint::fraction: overflow\""
																		},
																		"value": "FixedPoint::fraction: overflow"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9fe8d10e95984e9ccfd1797a961d8375075b4df29dfe16192bd5e7445ed87d53",
																			"typeString": "literal_string \"FixedPoint::fraction: overflow\""
																		}
																	],
																	"id": 782,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3261:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3261:64:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "3261:64:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 796,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 774,
																				"src": "3364:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3356:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint224_$",
																				"typeString": "type(uint224)"
																			},
																			"typeName": {
																				"id": 794,
																				"name": "uint224",
																				"nodeType": "ElementaryTypeName",
																				"src": "3356:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3356:15:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint224",
																			"typeString": "uint224"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint224",
																			"typeString": "uint224"
																		}
																	],
																	"id": 793,
																	"name": "uq112x112",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "3346:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_uq112x112_$666_storage_ptr_$",
																		"typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3346:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
																	"typeString": "struct FixedPoint.uq112x112 memory"
																}
															},
															"functionReturnParameters": 721,
															"id": 799,
															"nodeType": "Return",
															"src": "3339:33:1"
														}
													]
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "2929:454:1",
												"trueBody": {
													"id": 772,
													"nodeType": "Block",
													"src": "2959:206:1",
													"statements": [
														{
															"assignments": [
																746
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 746,
																	"mutability": "mutable",
																	"name": "result",
																	"nodeType": "VariableDeclaration",
																	"scope": 772,
																	"src": "2973:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 745,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2973:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 753,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 747,
																				"name": "numerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 715,
																				"src": "2991:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 748,
																				"name": "RESOLUTION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 672,
																				"src": "3004:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2991:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 750,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2990:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 751,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 717,
																	"src": "3018:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2990:39:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2973:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 755,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 746,
																			"src": "3051:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "3069:2:1",
																					"subExpression": {
																						"hexValue": "31",
																						"id": 758,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3070:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				],
																				"id": 757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3061:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint224_$",
																					"typeString": "type(uint224)"
																				},
																				"typeName": {
																					"id": 756,
																					"name": "uint224",
																					"nodeType": "ElementaryTypeName",
																					"src": "3061:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3061:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint224",
																				"typeString": "uint224"
																			}
																		},
																		"src": "3051:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f77",
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3074:32:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9fe8d10e95984e9ccfd1797a961d8375075b4df29dfe16192bd5e7445ed87d53",
																			"typeString": "literal_string \"FixedPoint::fraction: overflow\""
																		},
																		"value": "FixedPoint::fraction: overflow"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9fe8d10e95984e9ccfd1797a961d8375075b4df29dfe16192bd5e7445ed87d53",
																			"typeString": "literal_string \"FixedPoint::fraction: overflow\""
																		}
																	],
																	"id": 754,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3043:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3043:64:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 764,
															"nodeType": "ExpressionStatement",
															"src": "3043:64:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 768,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 746,
																				"src": "3146:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3138:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint224_$",
																				"typeString": "type(uint224)"
																			},
																			"typeName": {
																				"id": 766,
																				"name": "uint224",
																				"nodeType": "ElementaryTypeName",
																				"src": "3138:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3138:15:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint224",
																			"typeString": "uint224"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint224",
																			"typeString": "uint224"
																		}
																	],
																	"id": 765,
																	"name": "uq112x112",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "3128:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_uq112x112_$666_storage_ptr_$",
																		"typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3128:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
																	"typeString": "struct FixedPoint.uq112x112 memory"
																}
															},
															"functionReturnParameters": 721,
															"id": 771,
															"nodeType": "Return",
															"src": "3121:33:1"
														}
													]
												}
											}
										]
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fraction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "numerator",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "2701:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "denominator",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "2720:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:40:1"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "2764:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
													"typeString": "struct FixedPoint.uq112x112"
												},
												"typeName": {
													"id": 719,
													"name": "uq112x112",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 666,
													"src": "2764:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_uq112x112_$666_storage_ptr",
														"typeString": "struct FixedPoint.uq112x112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2763:18:1"
									},
									"scope": 878,
									"src": "2683:706:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "3544:372:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 810,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "3558:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
																"typeString": "struct FixedPoint.uq112x112 memory"
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_x",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 665,
														"src": "3558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [
															{
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "3577:2:1",
																"subExpression": {
																	"hexValue": "31",
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3578:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3569:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint144_$",
																"typeString": "type(uint144)"
															},
															"typeName": {
																"id": 812,
																"name": "uint144",
																"nodeType": "ElementaryTypeName",
																"src": "3569:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3569:11:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "3558:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 835,
												"nodeType": "IfStatement",
												"src": "3554:120:1",
												"trueBody": {
													"id": 834,
													"nodeType": "Block",
													"src": "3582:92:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 829,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 825,
																										"name": "self",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 805,
																										"src": "3645:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
																											"typeString": "struct FixedPoint.uq112x112 memory"
																										}
																									},
																									"id": 826,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "_x",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 665,
																									"src": "3645:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint224",
																										"typeString": "uint224"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint224",
																										"typeString": "uint224"
																									}
																								],
																								"id": 824,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "3637:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": {
																									"id": 823,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "3637:7:1",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 827,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3637:16:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "313132",
																							"id": 828,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3657:3:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_112_by_1",
																								"typeString": "int_const 112"
																							},
																							"value": "112"
																						},
																						"src": "3637:23:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 821,
																						"name": "Babylonian",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 548,
																						"src": "3621:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_Babylonian_$548_$",
																							"typeString": "type(library Babylonian)"
																						}
																					},
																					"id": 822,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sqrt",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 547,
																					"src": "3621:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256) pure returns (uint256)"
																					}
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3621:40:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3613:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint224_$",
																				"typeString": "type(uint224)"
																			},
																			"typeName": {
																				"id": 819,
																				"name": "uint224",
																				"nodeType": "ElementaryTypeName",
																				"src": "3613:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3613:49:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint224",
																			"typeString": "uint224"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint224",
																			"typeString": "uint224"
																		}
																	],
																	"id": 818,
																	"name": "uq112x112",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "3603:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_uq112x112_$666_storage_ptr_$",
																		"typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3603:60:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
																	"typeString": "struct FixedPoint.uq112x112 memory"
																}
															},
															"functionReturnParameters": 809,
															"id": 833,
															"nodeType": "Return",
															"src": "3596:67:1"
														}
													]
												}
											},
											{
												"assignments": [
													837
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"mutability": "mutable",
														"name": "safeShiftBits",
														"nodeType": "VariableDeclaration",
														"scope": 876,
														"src": "3684:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 836,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3684:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 845,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "323535",
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3706:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 841,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "3739:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
																		"typeString": "struct FixedPoint.uq112x112 memory"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_x",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 665,
																"src": "3739:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint224",
																	"typeString": "uint224"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint224",
																	"typeString": "uint224"
																}
															],
															"expression": {
																"id": 839,
																"name": "BitMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "3712:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_BitMath_$663_$",
																	"typeString": "type(library BitMath)"
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mostSignificantBit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 662,
															"src": "3712:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																"typeString": "function (uint256) pure returns (uint8)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3712:35:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3706:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3684:63:1"
											},
											{
												"expression": {
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 846,
														"name": "safeShiftBits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "3757:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 847,
															"name": "safeShiftBits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "3774:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3790:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3774:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3757:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "3757:34:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 859,
																								"name": "self",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 805,
																								"src": "3850:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
																									"typeString": "struct FixedPoint.uq112x112 memory"
																								}
																							},
																							"id": 860,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "_x",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 665,
																							"src": "3850:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint224",
																								"typeString": "uint224"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint224",
																								"typeString": "uint224"
																							}
																						],
																						"id": 858,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3842:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 857,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "3842:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 861,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3842:16:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 862,
																					"name": "safeShiftBits",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 837,
																					"src": "3862:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "3842:33:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 855,
																				"name": "Babylonian",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 548,
																				"src": "3826:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Babylonian_$548_$",
																					"typeString": "type(library Babylonian)"
																				}
																			},
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sqrt",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 547,
																			"src": "3826:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3826:50:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 870,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 867,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "313132",
																								"id": 865,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3882:3:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_112_by_1",
																									"typeString": "int_const 112"
																								},
																								"value": "112"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 866,
																								"name": "safeShiftBits",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 837,
																								"src": "3888:13:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "3882:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"id": 868,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3881:21:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 869,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3905:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "3881:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 871,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3880:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "3826:81:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3818:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": {
																	"id": 853,
																	"name": "uint224",
																	"nodeType": "ElementaryTypeName",
																	"src": "3818:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3818:90:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														],
														"id": 852,
														"name": "uq112x112",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "3808:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_uq112x112_$666_storage_ptr_$",
															"typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3808:101:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
														"typeString": "struct FixedPoint.uq112x112 memory"
													}
												},
												"functionReturnParameters": 809,
												"id": 875,
												"nodeType": "Return",
												"src": "3801:108:1"
											}
										]
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "3480:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
													"typeString": "struct FixedPoint.uq112x112"
												},
												"typeName": {
													"id": 804,
													"name": "uq112x112",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 666,
													"src": "3480:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_uq112x112_$666_storage_ptr",
														"typeString": "struct FixedPoint.uq112x112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:23:1"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "3526:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
													"typeString": "struct FixedPoint.uq112x112"
												},
												"typeName": {
													"id": 807,
													"name": "uq112x112",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 666,
													"src": "3526:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_uq112x112_$666_storage_ptr",
														"typeString": "struct FixedPoint.uq112x112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:18:1"
									},
									"scope": 878,
									"src": "3466:450:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 879,
							"src": "1957:1961:1"
						}
					],
					"src": "37:3882:1"
				},
				"id": 1
			},
			"ExodusBondingCalculator/FullMath.sol": {
				"ast": {
					"absolutePath": "ExodusBondingCalculator/FullMath.sol",
					"exportedSymbols": {
						"FullMath": [
							1099
						]
					},
					"id": 1100,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 880,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1099,
							"linearizedBaseContracts": [
								1099
							],
							"name": "FullMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "168:122:2",
										"statements": [
											{
												"assignments": [
													892
												],
												"declarations": [
													{
														"constant": false,
														"id": 892,
														"mutability": "mutable",
														"name": "mm",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "178:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 891,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "178:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"arguments": [
														{
															"id": 894,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "198:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 895,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "201:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "212:2:2",
																	"subExpression": {
																		"hexValue": "31",
																		"id": 898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "213:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																],
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "204:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 896,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "204:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "204:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "mulmod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -16,
														"src": "191:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "191:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "178:38:2"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 903,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "226:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 904,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "230:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 905,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "234:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "230:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "226:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "226:9:2"
											},
											{
												"expression": {
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 909,
														"name": "h",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "245:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 910,
															"name": "mm",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "249:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 911,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "254:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "249:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "245:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "245:10:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 915,
														"name": "mm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "269:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 916,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "274:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "269:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "265:18:2",
												"trueBody": {
													"expression": {
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 918,
															"name": "h",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "277:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "282:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "277:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 921,
													"nodeType": "ExpressionStatement",
													"src": "277:6:2"
												}
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fullMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "102:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "113:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "101:22:2"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "l",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "h",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "157:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "145:22:2"
									},
									"scope": 1099,
									"src": "85:205:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "407:352:2",
										"statements": [
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "pow2",
														"nodeType": "VariableDeclaration",
														"scope": 1035,
														"src": "417:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 935,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "417:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 941,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 937,
														"name": "d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "432:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "436:2:2",
														"subExpression": {
															"id": 938,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "437:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "432:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "417:21:2"
											},
											{
												"expression": {
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 942,
														"name": "d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "448:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "/=",
													"rightHandSide": {
														"id": 943,
														"name": "pow2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "453:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "448:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "448:9:2"
											},
											{
												"expression": {
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 946,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "467:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "/=",
													"rightHandSide": {
														"id": 947,
														"name": "pow2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "472:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "467:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "467:9:2"
											},
											{
												"expression": {
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 950,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "486:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 951,
															"name": "h",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "491:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"id": 953,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "497:5:2",
																					"subExpression": {
																						"id": 952,
																						"name": "pow2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 936,
																						"src": "498:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 954,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "496:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 955,
																			"name": "pow2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "506:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "496:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "513:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "496:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 959,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "495:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "491:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "486:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "486:29:2"
											},
											{
												"assignments": [
													964
												],
												"declarations": [
													{
														"constant": false,
														"id": 964,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 1035,
														"src": "525:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 963,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "525:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 966,
												"initialValue": {
													"hexValue": "31",
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "537:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "525:13:2"
											},
											{
												"expression": {
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 967,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "548:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "553:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 969,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "557:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 970,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "561:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "557:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "553:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "548:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "548:14:2"
											},
											{
												"expression": {
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 975,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "572:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "577:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 977,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "581:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 978,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "581:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "577:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "572:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "572:14:2"
											},
											{
												"expression": {
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 983,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "596:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "601:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 985,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "605:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 986,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "609:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "605:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "601:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "596:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "596:14:2"
											},
											{
												"expression": {
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 991,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "620:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "625:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 993,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "629:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 994,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "633:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "629:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "625:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "620:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "620:14:2"
											},
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 999,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "644:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "649:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1001,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "653:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1002,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "657:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "649:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "644:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "644:14:2"
											},
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1007,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "668:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "673:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1009,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "677:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1010,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "681:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "677:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "673:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "668:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "668:14:2"
											},
											{
												"expression": {
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1015,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "692:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "697:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1017,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "701:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1018,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "705:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "701:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "697:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "692:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "692:14:2"
											},
											{
												"expression": {
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1023,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "716:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "721:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1025,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "725:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1026,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "729:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "725:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "721:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "716:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "716:14:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1031,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "747:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1032,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "751:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "747:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 934,
												"id": 1034,
												"nodeType": "Return",
												"src": "740:12:2"
											}
										]
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fullDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "l",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "322:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "h",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "341:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "d",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "360:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "312:63:2"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "398:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:9:2"
									},
									"scope": 1099,
									"src": "296:463:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "876:262:2",
										"statements": [
											{
												"assignments": [
													1048,
													1050
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "l",
														"nodeType": "VariableDeclaration",
														"scope": 1097,
														"src": "887:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1047,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "887:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1050,
														"mutability": "mutable",
														"name": "h",
														"nodeType": "VariableDeclaration",
														"scope": 1097,
														"src": "898:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1049,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "898:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"arguments": [
														{
															"id": 1052,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "919:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1053,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "922:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1051,
														"name": "fullMul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "911:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "886:38:2"
											},
											{
												"assignments": [
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "mm",
														"nodeType": "VariableDeclaration",
														"scope": 1097,
														"src": "935:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1056,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "935:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1063,
												"initialValue": {
													"arguments": [
														{
															"id": 1059,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "955:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1060,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "958:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1061,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "961:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1058,
														"name": "mulmod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -16,
														"src": "948:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "948:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "935:28:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1064,
														"name": "mm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "977:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1065,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "982:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "977:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1071,
												"nodeType": "IfStatement",
												"src": "973:18:2",
												"trueBody": {
													"expression": {
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1067,
															"name": "h",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "985:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "990:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "985:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1070,
													"nodeType": "ExpressionStatement",
													"src": "985:6:2"
												}
											},
											{
												"expression": {
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1072,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "1001:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1073,
														"name": "mm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "1006:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1001:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "1001:7:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1076,
														"name": "h",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "1023:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1028:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1023:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1083,
												"nodeType": "IfStatement",
												"src": "1019:24:2",
												"trueBody": {
													"expression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1079,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "1038:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1080,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "1042:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1038:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1046,
													"id": 1082,
													"nodeType": "Return",
													"src": "1031:12:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1085,
																"name": "h",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "1062:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1086,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "1066:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1062:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756c6c4d6174683a2046554c4c4449565f4f564552464c4f57",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1069:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9573a614b6ab65c92932376c168e5635a05a20769ae8cb8b8a2d9575aad107da",
																"typeString": "literal_string \"FullMath: FULLDIV_OVERFLOW\""
															},
															"value": "FullMath: FULLDIV_OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9573a614b6ab65c92932376c168e5635a05a20769ae8cb8b8a2d9575aad107da",
																"typeString": "literal_string \"FullMath: FULLDIV_OVERFLOW\""
															}
														],
														"id": 1084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1054:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "1054:44:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1092,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "1123:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1093,
															"name": "h",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "1126:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1094,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "1129:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1091,
														"name": "fullDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "1115:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1115:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1046,
												"id": 1096,
												"nodeType": "Return",
												"src": "1108:23:2"
											}
										]
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "790:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "809:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "d",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "828:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:63:2"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "867:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:2"
									},
									"scope": 1099,
									"src": "765:373:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1100,
							"src": "62:1078:2"
						}
					],
					"src": "37:1104:2"
				},
				"id": 2
			},
			"ExodusBondingCalculator/IBondingCalculator.sol": {
				"ast": {
					"absolutePath": "ExodusBondingCalculator/IBondingCalculator.sol",
					"exportedSymbols": {
						"IBondingCalculator": [
							1118
						]
					},
					"id": 1119,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1101,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1118,
							"linearizedBaseContracts": [
								1118
							],
							"name": "IBondingCalculator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "32da80a3",
									"id": 1108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "markdown",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "_LP",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "116:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:13:3"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "152:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:9:3"
									},
									"scope": 1118,
									"src": "98:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4249719f",
									"id": 1117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "valuation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "pair_",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "186:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "186:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "201:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "201:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "185:32:3"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "241:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:16:3"
									},
									"scope": 1118,
									"src": "167:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1119,
							"src": "63:196:3"
						}
					],
					"src": "37:223:3"
				},
				"id": 3
			},
			"ExodusBondingCalculator/IERC20.sol": {
				"ast": {
					"absolutePath": "ExodusBondingCalculator/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1187
						]
					},
					"id": 1188,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1120,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1187,
							"linearizedBaseContracts": [
								1187
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 1125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "106:2:4"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "132:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:9:4"
									},
									"scope": 1187,
									"src": "86:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "166:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "166:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:17:4"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "206:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:4"
									},
									"scope": 1187,
									"src": "147:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "239:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "258:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:35:4"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "292:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "292:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:6:4"
									},
									"scope": 1187,
									"src": "221:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "323:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "338:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:32:4"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "378:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:9:4"
									},
									"scope": 1187,
									"src": "304:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "410:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "427:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:33:4"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "461:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "461:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:6:4"
									},
									"scope": 1187,
									"src": "393:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "504:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "555:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:81:4"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "594:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "594:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:6:4"
									},
									"scope": 1187,
									"src": "473:127:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 1178,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "621:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "643:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:57:4"
									},
									"src": "606:72:4"
								},
								{
									"anonymous": false,
									"id": 1186,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "699:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "722:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "747:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:63:4"
									},
									"src": "684:78:4"
								}
							],
							"scope": 1188,
							"src": "63:701:4"
						}
					],
					"src": "37:728:4"
				},
				"id": 4
			},
			"ExodusBondingCalculator/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "ExodusBondingCalculator/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1187
						],
						"IERC20Metadata": [
							1208
						]
					},
					"id": 1209,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1189,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:5"
						},
						{
							"absolutePath": "ExodusBondingCalculator/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1190,
							"nodeType": "ImportDirective",
							"scope": 1209,
							"sourceUnit": 1188,
							"src": "63:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1191,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1187,
										"src": "115:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1187",
											"typeString": "contract IERC20"
										}
									},
									"id": 1192,
									"nodeType": "InheritanceSpecifier",
									"src": "115:6:5"
								}
							],
							"contractDependencies": [
								1187
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1208,
							"linearizedBaseContracts": [
								1208,
								1187
							],
							"name": "IERC20Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06fdde03",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "141:2:5"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "167:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1194,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "167:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "166:15:5"
									},
									"scope": 1208,
									"src": "128:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:2:5"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "229:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1199,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "229:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:15:5"
									},
									"scope": 1208,
									"src": "188:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "267:2:5"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "293:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "293:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:7:5"
									},
									"scope": 1208,
									"src": "250:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1209,
							"src": "87:215:5"
						}
					],
					"src": "37:266:5"
				},
				"id": 5
			},
			"ExodusBondingCalculator/IUniswapV2ERC20.sol": {
				"ast": {
					"absolutePath": "ExodusBondingCalculator/IUniswapV2ERC20.sol",
					"exportedSymbols": {
						"IUniswapV2ERC20": [
							1326
						]
					},
					"id": 1327,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1210,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1326,
							"linearizedBaseContracts": [
								1326
							],
							"name": "IUniswapV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1218,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "110:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "133:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "158:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "109:63:6"
									},
									"src": "95:78:6"
								},
								{
									"anonymous": false,
									"id": 1226,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "193:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "215:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "235:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:57:6"
									},
									"src": "178:72:6"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "269:2:6"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "295:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1228,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "295:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:15:6"
									},
									"scope": 1326,
									"src": "256:54:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "331:2:6"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "357:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "357:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:15:6"
									},
									"scope": 1326,
									"src": "316:56:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:2:6"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "421:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1238,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "421:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:7:6"
									},
									"scope": 1326,
									"src": "378:50:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:2:6"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "480:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:9:6"
									},
									"scope": 1326,
									"src": "434:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "514:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:15:6"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "552:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:9:6"
									},
									"scope": 1326,
									"src": "495:66:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "586:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "601:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:32:6"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "641:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:9:6"
									},
									"scope": 1326,
									"src": "567:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "673:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "690:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:32:6"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "723:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1268,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "723:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:6:6"
									},
									"scope": 1326,
									"src": "656:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "753:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "765:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:27:6"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "798:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "798:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:6:6"
									},
									"scope": 1326,
									"src": "735:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "841:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "863:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "883:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "831:71:6"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "921:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "921:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "920:6:6"
									},
									"scope": 1326,
									"src": "810:117:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 1296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "958:2:6"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "984:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1293,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:9:6"
									},
									"scope": 1326,
									"src": "933:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 1301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1023:2:6"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1049:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1298,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:9:6"
									},
									"scope": 1326,
									"src": "999:59:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 1308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "1080:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:15:6"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "1118:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1117:9:6"
									},
									"scope": 1326,
									"src": "1064:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 1325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "1158:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "1181:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "1206:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "1229:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "1255:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1317,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "1272:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "1291:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1148:158:6"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1315:0:6"
									},
									"scope": 1326,
									"src": "1133:183:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1327,
							"src": "63:1255:6"
						}
					],
					"src": "37:1282:6"
				},
				"id": 6
			},
			"ExodusBondingCalculator/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "ExodusBondingCalculator/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2ERC20": [
							1326
						],
						"IUniswapV2Pair": [
							1372
						]
					},
					"id": 1373,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1328,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:7"
						},
						{
							"absolutePath": "ExodusBondingCalculator/IUniswapV2ERC20.sol",
							"file": "./IUniswapV2ERC20.sol",
							"id": 1329,
							"nodeType": "ImportDirective",
							"scope": 1373,
							"sourceUnit": 1327,
							"src": "63:31:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1330,
										"name": "IUniswapV2ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1326,
										"src": "124:15:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2ERC20_$1326",
											"typeString": "contract IUniswapV2ERC20"
										}
									},
									"id": 1331,
									"nodeType": "InheritanceSpecifier",
									"src": "124:15:7"
								}
							],
							"contractDependencies": [
								1326
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1372,
							"linearizedBaseContracts": [
								1372,
								1326
							],
							"name": "IUniswapV2Pair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0dfe1681",
									"id": 1336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "161:2:7"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "187:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "187:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "186:9:7"
									},
									"scope": 1372,
									"src": "146:50:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "217:2:7"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "243:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:9:7"
									},
									"scope": 1372,
									"src": "202:50:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "281:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "309:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "337:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "357:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "357:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:111:7"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:0:7"
									},
									"scope": 1372,
									"src": "258:134:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "418:2:7"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "481:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1354,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "511:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1356,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "541:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1358,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "541:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "467:109:7"
									},
									"scope": 1372,
									"src": "398:179:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 1368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "597:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:12:7"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "627:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:19:7"
									},
									"scope": 1372,
									"src": "583:63:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 1371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "665:2:7"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "676:0:7"
									},
									"scope": 1372,
									"src": "652:25:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1373,
							"src": "96:583:7"
						}
					],
					"src": "37:643:7"
				},
				"id": 7
			},
			"ExodusBondingCalculator/SafeERC20.sol": {
				"ast": {
					"absolutePath": "ExodusBondingCalculator/SafeERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1187
						],
						"SafeERC20": [
							1550
						]
					},
					"id": 1551,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1374,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:8"
						},
						{
							"absolutePath": "ExodusBondingCalculator/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1376,
							"nodeType": "ImportDirective",
							"scope": 1551,
							"sourceUnit": 1188,
							"src": "68:36:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1375,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "76:6:8",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1377,
								"nodeType": "StructuredDocumentation",
								"src": "106:248:8",
								"text": "@notice Safe IERC20 and ETH transfer library that safely handles missing return values.\n @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol)\n Taken from Solmate"
							},
							"fullyImplemented": true,
							"id": 1550,
							"linearizedBaseContracts": [
								1550
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "507:267:8",
										"statements": [
											{
												"assignments": [
													1389,
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1389,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1427,
														"src": "518:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1388,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "518:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 1427,
														"src": "532:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1390,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "532:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1407,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1399,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1187,
																			"src": "609:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1187_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1170,
																		"src": "609:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "609:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1402,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "639:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1403,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "645:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1404,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "649:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1397,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "586:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "586:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "586:70:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1394,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "561:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1187",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1187",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "553:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1392,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "553:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "553:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "553:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "553:113:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "517:149:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1409,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "685:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1410,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1391,
																					"src": "697:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "697:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "712:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "697:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1416,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1391,
																					"src": "728:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1418,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "735:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1417,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "735:4:8",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1419,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "734:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1414,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -1,
																					"src": "717:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "717:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "717:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "697:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1422,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "696:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "685:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5452414e534645525f46524f4d5f4641494c4544",
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "744:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77631768048ee92f9dcf4b9b9d762877d6b9723214862c733f0596708fc219b7",
																"typeString": "literal_string \"TRANSFER_FROM_FAILED\""
															},
															"value": "TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77631768048ee92f9dcf4b9b9d762877d6b9723214862c733f0596708fc219b7",
																"typeString": "literal_string \"TRANSFER_FROM_FAILED\""
															}
														],
														"id": 1408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "677:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "677:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "677:90:8"
											}
										]
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "413:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1378,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1187,
													"src": "413:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "435:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "457:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "477:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:94:8"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "507:0:8"
									},
									"scope": 1550,
									"src": "378:396:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "883:252:8",
										"statements": [
											{
												"assignments": [
													1438,
													1440
												],
												"declarations": [
													{
														"constant": false,
														"id": 1438,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1475,
														"src": "894:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1437,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "894:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1440,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 1475,
														"src": "908:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1439,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "908:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1455,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1448,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1187,
																			"src": "985:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1187_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1141,
																		"src": "985:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "985:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1451,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "1011:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1452,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1434,
																	"src": "1015:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1446,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "962:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "962:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "962:60:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1443,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1430,
																	"src": "937:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1187",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1187",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "929:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1441,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "929:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "929:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "929:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "929:103:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "893:139:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1457,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1438,
																"src": "1051:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1458,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1440,
																					"src": "1063:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1063:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1078:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1063:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1464,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1440,
																					"src": "1094:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1466,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1101:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1465,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1101:4:8",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1467,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1100:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1462,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -1,
																					"src": "1083:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1083:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1083:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1063:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1470,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1062:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1051:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5452414e534645525f4641494c4544",
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1110:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72",
																"typeString": "literal_string \"TRANSFER_FAILED\""
															},
															"value": "TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72",
																"typeString": "literal_string \"TRANSFER_FAILED\""
															}
														],
														"id": 1456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1043:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1043:85:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "1043:85:8"
											}
										]
									},
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "811:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1429,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1187,
													"src": "811:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "833:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "853:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:72:8"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "883:0:8"
									},
									"scope": 1550,
									"src": "780:355:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "1243:250:8",
										"statements": [
											{
												"assignments": [
													1486,
													1488
												],
												"declarations": [
													{
														"constant": false,
														"id": 1486,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1523,
														"src": "1254:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1485,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1254:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1488,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 1523,
														"src": "1268:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1487,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1268:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1503,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1496,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1187,
																			"src": "1345:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1187_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1159,
																		"src": "1345:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 1498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1345:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1499,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "1370:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1500,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "1374:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1494,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1322:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1322:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1322:59:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1491,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1478,
																	"src": "1297:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1187",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1187",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1289:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1289:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1289:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1289:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:102:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1253:138:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1505,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1486,
																"src": "1410:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1506,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1488,
																					"src": "1422:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1422:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1437:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1422:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1512,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1488,
																					"src": "1453:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1514,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1460:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1513,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1460:4:8",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1515,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1459:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1510,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -1,
																					"src": "1442:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1511,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1442:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1442:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1422:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1518,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1421:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1410:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "415050524f56455f4641494c4544",
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1469:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd400c5237ae346977ee020ef8d0d26a880c07edf7eba69a8848f0d31e9a88f2",
																"typeString": "literal_string \"APPROVE_FAILED\""
															},
															"value": "APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd400c5237ae346977ee020ef8d0d26a880c07edf7eba69a8848f0d31e9a88f2",
																"typeString": "literal_string \"APPROVE_FAILED\""
															}
														],
														"id": 1504,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1402:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1402:84:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "1402:84:8"
											}
										]
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1171:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1477,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1187,
													"src": "1171:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1193:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1213:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:72:8"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1243:0:8"
									},
									"scope": 1550,
									"src": "1141:352:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "1561:122:8",
										"statements": [
											{
												"assignments": [
													1532,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1532,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1548,
														"src": "1572:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1531,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1572:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1542,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1623:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1613:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1537,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1617:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1613:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1533,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1526,
																"src": "1590:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1590:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1535,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "1605:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1590:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1590:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1571:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "1645:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4554485f5452414e534645525f4641494c4544",
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1654:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29",
																"typeString": "literal_string \"ETH_TRANSFER_FAILED\""
															},
															"value": "ETH_TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29",
																"typeString": "literal_string \"ETH_TRANSFER_FAILED\""
															}
														],
														"id": 1543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1637:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1637:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "1637:39:8"
											}
										]
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1524:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1536:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1523:28:8"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1561:0:8"
									},
									"scope": 1550,
									"src": "1499:184:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1551,
							"src": "354:1331:8"
						}
					],
					"src": "42:1644:8"
				},
				"id": 8
			},
			"ExodusBondingCalculator/SafeMath.sol": {
				"ast": {
					"absolutePath": "ExodusBondingCalculator/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1769
						]
					},
					"id": 1770,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1552,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1769,
							"linearizedBaseContracts": [
								1769
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "222:109:9",
										"statements": [
											{
												"assignments": [
													1562
												],
												"declarations": [
													{
														"constant": false,
														"id": 1562,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1576,
														"src": "232:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1561,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "232:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1566,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1563,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "244:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1564,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1556,
														"src": "248:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "244:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "232:17:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1568,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1562,
																"src": "267:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1569,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "272:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "267:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "275:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "259:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "259:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "259:46:9"
											},
											{
												"expression": {
													"id": 1574,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1562,
													"src": "323:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1560,
												"id": 1575,
												"nodeType": "Return",
												"src": "316:8:9"
											}
										]
									},
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "168:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "179:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:22:9"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "213:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:9:9"
									},
									"scope": 1769,
									"src": "155:176:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "404:67:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1587,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "425:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1588,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "428:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "431:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1586,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1593,
															1620
														],
														"referencedDeclaration": 1620,
														"src": "421:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "421:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1585,
												"id": 1591,
												"nodeType": "Return",
												"src": "414:50:9"
											}
										]
									},
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "350:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "361:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:22:9"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "395:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:9:9"
									},
									"scope": 1769,
									"src": "337:134:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "602:92:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1605,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "620:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1606,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "625:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "620:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1608,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "628:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1604,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "612:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "612:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "612:29:9"
											},
											{
												"assignments": [
													1612
												],
												"declarations": [
													{
														"constant": false,
														"id": 1612,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1619,
														"src": "651:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1611,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "651:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1616,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1613,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1595,
														"src": "663:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1614,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "667:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "663:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "651:17:9"
											},
											{
												"expression": {
													"id": 1617,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1612,
													"src": "686:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1603,
												"id": 1618,
												"nodeType": "Return",
												"src": "679:8:9"
											}
										]
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "499:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "518:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "537:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:80:9"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "593:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:9:9"
									},
									"scope": 1769,
									"src": "477:217:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "767:174:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1629,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1622,
														"src": "781:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "786:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "781:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1635,
												"nodeType": "IfStatement",
												"src": "777:45:9",
												"trueBody": {
													"id": 1634,
													"nodeType": "Block",
													"src": "789:33:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "810:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1628,
															"id": 1633,
															"nodeType": "Return",
															"src": "803:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													1637
												],
												"declarations": [
													{
														"constant": false,
														"id": 1637,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1653,
														"src": "832:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1636,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "832:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1641,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1638,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1622,
														"src": "844:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1639,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "848:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "844:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "832:17:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1643,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "867:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1644,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "871:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "867:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1646,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "876:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "867:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "879:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "859:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "859:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "859:56:9"
											},
											{
												"expression": {
													"id": 1651,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1637,
													"src": "933:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1628,
												"id": 1652,
												"nodeType": "Return",
												"src": "926:8:9"
											}
										]
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "713:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "724:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:22:9"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "758:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:9:9"
									},
									"scope": 1769,
									"src": "700:241:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "1014:63:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1664,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1656,
															"src": "1035:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1665,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "1038:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1041:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1663,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1670,
															1710
														],
														"referencedDeclaration": 1710,
														"src": "1031:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1662,
												"id": 1668,
												"nodeType": "Return",
												"src": "1024:46:9"
											}
										]
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "960:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "971:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "959:22:9"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "1005:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1004:9:9"
									},
									"scope": 1769,
									"src": "947:130:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "1208:176:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1682,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "1226:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1230:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1226:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1685,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "1233:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1681,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1218:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1687,
												"nodeType": "ExpressionStatement",
												"src": "1218:28:9"
											},
											{
												"assignments": [
													1689
												],
												"declarations": [
													{
														"constant": false,
														"id": 1689,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1709,
														"src": "1256:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1688,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1256:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1693,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1690,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "1268:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1691,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "1272:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1268:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1256:17:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1695,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "1290:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1696,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "1295:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1697,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1689,
																		"src": "1299:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1295:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1699,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1672,
																				"src": "1304:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 1700,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1674,
																				"src": "1308:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1304:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1702,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1303:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1295:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1290:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1694,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1283:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1283:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "1283:28:9"
											},
											{
												"expression": {
													"id": 1707,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1689,
													"src": "1376:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1680,
												"id": 1708,
												"nodeType": "Return",
												"src": "1369:8:9"
											}
										]
									},
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1105:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1124:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1143:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1143:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:80:9"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1199:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1198:9:9"
									},
									"scope": 1769,
									"src": "1083:301:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "1497:260:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1717,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "1511:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1515:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1511:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1757,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "1713:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1718:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1713:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1765,
													"nodeType": "IfStatement",
													"src": "1709:42:9",
													"trueBody": {
														"id": 1764,
														"nodeType": "Block",
														"src": "1721:30:9",
														"statements": [
															{
																"expression": {
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1760,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "1735:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 1761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1739:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1735:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1763,
																"nodeType": "ExpressionStatement",
																"src": "1735:5:9"
															}
														]
													}
												},
												"id": 1766,
												"nodeType": "IfStatement",
												"src": "1507:244:9",
												"trueBody": {
													"id": 1756,
													"nodeType": "Block",
													"src": "1518:185:9",
													"statements": [
														{
															"expression": {
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1720,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "1532:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1721,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "1536:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1532:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1723,
															"nodeType": "ExpressionStatement",
															"src": "1532:5:9"
														},
														{
															"assignments": [
																1725
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1725,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 1756,
																	"src": "1551:9:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1724,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1551:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1733,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1728,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1712,
																				"src": "1571:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 1729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1574:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 1727,
																			"name": "div",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1670,
																				1710
																			],
																			"referencedDeclaration": 1670,
																			"src": "1567:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1567:9:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1578:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 1726,
																	"name": "add",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "1563:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1563:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1551:29:9"
														},
														{
															"body": {
																"id": 1754,
																"nodeType": "Block",
																"src": "1608:85:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1737,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1715,
																				"src": "1626:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1738,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1725,
																				"src": "1630:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1626:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1740,
																		"nodeType": "ExpressionStatement",
																		"src": "1626:5:9"
																	},
																	{
																		"expression": {
																			"id": 1752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1741,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1725,
																				"src": "1649:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1745,
																										"name": "a",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1712,
																										"src": "1665:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 1746,
																										"name": "b",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1725,
																										"src": "1668:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 1744,
																									"name": "div",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										1670,
																										1710
																									],
																									"referencedDeclaration": 1670,
																									"src": "1661:3:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1747,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1661:9:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1748,
																								"name": "b",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1725,
																								"src": "1672:1:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1743,
																							"name": "add",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1577,
																							"src": "1657:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1749,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1657:17:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "32",
																						"id": 1750,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1676:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						}
																					],
																					"id": 1742,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						1670,
																						1710
																					],
																					"referencedDeclaration": 1670,
																					"src": "1653:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1653:25:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1649:29:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1753,
																		"nodeType": "ExpressionStatement",
																		"src": "1649:29:9"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1734,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "1601:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1735,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "1605:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1601:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1755,
															"nodeType": "WhileStatement",
															"src": "1594:99:9"
														}
													]
												}
											}
										]
									},
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "1452:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:11:9"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "1486:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:11:9"
									},
									"scope": 1769,
									"src": "1437:320:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1770,
							"src": "132:1627:9"
						}
					],
					"src": "37:1723:9"
				},
				"id": 9
			},
			"ExodusBondingCalculator/StandardBondingCalculator.sol": {
				"ast": {
					"absolutePath": "ExodusBondingCalculator/StandardBondingCalculator.sol",
					"exportedSymbols": {
						"Address": [
							344
						],
						"Babylonian": [
							548
						],
						"BitMath": [
							663
						],
						"ExodusBondingCalculator": [
							2019
						],
						"FixedPoint": [
							878
						],
						"FullMath": [
							1099
						],
						"IBondingCalculator": [
							1118
						],
						"IERC20": [
							1187
						],
						"IERC20Metadata": [
							1208
						],
						"IUniswapV2ERC20": [
							1326
						],
						"IUniswapV2Pair": [
							1372
						],
						"SafeERC20": [
							1550
						],
						"SafeMath": [
							1769
						]
					},
					"id": 2020,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1771,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:10"
						},
						{
							"absolutePath": "ExodusBondingCalculator/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 1772,
							"nodeType": "ImportDirective",
							"scope": 2020,
							"sourceUnit": 1770,
							"src": "62:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusBondingCalculator/FixedPoint.sol",
							"file": "./FixedPoint.sol",
							"id": 1773,
							"nodeType": "ImportDirective",
							"scope": 2020,
							"sourceUnit": 879,
							"src": "87:26:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusBondingCalculator/Address.sol",
							"file": "./Address.sol",
							"id": 1774,
							"nodeType": "ImportDirective",
							"scope": 2020,
							"sourceUnit": 345,
							"src": "114:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusBondingCalculator/SafeERC20.sol",
							"file": "./SafeERC20.sol",
							"id": 1775,
							"nodeType": "ImportDirective",
							"scope": 2020,
							"sourceUnit": 1551,
							"src": "138:25:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusBondingCalculator/IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 1776,
							"nodeType": "ImportDirective",
							"scope": 2020,
							"sourceUnit": 1209,
							"src": "165:30:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusBondingCalculator/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1777,
							"nodeType": "ImportDirective",
							"scope": 2020,
							"sourceUnit": 1188,
							"src": "196:22:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusBondingCalculator/IBondingCalculator.sol",
							"file": "./IBondingCalculator.sol",
							"id": 1778,
							"nodeType": "ImportDirective",
							"scope": 2020,
							"sourceUnit": 1119,
							"src": "219:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusBondingCalculator/IUniswapV2ERC20.sol",
							"file": "./IUniswapV2ERC20.sol",
							"id": 1779,
							"nodeType": "ImportDirective",
							"scope": 2020,
							"sourceUnit": 1327,
							"src": "254:31:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExodusBondingCalculator/IUniswapV2Pair.sol",
							"file": "./IUniswapV2Pair.sol",
							"id": 1780,
							"nodeType": "ImportDirective",
							"scope": 2020,
							"sourceUnit": 1373,
							"src": "286:30:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1781,
										"name": "IBondingCalculator",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1118,
										"src": "354:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBondingCalculator_$1118",
											"typeString": "contract IBondingCalculator"
										}
									},
									"id": 1782,
									"nodeType": "InheritanceSpecifier",
									"src": "354:18:10"
								}
							],
							"contractDependencies": [
								1118
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2019,
							"linearizedBaseContracts": [
								2019,
								1118
							],
							"name": "ExodusBondingCalculator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1784,
									"libraryName": {
										"id": 1783,
										"name": "FixedPoint",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 878,
										"src": "385:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_FixedPoint_$878",
											"typeString": "library FixedPoint"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "379:23:10"
								},
								{
									"id": 1787,
									"libraryName": {
										"id": 1785,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1769,
										"src": "413:8:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1769",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "407:27:10",
									"typeName": {
										"id": 1786,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "426:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1789,
									"mutability": "immutable",
									"name": "EXO",
									"nodeType": "VariableDeclaration",
									"scope": 2019,
									"src": "440:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1187",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1788,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1187,
										"src": "440:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1187",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "502:93:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1795,
																"name": "_EXO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "520:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "536:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "528:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1796,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "528:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "528:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "520:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616464726573733a2045584f",
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "540:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_92dbaf19d492a85c90ee7fa1d88d8411e3695427ded7e07802549e0a45ac2c71",
																"typeString": "literal_string \"Zero address: EXO\""
															},
															"value": "Zero address: EXO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_92dbaf19d492a85c90ee7fa1d88d8411e3695427ded7e07802549e0a45ac2c71",
																"typeString": "literal_string \"Zero address: EXO\""
															}
														],
														"id": 1794,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "512:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "512:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "512:48:10"
											},
											{
												"expression": {
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1804,
														"name": "EXO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1789,
														"src": "570:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1187",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1806,
																"name": "_EXO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "583:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1805,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "576:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1187_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "576:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1187",
															"typeString": "contract IERC20"
														}
													},
													"src": "570:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1187",
														"typeString": "contract IERC20"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "570:18:10"
											}
										]
									},
									"id": 1811,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "_EXO",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "488:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "487:14:10"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "502:0:10"
									},
									"scope": 2019,
									"src": "476:119:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "668:402:10",
										"statements": [
											{
												"assignments": [
													1819
												],
												"declarations": [
													{
														"constant": false,
														"id": 1819,
														"mutability": "mutable",
														"name": "token0",
														"nodeType": "VariableDeclaration",
														"scope": 1878,
														"src": "678:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1818,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "678:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1829,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1822,
																					"name": "_pair",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1813,
																					"src": "725:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1821,
																				"name": "IUniswapV2Pair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1372,
																				"src": "710:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1372_$",
																					"typeString": "type(contract IUniswapV2Pair)"
																				}
																			},
																			"id": 1823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "710:21:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV2Pair_$1372",
																				"typeString": "contract IUniswapV2Pair"
																			}
																		},
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1336,
																		"src": "710:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																			"typeString": "function () pure external returns (address)"
																		}
																	},
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "710:30:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1820,
																"name": "IERC20Metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "695:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1208_$",
																	"typeString": "type(contract IERC20Metadata)"
																}
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "695:46:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$1208",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1207,
														"src": "695:55:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "695:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "678:74:10"
											},
											{
												"assignments": [
													1831
												],
												"declarations": [
													{
														"constant": false,
														"id": 1831,
														"mutability": "mutable",
														"name": "token1",
														"nodeType": "VariableDeclaration",
														"scope": 1878,
														"src": "762:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1830,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "762:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1841,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1834,
																					"name": "_pair",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1813,
																					"src": "809:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1833,
																				"name": "IUniswapV2Pair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1372,
																				"src": "794:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1372_$",
																					"typeString": "type(contract IUniswapV2Pair)"
																				}
																			},
																			"id": 1835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "794:21:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV2Pair_$1372",
																				"typeString": "contract IUniswapV2Pair"
																			}
																		},
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1341,
																		"src": "794:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																			"typeString": "function () pure external returns (address)"
																		}
																	},
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "794:30:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1832,
																"name": "IERC20Metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "779:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1208_$",
																	"typeString": "type(contract IERC20Metadata)"
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "779:46:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$1208",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 1839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1207,
														"src": "779:55:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "779:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "762:74:10"
											},
											{
												"assignments": [
													1843
												],
												"declarations": [
													{
														"constant": false,
														"id": 1843,
														"mutability": "mutable",
														"name": "decimals",
														"nodeType": "VariableDeclaration",
														"scope": 1878,
														"src": "846:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1842,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "846:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1855,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1850,
																			"name": "_pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1813,
																			"src": "903:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1849,
																		"name": "IERC20Metadata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1208,
																		"src": "888:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1208_$",
																			"typeString": "type(contract IERC20Metadata)"
																		}
																	},
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "888:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Metadata_$1208",
																		"typeString": "contract IERC20Metadata"
																	}
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "decimals",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1207,
																"src": "888:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																	"typeString": "function () view external returns (uint8)"
																}
															},
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "888:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1846,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "876:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1844,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "865:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1577,
																"src": "865:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "865:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1593,
														"src": "865:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "865:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "846:75:10"
											},
											{
												"assignments": [
													1857,
													1859,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1857,
														"mutability": "mutable",
														"name": "reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1878,
														"src": "933:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1856,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "933:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1859,
														"mutability": "mutable",
														"name": "reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1878,
														"src": "951:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1858,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "951:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1865,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1861,
																	"name": "_pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "988:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1860,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "973:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1372_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "973:21:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1372",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1361,
														"src": "973:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "973:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "932:76:10"
											},
											{
												"expression": {
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1866,
														"name": "k_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "1018:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1050:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1873,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1843,
																	"src": "1054:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1050:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1869,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "1036:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1867,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1857,
																		"src": "1023:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1654,
																	"src": "1023:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1023:22:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1670,
															"src": "1023:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1023:40:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1018:45:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "1018:45:10"
											}
										]
									},
									"functionSelector": "490084ef",
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getKValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "_pair",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "620:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:15:10"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "k_",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "656:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:12:10"
									},
									"scope": 2019,
									"src": "601:469:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "1151:57:10",
										"statements": [
											{
												"expression": {
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1886,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "1161:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1199:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1888,
																				"name": "_pair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1881,
																				"src": "1180:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1887,
																			"name": "getKValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1879,
																			"src": "1170:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view returns (uint256)"
																			}
																		},
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1170:16:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sqrrt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1768,
																	"src": "1170:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1170:24:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1654,
															"src": "1170:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1170:31:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1161:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "1161:40:10"
											}
										]
									},
									"functionSelector": "68637549",
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "_pair",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "1099:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:15:10"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "1135:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1134:16:10"
									},
									"scope": 2019,
									"src": "1076:132:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1117
									],
									"body": {
										"id": 1938,
										"nodeType": "Block",
										"src": "1313:230:10",
										"statements": [
											{
												"assignments": [
													1909
												],
												"declarations": [
													{
														"constant": false,
														"id": 1909,
														"mutability": "mutable",
														"name": "totalValue",
														"nodeType": "VariableDeclaration",
														"scope": 1938,
														"src": "1323:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1908,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1323:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1913,
												"initialValue": {
													"arguments": [
														{
															"id": 1911,
															"name": "_pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "1358:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1910,
														"name": "getTotalValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "1344:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1344:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1323:41:10"
											},
											{
												"assignments": [
													1915
												],
												"declarations": [
													{
														"constant": false,
														"id": 1915,
														"mutability": "mutable",
														"name": "totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1938,
														"src": "1374:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1914,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1374:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1921,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1917,
																	"name": "_pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1900,
																	"src": "1411:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1916,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "1396:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1372_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1396:21:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1372",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1246,
														"src": "1396:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1396:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1374:57:10"
											},
											{
												"expression": {
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1922,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "1442:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653138",
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1531:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1927,
																						"name": "amount_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1902,
																						"src": "1486:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1928,
																						"name": "totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1915,
																						"src": "1495:11:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1925,
																						"name": "FixedPoint",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 878,
																						"src": "1466:10:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint_$878_$",
																							"typeString": "type(library FixedPoint)"
																						}
																					},
																					"id": 1926,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "fraction",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 803,
																					"src": "1466:19:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_struct$_uq112x112_$666_memory_ptr_$",
																						"typeString": "function (uint256,uint256) pure returns (struct FixedPoint.uq112x112 memory)"
																					}
																				},
																				"id": 1929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1466:41:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_uq112x112_$666_memory_ptr",
																					"typeString": "struct FixedPoint.uq112x112 memory"
																				}
																			},
																			"id": 1930,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "decode112with18",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 713,
																			"src": "1466:57:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_uq112x112_$666_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_uq112x112_$666_memory_ptr_$",
																				"typeString": "function (struct FixedPoint.uq112x112 memory) pure returns (uint256)"
																			}
																		},
																		"id": 1931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1466:59:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1923,
																		"name": "totalValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "1451:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1654,
																	"src": "1451:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1451:75:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1670,
															"src": "1451:79:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1451:85:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1442:94:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1937,
												"nodeType": "ExpressionStatement",
												"src": "1442:94:10"
											}
										]
									},
									"functionSelector": "4249719f",
									"id": 1939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "valuation",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1904,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1279:8:10"
									},
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "_pair",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "1233:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "1248:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1248:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:32:10"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "1297:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:16:10"
									},
									"scope": 2019,
									"src": "1214:329:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1108
									],
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "1623:462:10",
										"statements": [
											{
												"assignments": [
													1948,
													1950,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 2017,
														"src": "1634:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1947,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1634:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1950,
														"mutability": "mutable",
														"name": "reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 2017,
														"src": "1652:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1949,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1652:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1956,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1952,
																	"name": "_pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "1689:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1951,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "1674:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1372_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1674:21:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1372",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1361,
														"src": "1674:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1674:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1633:76:10"
											},
											{
												"assignments": [
													1958
												],
												"declarations": [
													{
														"constant": false,
														"id": 1958,
														"mutability": "mutable",
														"name": "reserve",
														"nodeType": "VariableDeclaration",
														"scope": 2017,
														"src": "1720:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1957,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1720:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1959,
												"nodeType": "VariableDeclarationStatement",
												"src": "1720:15:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 1961,
																		"name": "_pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "1764:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1960,
																	"name": "IUniswapV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1372,
																	"src": "1749:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1372_$",
																		"typeString": "type(contract IUniswapV2Pair)"
																	}
																},
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1749:21:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Pair_$1372",
																	"typeString": "contract IUniswapV2Pair"
																}
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1336,
															"src": "1749:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1749:30:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 1967,
																"name": "EXO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1789,
																"src": "1791:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1187",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$1187",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1783:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1965,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1783:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1783:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1749:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1993,
													"nodeType": "Block",
													"src": "1846:128:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1977,
																							"name": "_pair",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1941,
																							"src": "1883:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1976,
																						"name": "IUniswapV2Pair",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1372,
																						"src": "1868:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1372_$",
																							"typeString": "type(contract IUniswapV2Pair)"
																						}
																					},
																					"id": 1978,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1868:21:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IUniswapV2Pair_$1372",
																						"typeString": "contract IUniswapV2Pair"
																					}
																				},
																				"id": 1979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token1",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1341,
																				"src": "1868:28:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																					"typeString": "function () pure external returns (address)"
																				}
																			},
																			"id": 1980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1868:30:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1983,
																					"name": "EXO",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1789,
																					"src": "1910:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1187",
																						"typeString": "contract IERC20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC20_$1187",
																						"typeString": "contract IERC20"
																					}
																				],
																				"id": 1982,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1902:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1981,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1902:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1902:12:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1868:46:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c69642070616972",
																		"id": 1986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1916:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																			"typeString": "literal_string \"Invalid pair\""
																		},
																		"value": "Invalid pair"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																			"typeString": "literal_string \"Invalid pair\""
																		}
																	],
																	"id": 1975,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "1860:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1860:71:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1988,
															"nodeType": "ExpressionStatement",
															"src": "1860:71:10"
														},
														{
															"expression": {
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1989,
																	"name": "reserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1958,
																	"src": "1945:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1990,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1948,
																	"src": "1955:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1945:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1992,
															"nodeType": "ExpressionStatement",
															"src": "1945:18:10"
														}
													]
												},
												"id": 1994,
												"nodeType": "IfStatement",
												"src": "1745:229:10",
												"trueBody": {
													"id": 1974,
													"nodeType": "Block",
													"src": "1797:43:10",
													"statements": [
														{
															"expression": {
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1970,
																	"name": "reserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1958,
																	"src": "1811:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1971,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1950,
																	"src": "1821:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1811:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1973,
															"nodeType": "ExpressionStatement",
															"src": "1811:18:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2013,
																	"name": "_pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "2071:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2012,
																"name": "getTotalValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "2057:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2057:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 1997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2002:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 1998,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2007:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"id": 2002,
																											"name": "EXO",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1789,
																											"src": "2034:3:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$1187",
																												"typeString": "contract IERC20"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_contract$_IERC20_$1187",
																												"typeString": "contract IERC20"
																											}
																										],
																										"id": 2001,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "2026:7:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_$",
																											"typeString": "type(address)"
																										},
																										"typeName": {
																											"id": 2000,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "2026:7:10",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 2003,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "2026:12:10",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 1999,
																								"name": "IERC20Metadata",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1208,
																								"src": "2011:14:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1208_$",
																									"typeString": "type(contract IERC20Metadata)"
																								}
																							},
																							"id": 2004,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2011:28:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20Metadata_$1208",
																								"typeString": "contract IERC20Metadata"
																							}
																						},
																						"id": 2005,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "decimals",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1207,
																						"src": "2011:37:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																							"typeString": "function () view external returns (uint8)"
																						}
																					},
																					"id": 2006,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2011:39:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "2007:43:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2008,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2006:45:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2002:49:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1995,
																	"name": "reserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1958,
																	"src": "1990:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1654,
																"src": "1990:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1990:62:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1670,
														"src": "1990:66:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:88:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1946,
												"id": 2016,
												"nodeType": "Return",
												"src": "1983:95:10"
											}
										]
									},
									"functionSelector": "32da80a3",
									"id": 2018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "markdown",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1943,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1596:8:10"
									},
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "_pair",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "1567:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:15:10"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "1614:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:9:10"
									},
									"scope": 2019,
									"src": "1549:536:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2020,
							"src": "318:1769:10"
						}
					],
					"src": "37:2051:10"
				},
				"id": 10
			}
		}
	}
}