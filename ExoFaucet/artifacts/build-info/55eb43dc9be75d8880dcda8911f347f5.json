{
	"id": "55eb43dc9be75d8880dcda8911f347f5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"ExoFaucet/OhmFaucet.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity 0.7.5;\n\nimport \"./IERC20.sol\";\nimport \"./Ownable.sol\";\n\ncontract OhmFaucet is Ownable {\n    IERC20 public ohm;\n\n    constructor(address _ohm) {\n        ohm = IERC20(_ohm);\n    }\n\n    function setOhm(address _ohm) external onlyOwner {\n        ohm = IERC20(_ohm);\n    }\n\n    function dispense() external {\n        ohm.transfer(msg.sender, 1e9);\n    }\n}\n"
			},
			"ExoFaucet/Ownable.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity >=0.7.5;\n\nimport \"./IOwnable.sol\";\n\nabstract contract Ownable is IOwnable {\n    address internal _owner;\n    address internal _newOwner;\n\n    event OwnershipPushed(address indexed previousOwner, address indexed newOwner);\n    event OwnershipPulled(address indexed previousOwner, address indexed newOwner);\n\n    constructor() {\n        _owner = msg.sender;\n        emit OwnershipPushed(address(0), _owner);\n    }\n\n    function owner() public view override returns (address) {\n        return _owner;\n    }\n\n    modifier onlyOwner() {\n        require(_owner == msg.sender, \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    function renounceManagement() public virtual override onlyOwner {\n        emit OwnershipPulled(_owner, address(0));\n        _owner = address(0);\n        _newOwner = address(0);\n    }\n\n    function pushManagement(address newOwner_) public virtual override onlyOwner {\n        emit OwnershipPushed(_owner, newOwner_);\n        _newOwner = newOwner_;\n    }\n\n    function pullManagement() public virtual override {\n        require(msg.sender == _newOwner, \"Ownable: must be new owner to pull\");\n        emit OwnershipPulled(_owner, _newOwner);\n        _owner = _newOwner;\n        _newOwner = address(0);\n    }\n}\n"
			},
			"ExoFaucet/IERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"ExoFaucet/IOwnable.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity >=0.7.5;\n\ninterface IOwnable {\n    function owner() external view returns (address);\n\n    function renounceManagement() external;\n\n    function pushManagement(address newOwner_) external;\n\n    function pullManagement() external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ExoFaucet/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExoFaucet/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExoFaucet/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExoFaucet/IOwnable.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExoFaucet/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExoFaucet/IOwnable.sol\":{\"keccak256\":\"0x29d92f94f4517d948d3a314e89008ae96e189cc21d410d477ddfe3766e5d665a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://939c2fa81ad0f94c4c76754676f1db4340f1f1cba50cd20dbbb5a71be8945f65\",\"dweb:/ipfs/QmQzo16egRWr1BGdPh9AML4G2q1qG57vK4ChMcddDbm1r5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExoFaucet/OhmFaucet.sol": {
				"OhmFaucet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ohm",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPushed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "dispense",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ohm",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ohm",
									"type": "address"
								}
							],
							"name": "setOhm",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExoFaucet/OhmFaucet.sol\":109:403  contract OhmFaucet is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"ExoFaucet/OhmFaucet.sol\":169:230  constructor(address _ohm) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload\n    /* \"ExoFaucet/Ownable.sol\":397:403  _owner */\n  0x00\n    /* \"ExoFaucet/Ownable.sol\":397:416  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"ExoFaucet/Ownable.sol\":406:416  msg.sender */\n  caller\n    /* \"ExoFaucet/Ownable.sol\":397:416  _owner = msg.sender */\n  or\n  dup1\n  dup3\n  sstore\n    /* \"ExoFaucet/Ownable.sol\":431:466  OwnershipPushed(address(0), _owner) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ExoFaucet/Ownable.sol\":459:465  _owner */\n  swap2\n  swap1\n  swap2\n  and\n  swap2\n    /* \"ExoFaucet/Ownable.sol\":397:403  _owner */\n  swap1\n    /* \"ExoFaucet/Ownable.sol\":431:466  OwnershipPushed(address(0), _owner) */\n  0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n  swap1\n    /* \"ExoFaucet/Ownable.sol\":397:403  _owner */\n  dup3\n  swap1\n    /* \"ExoFaucet/Ownable.sol\":431:466  OwnershipPushed(address(0), _owner) */\n  log3\n    /* \"ExoFaucet/OhmFaucet.sol\":205:208  ohm */\n  0x02\n    /* \"ExoFaucet/OhmFaucet.sol\":205:223  ohm = IERC20(_ohm) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"ExoFaucet/OhmFaucet.sol\":109:403  contract OhmFaucet is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ExoFaucet/OhmFaucet.sol\":109:403  contract OhmFaucet is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x46f68ee9\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x46f68ee9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5a96ac0a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf9224d3c\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x02b1d239\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x089208d8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0adb1a9a\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ExoFaucet/OhmFaucet.sol\":145:162  IERC20 public ohm */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ExoFaucet/Ownable.sol\":691:873  function renounceManagement() public virtual override onlyOwner {... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"ExoFaucet/OhmFaucet.sol\":326:401  function dispense() external {... */\n    tag_5:\n      tag_13\n      tag_16\n      jump\t// in\n        /* \"ExoFaucet/Ownable.sol\":879:1043  function pushManagement(address newOwner_) public virtual override onlyOwner {... */\n    tag_6:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_19\n      jump\t// in\n        /* \"ExoFaucet/Ownable.sol\":1049:1295  function pullManagement() public virtual override {... */\n    tag_7:\n      tag_13\n      tag_21\n      jump\t// in\n        /* \"ExoFaucet/Ownable.sol\":479:565  function owner() public view override returns (address) {... */\n    tag_8:\n      tag_11\n      tag_23\n      jump\t// in\n        /* \"ExoFaucet/OhmFaucet.sol\":236:320  function setOhm(address _ohm) external onlyOwner {... */\n    tag_9:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_26\n      jump\t// in\n        /* \"ExoFaucet/OhmFaucet.sol\":145:162  IERC20 public ohm */\n    tag_12:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"ExoFaucet/Ownable.sol\":691:873  function renounceManagement() public virtual override onlyOwner {... */\n    tag_14:\n        /* \"ExoFaucet/Ownable.sol\":610:616  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"ExoFaucet/Ownable.sol\":620:630  msg.sender */\n      caller\n        /* \"ExoFaucet/Ownable.sol\":610:630  _owner == msg.sender */\n      eq\n        /* \"ExoFaucet/Ownable.sol\":602:667  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_28\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_28:\n        /* \"ExoFaucet/Ownable.sol\":802:803  0 */\n      0x00\n        /* \"ExoFaucet/Ownable.sol\":786:792  _owner */\n      dup1\n      sload\n        /* \"ExoFaucet/Ownable.sol\":770:805  OwnershipPulled(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExoFaucet/Ownable.sol\":786:792  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ExoFaucet/Ownable.sol\":770:805  OwnershipPulled(_owner, address(0)) */\n      0xaa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d\n      swap1\n        /* \"ExoFaucet/Ownable.sol\":802:803  0 */\n      dup4\n      swap1\n        /* \"ExoFaucet/Ownable.sol\":770:805  OwnershipPulled(_owner, address(0)) */\n      log3\n        /* \"ExoFaucet/Ownable.sol\":832:833  0 */\n      0x00\n        /* \"ExoFaucet/Ownable.sol\":815:834  _owner = address(0) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      0x01\n        /* \"ExoFaucet/Ownable.sol\":844:866  _newOwner = address(0) */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \"ExoFaucet/Ownable.sol\":691:873  function renounceManagement() public virtual override onlyOwner {... */\n      jump\t// out\n        /* \"ExoFaucet/OhmFaucet.sol\":326:401  function dispense() external {... */\n    tag_16:\n        /* \"ExoFaucet/OhmFaucet.sol\":365:368  ohm */\n      sload(0x02)\n        /* \"ExoFaucet/OhmFaucet.sol\":365:394  ohm.transfer(msg.sender, 1e9) */\n      0x40\n      dup1\n      mload\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"ExoFaucet/OhmFaucet.sol\":378:388  msg.sender */\n      caller\n        /* \"ExoFaucet/OhmFaucet.sol\":365:394  ohm.transfer(msg.sender, 1e9) */\n      0x04\n      dup3\n      add\n      mstore\n        /* \"ExoFaucet/OhmFaucet.sol\":390:393  1e9 */\n      0x3b9aca00\n        /* \"ExoFaucet/OhmFaucet.sol\":365:394  ohm.transfer(msg.sender, 1e9) */\n      0x24\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExoFaucet/OhmFaucet.sol\":365:368  ohm */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"ExoFaucet/OhmFaucet.sol\":365:377  ohm.transfer */\n      0xa9059cbb\n      swap2\n        /* \"ExoFaucet/OhmFaucet.sol\":365:394  ohm.transfer(msg.sender, 1e9) */\n      0x44\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ExoFaucet/OhmFaucet.sol\":365:368  ohm */\n      0x00\n      dup8\n        /* \"ExoFaucet/OhmFaucet.sol\":365:394  ohm.transfer(msg.sender, 1e9) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      pop\n        /* \"ExoFaucet/OhmFaucet.sol\":326:401  function dispense() external {... */\n      jump\t// out\n        /* \"ExoFaucet/Ownable.sol\":879:1043  function pushManagement(address newOwner_) public virtual override onlyOwner {... */\n    tag_19:\n        /* \"ExoFaucet/Ownable.sol\":610:616  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"ExoFaucet/Ownable.sol\":620:630  msg.sender */\n      caller\n        /* \"ExoFaucet/Ownable.sol\":610:630  _owner == msg.sender */\n      eq\n        /* \"ExoFaucet/Ownable.sol\":602:667  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_36\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_36:\n        /* \"ExoFaucet/Ownable.sol\":987:993  _owner */\n      0x00\n      dup1\n      sload\n        /* \"ExoFaucet/Ownable.sol\":971:1005  OwnershipPushed(_owner, newOwner_) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"ExoFaucet/Ownable.sol\":987:993  _owner */\n      swap3\n      and\n      swap2\n        /* \"ExoFaucet/Ownable.sol\":971:1005  OwnershipPushed(_owner, newOwner_) */\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      swap2\n      log3\n        /* \"ExoFaucet/Ownable.sol\":1015:1024  _newOwner */\n      0x01\n        /* \"ExoFaucet/Ownable.sol\":1015:1036  _newOwner = newOwner_ */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ExoFaucet/Ownable.sol\":879:1043  function pushManagement(address newOwner_) public virtual override onlyOwner {... */\n      jump\t// out\n        /* \"ExoFaucet/Ownable.sol\":1049:1295  function pullManagement() public virtual override {... */\n    tag_21:\n        /* \"ExoFaucet/Ownable.sol\":1131:1140  _newOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"ExoFaucet/Ownable.sol\":1117:1127  msg.sender */\n      caller\n        /* \"ExoFaucet/Ownable.sol\":1117:1140  msg.sender == _newOwner */\n      eq\n        /* \"ExoFaucet/Ownable.sol\":1109:1179  require(msg.sender == _newOwner, \"Ownable: must be new owner to pull\") */\n      tag_39\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_39:\n        /* \"ExoFaucet/Ownable.sol\":1218:1227  _newOwner */\n      sload(0x01)\n      0x00\n        /* \"ExoFaucet/Ownable.sol\":1210:1216  _owner */\n      dup1\n      sload\n        /* \"ExoFaucet/Ownable.sol\":1194:1228  OwnershipPulled(_owner, _newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExoFaucet/Ownable.sol\":1218:1227  _newOwner */\n      swap4\n      dup5\n      and\n      swap4\n        /* \"ExoFaucet/Ownable.sol\":1210:1216  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"ExoFaucet/Ownable.sol\":1194:1228  OwnershipPulled(_owner, _newOwner) */\n      0xaa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d\n      swap2\n      log3\n        /* \"ExoFaucet/Ownable.sol\":1247:1256  _newOwner */\n      0x01\n      dup1\n      sload\n      0x00\n        /* \"ExoFaucet/Ownable.sol\":1238:1256  _owner = _newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ExoFaucet/Ownable.sol\":1247:1256  _newOwner */\n      dup5\n      and\n        /* \"ExoFaucet/Ownable.sol\":1238:1256  _owner = _newOwner */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ExoFaucet/Ownable.sol\":1266:1288  _newOwner = address(0) */\n      and\n      swap1\n      sstore\n        /* \"ExoFaucet/Ownable.sol\":1049:1295  function pullManagement() public virtual override {... */\n      jump\t// out\n        /* \"ExoFaucet/Ownable.sol\":479:565  function owner() public view override returns (address) {... */\n    tag_23:\n        /* \"ExoFaucet/Ownable.sol\":526:533  address */\n      0x00\n        /* \"ExoFaucet/Ownable.sol\":552:558  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ExoFaucet/Ownable.sol\":479:565  function owner() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ExoFaucet/OhmFaucet.sol\":236:320  function setOhm(address _ohm) external onlyOwner {... */\n    tag_26:\n        /* \"ExoFaucet/Ownable.sol\":610:616  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"ExoFaucet/Ownable.sol\":620:630  msg.sender */\n      caller\n        /* \"ExoFaucet/Ownable.sol\":610:630  _owner == msg.sender */\n      eq\n        /* \"ExoFaucet/Ownable.sol\":602:667  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_42\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_42:\n        /* \"ExoFaucet/OhmFaucet.sol\":295:298  ohm */\n      0x02\n        /* \"ExoFaucet/OhmFaucet.sol\":295:313  ohm = IERC20(_ohm) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ExoFaucet/OhmFaucet.sol\":236:320  function setOhm(address _ohm) external onlyOwner {... */\n      jump\t// out\n    stop\n    data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c 4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c\n\n    auxdata: 0xa2646970667358221220120c194d0a7656fb823eb10094b33f520456351e1b26e31db55a2d770111e19b64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516105a63803806105a68339818101604052602081101561003357600080fd5b5051600080546001600160a01b03191633178082556040516001600160a01b039190911691907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908290a3600280546001600160a01b0319166001600160a01b03929092169190911790556104f9806100ad6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806346f68ee91161005b57806346f68ee9146100b85780635a96ac0a146100de5780638da5cb5b146100e6578063f9224d3c146100ee5761007d565b806302b1d23914610082578063089208d8146100a65780630adb1a9a146100b0575b600080fd5b61008a610114565b604080516001600160a01b039092168252519081900360200190f35b6100ae610123565b005b6100ae6101e5565b6100ae600480360360208110156100ce57600080fd5b50356001600160a01b0316610283565b6100ae61034a565b61008a610404565b6100ae6004803603602081101561010457600080fd5b50356001600160a01b0316610413565b6002546001600160a01b031681565b6000546001600160a01b03163314610182576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d908390a36000805473ffffffffffffffffffffffffffffffffffffffff19908116909155600180549091169055565b600254604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152633b9aca00602482015290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b15801561025557600080fd5b505af1158015610269573d6000803e3d6000fd5b505050506040513d602081101561027f57600080fd5b5050565b6000546001600160a01b031633146102e2576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a36001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b031633146103935760405162461bcd60e51b81526004018080602001828103825260228152602001806104a26022913960400191505060405180910390fd5b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03841617909155169055565b6000546001600160a01b031690565b6000546001600160a01b03163314610472576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905556fe4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca2646970667358221220120c194d0a7656fb823eb10094b33f520456351e1b26e31db55a2d770111e19b64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5A6 CODESIZE SUB DUP1 PUSH2 0x5A6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP1 DUP3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP1 DUP3 SWAP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x4F9 DUP1 PUSH2 0xAD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x46F68EE9 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xF9224D3C EQ PUSH2 0xEE JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2B1D239 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xADB1A9A EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH2 0x123 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH2 0x1E5 JUMP JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x283 JUMP JUMPDEST PUSH2 0xAE PUSH2 0x34A JUMP JUMPDEST PUSH2 0x8A PUSH2 0x404 JUMP JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x413 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x182 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH4 0x3B9ACA00 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x269 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x472 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206D757374206265206E6577206F776E6572 KECCAK256 PUSH21 0x6F2070756C6CA2646970667358221220120C194D0A PUSH23 0x56FB823EB10094B33F520456351E1B26E31DB55A2D7701 GT 0xE1 SWAP12 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "109:294:2:-:0;;;169:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;169:61:2;397:6:3;:19;;-1:-1:-1;;;;;;397:19:3;406:10;397:19;;;;431:35;;-1:-1:-1;;;;;459:6:3;;;;;397;431:35;;397:6;;431:35;205:3:2;:18;;-1:-1:-1;;;;;;205:18:2;-1:-1:-1;;;;;205:18:2;;;;;;;;;;109:294;;;-1:-1:-1;109:294:2;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c806346f68ee91161005b57806346f68ee9146100b85780635a96ac0a146100de5780638da5cb5b146100e6578063f9224d3c146100ee5761007d565b806302b1d23914610082578063089208d8146100a65780630adb1a9a146100b0575b600080fd5b61008a610114565b604080516001600160a01b039092168252519081900360200190f35b6100ae610123565b005b6100ae6101e5565b6100ae600480360360208110156100ce57600080fd5b50356001600160a01b0316610283565b6100ae61034a565b61008a610404565b6100ae6004803603602081101561010457600080fd5b50356001600160a01b0316610413565b6002546001600160a01b031681565b6000546001600160a01b03163314610182576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d908390a36000805473ffffffffffffffffffffffffffffffffffffffff19908116909155600180549091169055565b600254604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152633b9aca00602482015290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b15801561025557600080fd5b505af1158015610269573d6000803e3d6000fd5b505050506040513d602081101561027f57600080fd5b5050565b6000546001600160a01b031633146102e2576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a36001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b031633146103935760405162461bcd60e51b81526004018080602001828103825260228152602001806104a26022913960400191505060405180910390fd5b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03841617909155169055565b6000546001600160a01b031690565b6000546001600160a01b03163314610472576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905556fe4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca2646970667358221220120c194d0a7656fb823eb10094b33f520456351e1b26e31db55a2d770111e19b64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x46F68EE9 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xF9224D3C EQ PUSH2 0xEE JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2B1D239 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xADB1A9A EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH2 0x123 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH2 0x1E5 JUMP JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x283 JUMP JUMPDEST PUSH2 0xAE PUSH2 0x34A JUMP JUMPDEST PUSH2 0x8A PUSH2 0x404 JUMP JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x413 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x182 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH4 0x3B9ACA00 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x269 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x472 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206D757374206265206E6577206F776E6572 KECCAK256 PUSH21 0x6F2070756C6CA2646970667358221220120C194D0A PUSH23 0x56FB823EB10094B33F520456351E1B26E31DB55A2D7701 GT 0xE1 SWAP12 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "109:294:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;145:17;;;:::i;:::-;;;;-1:-1:-1;;;;;145:17:2;;;;;;;;;;;;;;691:182:3;;;:::i;:::-;;326:75:2;;;:::i;879:164:3:-;;;;;;;;;;;;;;;;-1:-1:-1;879:164:3;-1:-1:-1;;;;;879:164:3;;:::i;1049:246::-;;;:::i;479:86::-;;;:::i;236:84:2:-;;;;;;;;;;;;;;;;-1:-1:-1;236:84:2;-1:-1:-1;;;;;236:84:2;;:::i;145:17::-;;;-1:-1:-1;;;;;145:17:2;;:::o;691:182:3:-;610:6;;-1:-1:-1;;;;;610:6:3;620:10;610:20;602:65;;;;;-1:-1:-1;;;602:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:1:::1;786:6:::0;;770:35:::1;::::0;-1:-1:-1;;;;;786:6:3;;::::1;::::0;770:35:::1;::::0;802:1;;770:35:::1;832:1;815:19:::0;;-1:-1:-1;;815:19:3;;::::1;::::0;;;;844:22;;;;::::1;::::0;;691:182::o;326:75:2:-;365:3;;:29;;;;;;378:10;365:29;;;;390:3;365:29;;;;;;-1:-1:-1;;;;;365:3:2;;;;:12;;:29;;;;;;;;;;;;;;;:3;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;326:75:2:o;879:164:3:-;610:6;;-1:-1:-1;;;;;610:6:3;620:10;610:20;602:65;;;;;-1:-1:-1;;;602:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;987:6:::1;::::0;;971:34:::1;::::0;-1:-1:-1;;;;;971:34:3;;::::1;::::0;987:6;::::1;::::0;971:34:::1;::::0;::::1;1015:9;:21:::0;;-1:-1:-1;;1015:21:3::1;-1:-1:-1::0;;;;;1015:21:3;;;::::1;::::0;;;::::1;::::0;;879:164::o;1049:246::-;1131:9;;-1:-1:-1;;;;;1131:9:3;1117:10;:23;1109:70;;;;-1:-1:-1;;;1109:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1218:9;;;1210:6;;1194:34;;-1:-1:-1;;;;;1218:9:3;;;;1210:6;;;;1194:34;;;1247:9;;;;1238:18;;-1:-1:-1;;1238:18:3;;;-1:-1:-1;;;;;1247:9:3;;1238:18;;;;1266:22;;;1049:246::o;479:86::-;526:7;552:6;-1:-1:-1;;;;;552:6:3;479:86;:::o;236:84:2:-;610:6:3;;-1:-1:-1;;;;;610:6:3;620:10;610:20;602:65;;;;;-1:-1:-1;;;602:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;295:3:2::1;:18:::0;;-1:-1:-1;;295:18:2::1;-1:-1:-1::0;;;;;295:18:2;;;::::1;::::0;;;::::1;::::0;;236:84::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "254600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"dispense()": "infinite",
								"ohm()": "1038",
								"owner()": "1081",
								"pullManagement()": "infinite",
								"pushManagement(address)": "24255",
								"renounceManagement()": "45003",
								"setOhm(address)": "21967"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 403,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 109,
									"end": 403,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 109,
									"end": 403,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 230,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 230,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 230,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 230,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 230,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 169,
									"end": 230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 169,
									"end": 230,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 230,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 169,
									"end": 230,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 169,
									"end": 230,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 169,
									"end": 230,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 397,
									"end": 403,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 397,
									"end": 416,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 397,
									"end": 416,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 397,
									"end": 416,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 416,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 397,
									"end": 416,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 397,
									"end": 416,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 397,
									"end": 416,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 397,
									"end": 416,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 431,
									"end": 466,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 431,
									"end": 466,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 459,
									"end": 465,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 459,
									"end": 465,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 459,
									"end": 465,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 459,
									"end": 465,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 459,
									"end": 465,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 397,
									"end": 403,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 431,
									"end": 466,
									"name": "PUSH",
									"source": 3,
									"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
								},
								{
									"begin": 431,
									"end": 466,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 397,
									"end": 403,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 397,
									"end": 403,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 431,
									"end": 466,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 208,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 205,
									"end": 223,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 205,
									"end": 223,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 205,
									"end": 223,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 205,
									"end": 223,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 205,
									"end": 223,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 205,
									"end": 223,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 205,
									"end": 223,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 205,
									"end": 223,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 205,
									"end": 223,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 205,
									"end": 223,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 205,
									"end": 223,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 205,
									"end": 223,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 205,
									"end": 223,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 109,
									"end": 403,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 403,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 109,
									"end": 403,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 403,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 109,
									"end": 403,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 403,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220120c194d0a7656fb823eb10094b33f520456351e1b26e31db55a2d770111e19b64736f6c63430007050033",
									".code": [
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "46F68EE9"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "46F68EE9"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "5A96AC0A"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "F9224D3C"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "2B1D239"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "89208D8"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "ADB1A9A"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 109,
											"end": 403,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 145,
											"end": 162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 145,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 145,
											"end": 162,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 162,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 145,
											"end": 162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 145,
											"end": 162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 145,
											"end": 162,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 691,
											"end": 873,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 691,
											"end": 873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 691,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 691,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 691,
											"end": 873,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 691,
											"end": 873,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 691,
											"end": 873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 691,
											"end": 873,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 326,
											"end": 401,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 326,
											"end": 401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 326,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 326,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 326,
											"end": 401,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 479,
											"end": 565,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 479,
											"end": 565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 479,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 479,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 479,
											"end": 565,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 236,
											"end": 320,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 236,
											"end": 320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 236,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 236,
											"end": 320,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 236,
											"end": 320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 236,
											"end": 320,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 236,
											"end": 320,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 236,
											"end": 320,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 236,
											"end": 320,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 236,
											"end": 320,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 236,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 236,
											"end": 320,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 236,
											"end": 320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 236,
											"end": 320,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 236,
											"end": 320,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 236,
											"end": 320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 236,
											"end": 320,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 236,
											"end": 320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 236,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 236,
											"end": 320,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 162,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 145,
											"end": 162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 162,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 145,
											"end": 162,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 145,
											"end": 162,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 691,
											"end": 873,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 691,
											"end": 873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 610,
											"end": 616,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 616,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 610,
											"end": 616,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 620,
											"end": 630,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 610,
											"end": 630,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 792,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 792,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 770,
											"end": 805,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 805,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 786,
											"end": 792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 786,
											"end": 792,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 786,
											"end": 792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 770,
											"end": 805,
											"name": "PUSH",
											"source": 3,
											"value": "AA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D"
										},
										{
											"begin": 770,
											"end": 805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 802,
											"end": 803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 770,
											"end": 805,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 832,
											"end": 833,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 815,
											"end": 834,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 815,
											"end": 834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 815,
											"end": 834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 815,
											"end": 834,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 815,
											"end": 834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 815,
											"end": 834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 815,
											"end": 834,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 815,
											"end": 834,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 844,
											"end": 866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 844,
											"end": 866,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 844,
											"end": 866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 844,
											"end": 866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 844,
											"end": 866,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 844,
											"end": 866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 844,
											"end": 866,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 691,
											"end": 873,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 326,
											"end": 401,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 326,
											"end": 401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 365,
											"end": 368,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 378,
											"end": 388,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 390,
											"end": 393,
											"name": "PUSH",
											"source": 2,
											"value": "3B9ACA00"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 365,
											"end": 368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 368,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 368,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 365,
											"end": 368,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 377,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 365,
											"end": 377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 368,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 365,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 365,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 326,
											"end": 401,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 610,
											"end": 616,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 616,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 610,
											"end": 616,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 620,
											"end": 630,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 610,
											"end": 630,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 987,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 987,
											"end": 993,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1005,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1005,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 971,
											"end": 1005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1005,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1005,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 987,
											"end": 993,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 987,
											"end": 993,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 987,
											"end": 993,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1005,
											"name": "PUSH",
											"source": 3,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 971,
											"end": 1005,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1005,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1036,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 879,
											"end": 1043,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1140,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1131,
											"end": 1140,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1131,
											"end": 1140,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1127,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "PUSH data",
											"source": 3,
											"value": "4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C"
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1109,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1194,
											"end": 1228,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "AA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D"
										},
										{
											"begin": 1194,
											"end": 1228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1228,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1256,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1247,
											"end": 1256,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1256,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1256,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1256,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1256,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1295,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 479,
											"end": 565,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 479,
											"end": 565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 526,
											"end": 533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 558,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 552,
											"end": 558,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 479,
											"end": 565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 479,
											"end": 565,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 236,
											"end": 320,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 236,
											"end": 320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 610,
											"end": 616,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 616,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 610,
											"end": 616,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 620,
											"end": 630,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 610,
											"end": 630,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 602,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 602,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 298,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 295,
											"end": 313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 313,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 295,
											"end": 313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 295,
											"end": 313,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 313,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 295,
											"end": 313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 313,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 295,
											"end": 313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 313,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 236,
											"end": 320,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									],
									".data": {
										"4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c"
									}
								}
							}
						},
						"methodIdentifiers": {
							"dispense()": "0adb1a9a",
							"ohm()": "02b1d239",
							"owner()": "8da5cb5b",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8",
							"setOhm(address)": "f9224d3c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ohm\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"dispense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ohm\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ohm\",\"type\":\"address\"}],\"name\":\"setOhm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExoFaucet/OhmFaucet.sol\":\"OhmFaucet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExoFaucet/IERC20.sol\":{\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fdb71c90b122d9421c799a6b89d8f2c1aba66be1ce2b51d57ba8effb89d73a9c\",\"dweb:/ipfs/QmboLxPYNXFfF7Bc3vprbp9a7UFqC5EaU2ARK7oFZYCBYB\"]},\"ExoFaucet/IOwnable.sol\":{\"keccak256\":\"0x29d92f94f4517d948d3a314e89008ae96e189cc21d410d477ddfe3766e5d665a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://939c2fa81ad0f94c4c76754676f1db4340f1f1cba50cd20dbbb5a71be8945f65\",\"dweb:/ipfs/QmQzo16egRWr1BGdPh9AML4G2q1qG57vK4ChMcddDbm1r5\"]},\"ExoFaucet/OhmFaucet.sol\":{\"keccak256\":\"0x6d0f4912d582c95b7f5a18b35aab24cb4defbeb27b6eb34ae4709a8b0e176cdc\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7092b93767f52d0d553767065b1a5ab0ca920b88aeb46a2410492f93472a3af4\",\"dweb:/ipfs/QmT6oGGNKrWoBXc2V8mmRgJ6kVK2mw7tYuyhP8nss9Ps7v\"]},\"ExoFaucet/Ownable.sol\":{\"keccak256\":\"0xb420421cf6e2ca598529c6ed1f1bad4cdbc7c95b43291c66e79b0bff4bef4447\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://6a25dbd464342457178145a32cb652c34e22e65ebefe61edfc762e34f0995e10\",\"dweb:/ipfs/QmP9PUF6sbDpjRbhGHzwdx4N35DpjNDWJGjbk4J3yaZsvn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 141,
								"contract": "ExoFaucet/OhmFaucet.sol:OhmFaucet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 143,
								"contract": "ExoFaucet/OhmFaucet.sol:OhmFaucet",
								"label": "_newOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 95,
								"contract": "ExoFaucet/OhmFaucet.sol:OhmFaucet",
								"label": "ohm",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)68"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)68": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExoFaucet/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPushed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExoFaucet/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"ExoFaucet/IOwnable.sol\":{\"keccak256\":\"0x29d92f94f4517d948d3a314e89008ae96e189cc21d410d477ddfe3766e5d665a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://939c2fa81ad0f94c4c76754676f1db4340f1f1cba50cd20dbbb5a71be8945f65\",\"dweb:/ipfs/QmQzo16egRWr1BGdPh9AML4G2q1qG57vK4ChMcddDbm1r5\"]},\"ExoFaucet/Ownable.sol\":{\"keccak256\":\"0xb420421cf6e2ca598529c6ed1f1bad4cdbc7c95b43291c66e79b0bff4bef4447\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://6a25dbd464342457178145a32cb652c34e22e65ebefe61edfc762e34f0995e10\",\"dweb:/ipfs/QmP9PUF6sbDpjRbhGHzwdx4N35DpjNDWJGjbk4J3yaZsvn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 141,
								"contract": "ExoFaucet/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 143,
								"contract": "ExoFaucet/Ownable.sol:Ownable",
								"label": "_newOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ExoFaucet/IERC20.sol": {
				"ast": {
					"absolutePath": "ExoFaucet/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							68
						]
					},
					"id": 69,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "106:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "132:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:9:0"
									},
									"scope": 68,
									"src": "86:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "166:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:17:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "206:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:0"
									},
									"scope": 68,
									"src": "147:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "239:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:35:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "292:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "292:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:6:0"
									},
									"scope": 68,
									"src": "221:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "323:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "338:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:32:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "378:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:9:0"
									},
									"scope": 68,
									"src": "304:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "410:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "427:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:33:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "461:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "461:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:6:0"
									},
									"scope": 68,
									"src": "393:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "504:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "555:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:81:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "594:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "594:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:6:0"
									},
									"scope": 68,
									"src": "473:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 59,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "621:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "643:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:57:0"
									},
									"src": "606:72:0"
								},
								{
									"anonymous": false,
									"id": 67,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "699:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "722:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "747:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:63:0"
									},
									"src": "684:78:0"
								}
							],
							"scope": 69,
							"src": "63:701:0"
						}
					],
					"src": "37:728:0"
				},
				"id": 0
			},
			"ExoFaucet/IOwnable.sol": {
				"ast": {
					"absolutePath": "ExoFaucet/IOwnable.sol",
					"exportedSymbols": {
						"IOwnable": [
							87
						]
					},
					"id": 88,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 70,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 87,
							"linearizedBaseContracts": [
								87
							],
							"name": "IOwnable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8da5cb5b",
									"id": 75,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "102:2:1"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "128:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "128:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "127:9:1"
									},
									"scope": 87,
									"src": "88:49:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "089208d8",
									"id": 78,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "170:2:1"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "181:0:1"
									},
									"scope": 87,
									"src": "143:39:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46f68ee9",
									"id": 83,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pushManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "newOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "212:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "211:19:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:0:1"
									},
									"scope": 87,
									"src": "188:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a96ac0a",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pullManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "269:2:1"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "280:0:1"
									},
									"scope": 87,
									"src": "246:35:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 88,
							"src": "63:220:1"
						}
					],
					"src": "37:247:1"
				},
				"id": 1
			},
			"ExoFaucet/OhmFaucet.sol": {
				"ast": {
					"absolutePath": "ExoFaucet/OhmFaucet.sol",
					"exportedSymbols": {
						"IERC20": [
							68
						],
						"IOwnable": [
							87
						],
						"OhmFaucet": [
							134
						],
						"Ownable": [
							270
						]
					},
					"id": 135,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 89,
							"literals": [
								"solidity",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:2"
						},
						{
							"absolutePath": "ExoFaucet/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 90,
							"nodeType": "ImportDirective",
							"scope": 135,
							"sourceUnit": 69,
							"src": "61:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExoFaucet/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 91,
							"nodeType": "ImportDirective",
							"scope": 135,
							"sourceUnit": 271,
							"src": "84:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 92,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 270,
										"src": "131:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$270",
											"typeString": "contract Ownable"
										}
									},
									"id": 93,
									"nodeType": "InheritanceSpecifier",
									"src": "131:7:2"
								}
							],
							"contractDependencies": [
								87,
								270
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134,
								270,
								87
							],
							"name": "OhmFaucet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "02b1d239",
									"id": 95,
									"mutability": "mutable",
									"name": "ohm",
									"nodeType": "VariableDeclaration",
									"scope": 134,
									"src": "145:17:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$68",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 94,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 68,
										"src": "145:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$68",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "195:35:2",
										"statements": [
											{
												"expression": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 100,
														"name": "ohm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "205:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$68",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 102,
																"name": "_ohm",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "218:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "211:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "211:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$68",
															"typeString": "contract IERC20"
														}
													},
													"src": "205:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$68",
														"typeString": "contract IERC20"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "205:18:2"
											}
										]
									},
									"id": 107,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_ohm",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "181:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "180:14:2"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "195:0:2"
									},
									"scope": 134,
									"src": "169:61:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "285:35:2",
										"statements": [
											{
												"expression": {
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 114,
														"name": "ohm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "295:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$68",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 116,
																"name": "_ohm",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "308:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 115,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "301:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "301:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$68",
															"typeString": "contract IERC20"
														}
													},
													"src": "295:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$68",
														"typeString": "contract IERC20"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "295:18:2"
											}
										]
									},
									"functionSelector": "f9224d3c",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 112,
											"modifierName": {
												"id": 111,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 193,
												"src": "275:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "275:9:2"
										}
									],
									"name": "setOhm",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "_ohm",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "252:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:14:2"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:0:2"
									},
									"scope": 134,
									"src": "236:84:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "355:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 127,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "378:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "378:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"hexValue": "316539",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "390:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"value": "1e9"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															}
														],
														"expression": {
															"id": 124,
															"name": "ohm",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "365:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "365:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "365:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "365:29:2"
											}
										]
									},
									"functionSelector": "0adb1a9a",
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dispense",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "343:2:2"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:0:2"
									},
									"scope": 134,
									"src": "326:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 135,
							"src": "109:294:2"
						}
					],
					"src": "37:367:2"
				},
				"id": 2
			},
			"ExoFaucet/Ownable.sol": {
				"ast": {
					"absolutePath": "ExoFaucet/Ownable.sol",
					"exportedSymbols": {
						"IOwnable": [
							87
						],
						"Ownable": [
							270
						]
					},
					"id": 271,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:3"
						},
						{
							"absolutePath": "ExoFaucet/IOwnable.sol",
							"file": "./IOwnable.sol",
							"id": 137,
							"nodeType": "ImportDirective",
							"scope": 271,
							"sourceUnit": 88,
							"src": "72:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "IOwnable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 87,
										"src": "127:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOwnable_$87",
											"typeString": "contract IOwnable"
										}
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "127:8:3"
								}
							],
							"contractDependencies": [
								87
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 270,
							"linearizedBaseContracts": [
								270,
								87
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 270,
									"src": "142:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 140,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "142:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 143,
									"mutability": "mutable",
									"name": "_newOwner",
									"nodeType": "VariableDeclaration",
									"scope": 270,
									"src": "171:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 142,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "171:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 149,
									"name": "OwnershipPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "226:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "257:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "225:57:3"
									},
									"src": "204:79:3"
								},
								{
									"anonymous": false,
									"id": 155,
									"name": "OwnershipPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "310:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "341:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:57:3"
									},
									"src": "288:79:3"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "387:86:3",
										"statements": [
											{
												"expression": {
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 158,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "397:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 159,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "406:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "406:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "397:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "397:19:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "455:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "447:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 164,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "447:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "447:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 168,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "459:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 163,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "431:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "431:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "EmitStatement",
												"src": "426:40:3"
											}
										]
									},
									"id": 172,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:2:3"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "387:0:3"
									},
									"scope": 270,
									"src": "373:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										75
									],
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "535:30:3",
										"statements": [
											{
												"expression": {
													"id": 178,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "552:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 177,
												"id": 179,
												"nodeType": "Return",
												"src": "545:13:3"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 174,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "508:8:3"
									},
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "493:2:3"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "526:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:9:3"
									},
									"scope": 270,
									"src": "479:86:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "592:93:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 184,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "610:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 185,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "620:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "620:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "610:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "632:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "602:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "602:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "602:65:3"
											},
											{
												"id": 191,
												"nodeType": "PlaceholderStatement",
												"src": "677:1:3"
											}
										]
									},
									"id": 193,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:2:3"
									},
									"src": "571:114:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										78
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "755:118:3",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 200,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "786:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "802:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "794:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 201,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "794:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 199,
														"name": "OwnershipPulled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "770:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "770:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "EmitStatement",
												"src": "765:40:3"
											},
											{
												"expression": {
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 207,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "815:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "832:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "824:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 208,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "824:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "824:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "815:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "815:19:3"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 214,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "844:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "864:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "856:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 215,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "856:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "856:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "844:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "844:22:3"
											}
										]
									},
									"functionSelector": "089208d8",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 197,
											"modifierName": {
												"id": 196,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 193,
												"src": "745:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "745:9:3"
										}
									],
									"name": "renounceManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 195,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "736:8:3"
									},
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "718:2:3"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "755:0:3"
									},
									"scope": 270,
									"src": "691:182:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										83
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "956:87:3",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 231,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "987:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 232,
															"name": "newOwner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "995:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 230,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "971:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "971:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "EmitStatement",
												"src": "966:39:3"
											},
											{
												"expression": {
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 235,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1015:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 236,
														"name": "newOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "1027:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1015:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "1015:21:3"
											}
										]
									},
									"functionSelector": "46f68ee9",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 228,
											"modifierName": {
												"id": 227,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 193,
												"src": "946:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "946:9:3"
										}
									],
									"name": "pushManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 226,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "937:8:3"
									},
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "newOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "903:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:19:3"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "956:0:3"
									},
									"scope": 270,
									"src": "879:164:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										86
									],
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1099:196:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 245,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "1117:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1117:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 247,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1131:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1117:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c",
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1142:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
																"typeString": "literal_string \"Ownable: must be new owner to pull\""
															},
															"value": "Ownable: must be new owner to pull"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
																"typeString": "literal_string \"Ownable: must be new owner to pull\""
															}
														],
														"id": 244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1109:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1109:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "1109:70:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 253,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1210:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1218:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 252,
														"name": "OwnershipPulled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "1194:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1194:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "EmitStatement",
												"src": "1189:39:3"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 257,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "1238:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1247:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1238:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "1238:18:3"
											},
											{
												"expression": {
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 261,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1266:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1286:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1278:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 262,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1278:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1278:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1266:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "1266:22:3"
											}
										]
									},
									"functionSelector": "5a96ac0a",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pullManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 242,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1090:8:3"
									},
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1072:2:3"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1099:0:3"
									},
									"scope": 270,
									"src": "1049:246:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 271,
							"src": "98:1199:3"
						}
					],
					"src": "46:1252:3"
				},
				"id": 3
			}
		}
	}
}